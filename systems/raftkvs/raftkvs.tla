-------------------------------- MODULE raftkvs --------------------------------

\* Raft consensus protocol specification based on the TLA+ spec from
\* https://github.com/ongardie/raft.tla.
\*
\* We used limited buffer sized network channels to improve model checking 
\* perofmance. Also leader election part of Raft is not live by design.
\* These two can cause deadlock, so don't check deadlocks in model checking.
\*
\* Properties are defined based on the presented properties in the original 
\* Raft paper. See figure 3 in https://raft.github.io/raft.pdf.

EXTENDS Naturals, Sequences, TLC, FiniteSets

CONSTANT ExploreFail
CONSTANT Debug

CONSTANT NumServers
CONSTANT NumClients

CONSTANT BufferSize

CONSTANT MaxTerm
CONSTANT MaxCommitIndex

CONSTANT MaxNodeFail

CONSTANT LogConcat
CONSTANT LogPop

CONSTANT LeaderTimeoutReset

\* This is only used for model checking / simulation
CONSTANT NumRequests

Nil == 0

RECURSIVE MinAcc(_, _), MaxAcc(_, _)

Min(s) ==
    LET e == CHOOSE e \in s : TRUE
    IN MinAcc(s \ { e }, e)

MinAcc(s, e1) ==
    IF s = {} THEN e1
    ELSE
        LET e2 == CHOOSE e2 \in s : TRUE
        IN MinAcc(s \ { e2 }, IF e2 < e1 THEN e2 ELSE e1)

Max(s) ==
    LET e == CHOOSE e \in s : TRUE
    IN MaxAcc(s \ { e }, e)

MaxAcc(s, e1) ==
    IF s = {} THEN e1
    ELSE
        LET e2 == CHOOSE e2 \in s : TRUE
        IN MaxAcc(s \ { e2 }, IF e2 > e1 THEN e2 ELSE e1)

RECURSIVE FindMaxAgreeIndexRec(_, _, _, _)

isQuorum(s) == Cardinality(s) * 2 > NumServers
ServerSet   == 1..NumServers

FindMaxAgreeIndex(logLocal, i, matchIndex) ==
    FindMaxAgreeIndexRec(logLocal, i, matchIndex, Len(logLocal))

FindMaxAgreeIndexRec(logLocal, i, matchIndex, index) ==
    IF index = 0 THEN Nil
    ELSE
        IF isQuorum({i} \cup {k \in ServerSet : matchIndex[k] >= index})
        THEN index
        ELSE FindMaxAgreeIndexRec(logLocal, i, matchIndex, index - 1)

RECURSIVE ApplyLog(_, _, _, _, _)

Put == "put"
Get == "get"

ApplyLogEntry(xentry, xsm, xsmDomain) ==
    LET cmd == xentry.cmd
    IN IF cmd.type = Put
       THEN <<xsm @@ (cmd.key :> cmd.value), xsmDomain \cup {cmd.key}>>
       ELSE <<xsm, xsmDomain>>

\* applies range [start, end] from the log to the state machine
ApplyLog(xlog, start, end, xsm, xsmDomain) == 
    IF start > end
    THEN <<xsm, xsmDomain>>
    ELSE
        LET result == ApplyLogEntry(xlog[start], xsm, xsmDomain)
        IN ApplyLog(xlog, start+1, end, result[1], result[2])

CONSTANT AllStrings
ASSUME AllStrings \subseteq STRING

AllReqs == [
    type: {Put},
    key: AllStrings,
    value: AllStrings
] \cup [
    type: {Get},
    key: AllStrings
]

(********************

--mpcal raftkvs {
    define {
        Follower  == "follower"
        Candidate == "candidate"
        Leader    == "leader"

        RequestVoteRequest    == "rvq"
        RequestVoteResponse   == "rvp"
        AppendEntriesRequest  == "apq"
        AppendEntriesResponse == "app"
        ClientPutRequest      == "cpq"
        ClientPutResponse     == "cpp"
        ClientGetRequest      == "cgq"
        ClientGetResponse     == "cgp"

        LastTerm(xlog) == IF Len(xlog) = 0 THEN 0 ELSE xlog[Len(xlog)].term

        ServerRequestVoteSet        == (1*NumServers+1)..(2*NumServers)
        ServerAppendEntriesSet      == (2*NumServers+1)..(3*NumServers)
        ServerAdvanceCommitIndexSet == (3*NumServers+1)..(4*NumServers)
        ServerBecomeLeaderSet       == (4*NumServers+1)..(5*NumServers)

        ServerCrasherSet == IF ExploreFail 
                            THEN (5*NumServers+1)..(5*NumServers+MaxNodeFail)
                            ELSE {}

        ClientSet == (6*NumServers+1)..(6*NumServers+NumClients)

        NodeSet   == ServerSet \cup ClientSet

        KeySet == {}
    }

    macro checkFail(selfId, netEnabled) {
        if (ExploreFail) {
            if (\lnot netEnabled[selfId]) {
                await FALSE;
                \* goto Done;
            };
        };
    }

    macro debug(toPrint) {
        if (Debug) {
            print toPrint;
        };
    }

    macro Send(net, dest, fd, m) {
        either {
            net[dest] := m;
        } or {
            await fd[dest];
        };
    }

    macro UpdateTerm(i, m, currentTerm, state, votedFor, leader) {
        if (m.mterm > currentTerm[i]) {
            currentTerm[i] := m.mterm;
            state[i]       := Follower;
            votedFor[i]    := Nil;
            leader[i]      := Nil;
        };
    }

    mapping macro ReliableFIFOLink {
        read {
            assert $variable.enabled;
            await Cardinality($variable.queue) > 0;
            with (readMsg \in $variable.queue) {
                $variable := [queue |-> $variable.queue \ {readMsg}, enabled |-> $variable.enabled];
                yield readMsg;
            };
        }

        write {
            await $variable.enabled;
            await Cardinality($variable.queue) < BufferSize;
            yield [queue |-> $variable.queue \cup {$value}, enabled |-> $variable.enabled];
        }
    }

    mapping macro NetworkToggle {
        read { yield $variable.enabled; }

        write {
            yield [queue |-> $variable.queue, enabled |-> $value];
        }
    }

    mapping macro PerfectFD {
        read {
            yield $variable;
        }

        write { yield $value; }
    }

    mapping macro NetworkBufferLength {
        read {
            with(len \in 0..Cardinality($variable.queue)) {
                yield len;
            }
        }

        write {
            assert FALSE;
            yield $value;
        }
    }

    mapping macro Channel {
        read {
            either {
                await Len($variable) > 0;
                with (res = Head($variable)) {
                    $variable := Tail($variable);
                    yield res;
                };
            } or {
                \* consistent in-memory channel can check this
                await $variable = <<>>;
                yield TRUE;
            };
        }

        write {
            yield Append($variable, $value);
        }
    }

    mapping macro RequestsChannel {
        read {
            with(req \in AllReqs) {
                yield req;
            }
        }

        write {
            assert FALSE;
        }
    }

    mapping macro PersistentLog {
        read {
            yield $variable;
        }

        write {
            if ($value.cmd = LogConcat) {
                yield $variable \o $value.entries;
            } else if ($value.cmd = LogPop) {
                yield SubSeq($variable, 1, Len($variable) - $value.cnt);
            };
        }
    }

    mapping macro LeaderTimeout {
        read {
            either { yield TRUE; } or { yield FALSE; };
        }
        write {
            assert FALSE;
        }
    }

    archetype AServer(
        srvId,
        ref net[_], ref netLen[_], ref netEnabled[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        \* added by Shayan
        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout,
        ref appendEntriesCh[_], ref becomeLeaderCh[_]
    )
    variables
        idx = 1,
        m;
    {
    serverLoop:
        while (TRUE) {
            checkFail(self, netEnabled);

            m := net[self];
            assert m.mdest = self;

        handleMsg:
            checkFail(self, netEnabled);

            if (m.mtype = RequestVoteRequest) {
                UpdateTerm(self, m, currentTerm, state, votedFor, leader);

                \* HandleRequestVoteRequest
                with (
                    i = self, j = m.msource,
                    logOK = \/ m.mlastLogTerm > LastTerm(log[i])
                            \/ /\ m.mlastLogTerm = LastTerm(log[i])
                               /\ m.mlastLogIndex >= Len(log[i]),
                    grant = /\ m.mterm = currentTerm[i]
                            /\ logOK
                            /\ votedFor[self] \in {Nil, j}
                ) {
                    assert m.mterm <= currentTerm[i];
                    if (grant) {
                        votedFor[i] := j;
                    };
                    Send(net, j, fd, [
                        mtype        |-> RequestVoteResponse,
                        mterm        |-> currentTerm[i],
                        mvoteGranted |-> grant,
                        msource      |-> i,
                        mdest        |-> j
                    ]);

                    debug(<<"HandleRequestVoteRequest", i, j, currentTerm[i], grant>>);
                };
            } else if (m.mtype = RequestVoteResponse) {
                UpdateTerm(self, m, currentTerm, state, votedFor, leader);

                \* DropStaleResponse
                if (m.mterm < currentTerm[self]) {
                    \* goto serverLoop;
                    skip;
                } else {
                    \* HandleRequestVoteResponse
                    with (i = self, j = m.msource) {
                        assert m.mterm = currentTerm[i];
                        votesResponded[i] := votesResponded[i] \cup {j};
                        if (m.mvoteGranted) {
                            votesGranted[i] := votesGranted[i] \cup {j};
                            if (
                                /\ state[i] = Candidate
                                /\ isQuorum(votesGranted[i])
                            ) {
                                becomeLeaderCh[i] := TRUE;
                            };
                        }; 
                    };
                };
            } else if (m.mtype = AppendEntriesRequest) {
                UpdateTerm(self, m, currentTerm, state, votedFor, leader);

                \* HandleAppendEntriesRequest
                with (
                    i = self, j = m.msource,
                    logOK = \/ m.mprevLogIndex = 0
                            \/ /\ m.mprevLogIndex > 0
                               /\ m.mprevLogIndex <= Len(log[i])
                               /\ m.mprevLogTerm = log[i][m.mprevLogIndex].term
                ) {
                    assert m.mterm <= currentTerm[i];

                    if (m.mterm = currentTerm[i]) {
                        leader[i] := m.msource;
                        leaderTimeout := LeaderTimeoutReset;
                    };

                    \* return to follower state
                    if (
                        /\ m.mterm = currentTerm[i]
                        /\ state[i] = Candidate
                    ) {
                        state[i] := Follower;
                    };

                    \* reject request
                    if (
                        \/ m.mterm < currentTerm[i]
                        \/ /\ m.mterm = currentTerm[i]
                           /\ state[i] = Follower
                           /\ \lnot logOK
                    ) {
                        Send(net, j, fd, [
                            mtype       |-> AppendEntriesResponse,
                            mterm       |-> currentTerm[i],
                            msuccess    |-> FALSE,
                            mmatchIndex |-> 0,
                            msource     |-> i,
                            mdest       |-> j
                        ]);
                    }
                    \* accept request
                    else {
                        assert (
                            /\ m.mterm = currentTerm[i]
                            /\ state[i] = Follower
                            /\ logOK
                        );
                        with (index = m.mprevLogIndex + 1) {
                            plog[i] := [
                                cmd |-> LogPop, 
                                cnt |-> Len(log[i]) - m.mprevLogIndex
                            ];
                            log[i]  := SubSeq(log[i], 1, m.mprevLogIndex);

                            plog[i] := [
                                cmd     |-> LogConcat, 
                                entries |-> m.mentries
                            ];
                            log[i]  := log[i] \o m.mentries;

                            assert m.mcommitIndex <= Len(log[i]);
                            with (result = ApplyLog(log[i], commitIndex[i]+1, m.mcommitIndex, sm[i], smDomain[i])) {
                                sm[i]       := result[1];
                                smDomain[i] := result[2];
                            };
                            commitIndex[i] := Max({commitIndex[i], m.mcommitIndex});
                            Send(net, j, fd, [
                                mtype       |-> AppendEntriesResponse,
                                mterm       |-> currentTerm[i],
                                msuccess    |-> TRUE,
                                mmatchIndex |-> m.mprevLogIndex + Len(m.mentries),
                                msource     |-> i,
                                mdest       |-> j
                            ]);
                       };
                    };
                };
            } else if (m.mtype = AppendEntriesResponse) {
                UpdateTerm(self, m, currentTerm, state, votedFor, leader);

                \* DropStaleResponse
                if (m.mterm < currentTerm[self]) {
                    \* goto serverLoop;
                    skip;
                } else {
                    \* HandleAppendEntriesResponse
                    with (i = self, j = m.msource) {
                        assert m.mterm = currentTerm[i];
                        if (m.msuccess) {
                            \* nextIndex[j]  := m.mmatchIndex + 1;
                            nextIndex[i] := [nextIndex[i] EXCEPT ![j] = m.mmatchIndex + 1];
                            \* matchIndex[j] := m.mmatchIndex;
                            matchIndex[i] := [matchIndex[i] EXCEPT ![j] = m.mmatchIndex];
                        } else {
                            nextIndex[i] := [nextIndex[i] EXCEPT ![j] = Max({nextIndex[i][j]-1, 1})];
                            \* nextIndex[j]  := Max({nextIndex[j]-1, 1});
                        };
                    };
                };
            } else if (
                \/ m.mtype = ClientPutRequest
                \/ m.mtype = ClientGetRequest
            ) {
                \* HandleClientRequest

                \* debug(<<"HandleClientRequest", self, m.msource, currentTerm[self], state[self]>>);

                if (state[self] = Leader) {
                    with (entry = [term   |-> currentTerm[self],
                                   cmd    |-> m.mcmd,
                                   client |-> m.msource]
                    ) {
                        log[self]  := Append(log[self], entry);
                        plog[self] := [cmd |-> LogConcat, entries |-> <<entry>>];

                        \* replace appendEntriesCh with a place holder resource on the Go side
                        \* to get better performance
                        appendEntriesCh[self] := TRUE;
                    };
                } else {
                    with (
                        i = self, j = m.msource,
                        respType = IF m.mcmd.type = Put
                                   THEN ClientPutResponse
                                   ELSE ClientGetResponse
                    ) {
                        net[j] := [
                            mtype       |-> respType,
                            msuccess    |-> FALSE,
                            mresponse   |-> [
                                idx |-> m.mcmd.idx,
                                key |-> m.mcmd.key
                            ],
                            mleaderHint |-> leader[i],
                            msource     |-> i,
                            mdest       |-> j
                        ];
                    };
                };
            };
        };
    }

    archetype AServerRequestVote(
        srvId,
        ref net[_], ref netLen[_], ref netEnabled[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        \* added by Shayan
        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout,
        ref appendEntriesCh[_], ref becomeLeaderCh[_]
    )
    variable idx = 1;
    {
    serverRequestVoteLoop:
        while (TRUE) {
            checkFail(srvId, netEnabled);

            \* Server times out and starts a new election.
            await leaderTimeout;
            await netLen[srvId] = 0;

            await state[srvId] \in {Follower, Candidate};

            with (i = srvId) {
                state[i]          := Candidate;
                currentTerm[i]    := currentTerm[i] + 1;
                votedFor[i]       := i;
                votesResponded[i] := {i};
                votesGranted[i]   := {i};
                leader[i]         := Nil;

                debug(<<"ServerTimeout", i, currentTerm[i]>>);
            };

            idx := 1;
        requestVoteLoop:
            while (idx <= NumServers) {
                checkFail(srvId, netEnabled);

                \* RequestVote
                if (idx /= srvId) {
                    Send(net, idx, fd, [
                        mtype         |-> RequestVoteRequest,
                        mterm         |-> currentTerm[srvId],
                        mlastLogTerm  |-> LastTerm(log[srvId]),
                        mlastLogIndex |-> Len(log[srvId]),
                        msource       |-> srvId,
                        mdest         |-> idx
                    ]);
                };
                idx := idx + 1;
            };
        }
    }

    archetype AServerAppendEntries(
        srvId,
        ref net[_], ref netLen[_], ref netEnabled[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        \* added by Shayan
        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout,
        ref appendEntriesCh[_], ref becomeLeaderCh[_]
    )
    variable idx;
    {
    serverAppendEntriesLoop:
        while (appendEntriesCh[srvId]) {
            checkFail(srvId, netEnabled);

            await state[srvId] = Leader;
            idx := 1;

        appendEntriesLoop:
            \* AppendEntries
            while (
                /\ state[srvId] = Leader
                /\ idx <= NumServers
            ) {
                checkFail(srvId, netEnabled);

                if (idx /= srvId) {
                    with (
                        prevLogIndex = nextIndex[srvId][idx] - 1,
                        prevLogTerm  = IF prevLogIndex > 0
                                       THEN log[srvId][prevLogIndex].term
                                       ELSE 0,
                        \* lastEntry    = Min({Len(log[srvId]), nextIndex[srvId][idx]}),
                        entries      = SubSeq(log[srvId], nextIndex[srvId][idx], Len(log[srvId]))
                    ) {
                        Send(net, idx, fd, [
                            mtype         |-> AppendEntriesRequest,
                            mterm         |-> currentTerm[srvId],
                            mprevLogIndex |-> prevLogIndex,
                            mprevLogTerm  |-> prevLogTerm,
                            mentries      |-> entries,
                            mcommitIndex  |-> commitIndex[srvId],
                            msource       |-> srvId,
                            mdest         |-> idx
                        ]);
                    };
                };
                idx := idx + 1;
            };
        };
    }

    archetype AServerAdvanceCommitIndex(
        srvId,
        ref net[_], ref netLen[_], ref netEnabled[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        \* added by Shayan
        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout,
        ref appendEntriesCh[_], ref becomeLeaderCh[_]
    )
    variable newCommitIndex = 0,
    {
    serverAdvanceCommitIndexLoop:
        while (TRUE) {
            checkFail(srvId, netEnabled);

            await state[srvId] = Leader;

            \* AdvanceCommitIndex
            with (
                i = srvId,

                \* explores a much smaller space than the previous version,
                \* proportional to disagreement not the log size
                maxAgreeIndex = FindMaxAgreeIndex(log[i], i, matchIndex[i]),

                nCommitIndex =
                    IF /\ maxAgreeIndex /= Nil
                       /\ log[i][maxAgreeIndex].term = currentTerm[i]
                    THEN maxAgreeIndex
                    ELSE commitIndex[i]
            ) {
                newCommitIndex := nCommitIndex;
                assert newCommitIndex >= commitIndex[i];
            };

        applyLoop:
            while (commitIndex[srvId] < newCommitIndex) {
                checkFail(srvId, netEnabled);

                commitIndex[srvId] := commitIndex[srvId] + 1;
                with (
                    i = srvId,
                    k = commitIndex[i],
                    entry = log[i][k],
                    cmd   = entry.cmd,
                    respType = IF cmd.type = Put
                               THEN ClientPutResponse
                               ELSE ClientGetResponse
                ) {
                    if (cmd.type = Put) {
                        sm[i]       := sm[i] @@ (cmd.key :> cmd.value); \* allows sm[i] to grow
                        smDomain[i] := smDomain[i] \cup {cmd.key};
                    };
                    with (reqOk = cmd.key \in smDomain[i]) {
                        net[entry.client] := [
                            mtype       |-> respType,
                            msuccess    |-> TRUE,
                            mresponse   |-> [
                                idx   |-> cmd.idx,
                                key   |-> cmd.key,
                                value |-> IF reqOk THEN sm[i][cmd.key] ELSE Nil,
                                ok    |-> reqOk
                            ],
                            mleaderHint |-> i,
                            msource     |-> i,
                            mdest       |-> entry.client
                        ];
                    };
                };
            };
        };
    }

    archetype AServerBecomeLeader(
        srvId,
        ref net[_], ref netLen[_], ref netEnabled[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        \* added by Shayan
        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout,
        ref appendEntriesCh[_], ref becomeLeaderCh[_]
    )
    {
    serverBecomeLeaderLoop:
        while (becomeLeaderCh[srvId]) {
            checkFail(srvId, netEnabled);

            \* BecomeLeader
            await state[srvId] = Candidate;
            await isQuorum(votesGranted[srvId]);

            with (i = srvId) {
                state[i]      := Leader;
                nextIndex[i]  := [j \in ServerSet |-> Len(log[i]) + 1];
                matchIndex[i] := [j \in ServerSet |-> 0];
                leader[i]     := i;

                appendEntriesCh[srvId] := TRUE;
                debug(<<"BecomeLeader", i, currentTerm[i], state[i], leader[i]>>);
            };
        };
    }

    archetype AClient(ref net[_], ref netLen[_], ref fd[_], ref reqCh, ref respCh, ref timeout)
    variables leader = Nil, req, resp, reqIdx = 0;
    {
    clientLoop:
        while (TRUE) {
            req := reqCh;
            reqIdx := reqIdx + 1;

        sndReq:
            if (leader = Nil) {
                with (srv \in ServerSet) {
                    leader := srv;
                };
            };
            debug(<<"ClientSndReq", self, leader, reqIdx, req>>);
            if (req.type = Put) {
                Send(net, leader, fd, [
                    mtype   |-> ClientPutRequest,
                    mcmd    |-> [
                        idx   |-> reqIdx,
                        type  |-> Put,
                        key   |-> req.key,
                        value |-> req.value
                    ],
                    msource |-> self,
                    mdest   |-> leader
                ]);
            } else if (req.type = Get) {
                Send(net, leader, fd, [
                    mtype   |-> ClientGetRequest,
                    mcmd    |-> [
                        idx  |-> reqIdx,
                        type |-> Get,
                        key  |-> req.key
                    ],
                    msource |-> self,
                    mdest   |-> leader
                ]);
            };

        rcvResp:
            either {
                resp := net[self];
                debug(<<"ClientRcvResp", self, leader, reqIdx, resp>>);
                assert resp.mdest = self;

                \* it should be /very likely/ that indexed requests will help us
                \* throw out duplicate server responses.
                \* one edge case I can think of: start, do one req, immediately
                \* stop + restart, immediately get stale response to last req.
                if (resp.mresponse.idx /= reqIdx) {
                    goto rcvResp;
                } else {
                    leader := resp.mleaderHint;
                    assert /\ req.type = Get => resp.mtype = ClientGetResponse
                           /\ req.type = Put => resp.mtype = ClientPutResponse;
                    if (\lnot resp.msuccess) {
                        goto sndReq;
                    } else {
                        assert /\ resp.mresponse.idx = reqIdx
                               /\ resp.mresponse.key = req.key;
                        respCh := resp;
                        debug(<<"ClientRcvChDone", self, leader, reqIdx, resp>>);
                    };
                };
            } or {
                await \/ /\ fd[leader] 
                         /\ netLen[self] = 0
                      \/ timeout;
                debug(<<"ClientTimeout", self, leader, reqIdx>>);
                leader := Nil;
                goto sndReq;
            };
        };
    }

    archetype AServerCrasher(srvId, ref netEnabled[_], ref fd[_]) {
    serverCrash:
        netEnabled[srvId] := FALSE;
    fdUpdate:
        fd[srvId] := TRUE;
    }

    variables
        network = [i \in NodeSet |-> [queue |-> {}, enabled |-> TRUE]];
        fd      = [i \in ServerSet |-> FALSE];

        state       = [i \in ServerSet |-> Follower];
        currentTerm = [i \in ServerSet |-> 1];

        commitIndex = [i \in ServerSet |-> 0];
        nextIndex   = [i \in ServerSet |-> [j \in ServerSet |-> 1]];
        matchIndex  = [i \in ServerSet |-> [j \in ServerSet |-> 0]];

        log  = [i \in ServerSet |-> <<>>];
        plog = [i \in ServerSet |-> <<>>];

        votedFor       = [i \in ServerSet |-> Nil];
        votesResponded = [i \in ServerSet |-> {}];
        votesGranted   = [i \in ServerSet |-> {}];

        leader = [i \in ServerSet |-> Nil];

        sm       = [i \in ServerSet |-> [k \in KeySet |-> Nil]];
        smDomain = [i \in ServerSet |-> KeySet];

        leaderTimeout   = TRUE;
        appendEntriesCh = [i \in ServerSet |-> <<>>];
        becomeLeaderCh  = [i \in ServerSet |-> 
            IF NumServers > 1 
            THEN <<>>
            ELSE <<TRUE>>
        ];

        reqCh;
        respCh;

        requestVoteSrvId        = [i \in ServerRequestVoteSet        |-> i - 1*NumServers];
        appendEntriesSrvId      = [i \in ServerAppendEntriesSet      |-> i - 2*NumServers];
        advanceCommitIndexSrvId = [i \in ServerAdvanceCommitIndexSet |-> i - 3*NumServers];
        becomeLeaderSrvId       = [i \in ServerBecomeLeaderSet       |-> i - 4*NumServers];
        crasherSrvId            = [i \in ServerCrasherSet            |-> i - 5*NumServers];

    fair process (s0 \in ServerSet) == instance AServer(
        s0,
        ref network[_], ref network[_], ref network[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout,
        ref appendEntriesCh[_], ref becomeLeaderCh[_]
    )
        mapping @2[_] via ReliableFIFOLink
        mapping @3[_] via NetworkBufferLength
        mapping @4[_] via NetworkToggle
        mapping @5[_] via PerfectFD
        mapping @9[_] via PersistentLog
        mapping @20[_] via Channel
        mapping @21[_] via Channel
        mapping leaderTimeout via LeaderTimeout;

    fair process (s1 \in ServerRequestVoteSet) == instance AServerRequestVote(
        requestVoteSrvId[s1],
        ref network[_], ref network[_], ref network[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout,
        ref appendEntriesCh[_], ref becomeLeaderCh[_]
    )
        mapping @2[_] via ReliableFIFOLink
        mapping @3[_] via NetworkBufferLength
        mapping @4[_] via NetworkToggle
        mapping @5[_] via PerfectFD
        mapping @9[_] via PersistentLog
        mapping @20[_] via Channel
        mapping @21[_] via Channel
        mapping leaderTimeout via LeaderTimeout;

    fair process (s2 \in ServerAppendEntriesSet) == instance AServerAppendEntries(
        appendEntriesSrvId[s2],
        ref network[_], ref network[_], ref network[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout,
        ref appendEntriesCh[_], ref becomeLeaderCh[_]
    )
        mapping @2[_] via ReliableFIFOLink
        mapping @3[_] via NetworkBufferLength
        mapping @4[_] via NetworkToggle
        mapping @5[_] via PerfectFD
        mapping @9[_] via PersistentLog
        mapping @20[_] via Channel
        mapping @21[_] via Channel
        mapping leaderTimeout via LeaderTimeout;

    fair process (s3 \in ServerAdvanceCommitIndexSet) == instance AServerAdvanceCommitIndex(
        advanceCommitIndexSrvId[s3],
        ref network[_], ref network[_], ref network[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout,
        ref appendEntriesCh[_], ref becomeLeaderCh[_]
    )
        mapping @2[_] via ReliableFIFOLink
        mapping @3[_] via NetworkBufferLength
        mapping @4[_] via NetworkToggle
        mapping @5[_] via PerfectFD
        mapping @9[_] via PersistentLog
        mapping @20[_] via Channel
        mapping @21[_] via Channel
        mapping leaderTimeout via LeaderTimeout;

    fair process (s4 \in ServerBecomeLeaderSet) == instance AServerBecomeLeader(
        becomeLeaderSrvId[s4],
        ref network[_], ref network[_], ref network[_], ref fd[_],
        ref state[_], ref currentTerm[_],
        ref log[_], ref plog[_],
        ref commitIndex[_], ref nextIndex[_], ref matchIndex[_],
        ref votedFor[_], ref votesResponded[_], ref votesGranted[_],

        ref leader[_],
        ref sm[_], ref smDomain[_],
        ref leaderTimeout,
        ref appendEntriesCh[_], ref becomeLeaderCh[_]
    )
        mapping @2[_] via ReliableFIFOLink
        mapping @3[_] via NetworkBufferLength
        mapping @4[_] via NetworkToggle
        mapping @5[_] via PerfectFD
        mapping @9[_] via PersistentLog
        mapping @20[_] via Channel
        mapping @21[_] via Channel
        mapping leaderTimeout via LeaderTimeout;

    fair process (client \in ClientSet) == instance AClient(
        ref network[_], ref network[_], ref fd[_],
        ref reqCh, ref respCh, FALSE
    )
        mapping @1[_] via ReliableFIFOLink
        mapping @2[_] via NetworkBufferLength
        mapping @3[_] via PerfectFD
        mapping @4    via RequestsChannel;
    
    fair process (crasher \in ServerCrasherSet) == instance AServerCrasher(
        crasherSrvId[crasher],
        ref network[_], ref fd[_]
    )
        mapping @2[_] via NetworkToggle
        mapping @3[_] via PerfectFD;
}

\* BEGIN PLUSCAL TRANSLATION
--algorithm raftkvs {
  variables network = [i \in NodeSet |-> [queue |-> {}, enabled |-> TRUE]]; fd = [i \in ServerSet |-> FALSE]; state = [i \in ServerSet |-> Follower]; currentTerm = [i \in ServerSet |-> 1]; commitIndex = [i \in ServerSet |-> 0]; nextIndex = [i \in ServerSet |-> [j \in ServerSet |-> 1]]; matchIndex = [i \in ServerSet |-> [j \in ServerSet |-> 0]]; log = [i \in ServerSet |-> <<>>]; plog = [i \in ServerSet |-> <<>>]; votedFor = [i \in ServerSet |-> Nil]; votesResponded = [i \in ServerSet |-> {}]; votesGranted = [i \in ServerSet |-> {}]; leader = [i \in ServerSet |-> Nil]; sm = [i \in ServerSet |-> [k \in KeySet |-> Nil]]; smDomain = [i \in ServerSet |-> KeySet]; leaderTimeout = TRUE; appendEntriesCh = [i \in ServerSet |-> <<>>]; becomeLeaderCh = [i \in ServerSet |-> IF (NumServers) > (1) THEN <<>> ELSE <<TRUE>>]; reqCh; respCh; requestVoteSrvId = [i \in ServerRequestVoteSet |-> (i) - ((1) * (NumServers))]; appendEntriesSrvId = [i \in ServerAppendEntriesSet |-> (i) - ((2) * (NumServers))]; advanceCommitIndexSrvId = [i \in ServerAdvanceCommitIndexSet |-> (i) - ((3) * (NumServers))]; becomeLeaderSrvId = [i \in ServerBecomeLeaderSet |-> (i) - ((4) * (NumServers))]; crasherSrvId = [i \in ServerCrasherSet |-> (i) - ((5) * (NumServers))];
  define{
    Follower == "follower"
    Candidate == "candidate"
    Leader == "leader"
    RequestVoteRequest == "rvq"
    RequestVoteResponse == "rvp"
    AppendEntriesRequest == "apq"
    AppendEntriesResponse == "app"
    ClientPutRequest == "cpq"
    ClientPutResponse == "cpp"
    ClientGetRequest == "cgq"
    ClientGetResponse == "cgp"
    LastTerm(xlog) == IF (Len(xlog)) = (0) THEN 0 ELSE ((xlog)[Len(xlog)]).term
    ServerRequestVoteSet == (((1) * (NumServers)) + (1)) .. ((2) * (NumServers))
    ServerAppendEntriesSet == (((2) * (NumServers)) + (1)) .. ((3) * (NumServers))
    ServerAdvanceCommitIndexSet == (((3) * (NumServers)) + (1)) .. ((4) * (NumServers))
    ServerBecomeLeaderSet == (((4) * (NumServers)) + (1)) .. ((5) * (NumServers))
    ServerCrasherSet == IF ExploreFail THEN (((5) * (NumServers)) + (1)) .. (((5) * (NumServers)) + (MaxNodeFail)) ELSE {}
    ClientSet == (((6) * (NumServers)) + (1)) .. (((6) * (NumServers)) + (NumClients))
    NodeSet == (ServerSet) \union (ClientSet)
    KeySet == {}
  }
  
  fair process (s0 \in ServerSet)
    variables idx = 1; m; srvId = self;
  {
    serverLoop:
      if (TRUE) {
        if (ExploreFail) {
          with (yielded_network12 = ((network)[self]).enabled) {
            if (~ (yielded_network12)) {
              await FALSE;
              assert ((network)[self]).enabled;
              await (Cardinality(((network)[self]).queue)) > (0);
              with (readMsg00 \in ((network)[self]).queue) {
                network := [network EXCEPT ![self] = [queue |-> (((network)[self]).queue) \ ({readMsg00}), enabled |-> ((network)[self]).enabled]];
                with (yielded_network00 = readMsg00) {
                  m := yielded_network00;
                  assert ((m).mdest) = (self);
                  goto handleMsg;
                };
              };
            } else {
              assert ((network)[self]).enabled;
              await (Cardinality(((network)[self]).queue)) > (0);
              with (readMsg01 \in ((network)[self]).queue) {
                network := [network EXCEPT ![self] = [queue |-> (((network)[self]).queue) \ ({readMsg01}), enabled |-> ((network)[self]).enabled]];
                with (yielded_network01 = readMsg01) {
                  m := yielded_network01;
                  assert ((m).mdest) = (self);
                  goto handleMsg;
                };
              };
            };
          };
        } else {
          assert ((network)[self]).enabled;
          await (Cardinality(((network)[self]).queue)) > (0);
          with (readMsg02 \in ((network)[self]).queue) {
            network := [network EXCEPT ![self] = [queue |-> (((network)[self]).queue) \ ({readMsg02}), enabled |-> ((network)[self]).enabled]];
            with (yielded_network02 = readMsg02) {
              m := yielded_network02;
              assert ((m).mdest) = (self);
              goto handleMsg;
            };
          };
        };
      } else {
        goto Done;
      };
    handleMsg:
      if (ExploreFail) {
        with (yielded_network13 = ((network)[self]).enabled) {
          if (~ (yielded_network13)) {
            await FALSE;
            if (((m).mtype) = (RequestVoteRequest)) {
              if (((m).mterm) > ((currentTerm)[self])) {
                currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                state := [state EXCEPT ![self] = Follower];
                with (votedFor3 = [votedFor EXCEPT ![self] = Nil]) {
                  leader := [leader EXCEPT ![self] = Nil];
                  with (
                    i = self, 
                    j = (m).msource, 
                    logOK = (((m).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m).mlastLogIndex) >= (Len((log)[i])))), 
                    grant = ((((m).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor3)[self]) \in ({Nil, j}))
                  ) {
                    assert ((m).mterm) <= ((currentTerm)[i]);
                    if (grant) {
                      votedFor := [votedFor3 EXCEPT ![i] = j];
                      either {
                        with (value00 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                          await ((network)[j]).enabled;
                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value00}), enabled |-> ((network)[j]).enabled]];
                          if (Debug) {
                            print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                            goto serverLoop;
                          } else {
                            goto serverLoop;
                          };
                        };
                      } or {
                        with (yielded_fd7 = (fd)[j]) {
                          await yielded_fd7;
                          if (Debug) {
                            print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                            goto serverLoop;
                          } else {
                            goto serverLoop;
                          };
                        };
                      };
                    } else {
                      either {
                        with (value01 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                          await ((network)[j]).enabled;
                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value01}), enabled |-> ((network)[j]).enabled]];
                          if (Debug) {
                            print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                            votedFor := votedFor3;
                            goto serverLoop;
                          } else {
                            votedFor := votedFor3;
                            goto serverLoop;
                          };
                        };
                      } or {
                        with (yielded_fd8 = (fd)[j]) {
                          await yielded_fd8;
                          if (Debug) {
                            print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                            votedFor := votedFor3;
                            goto serverLoop;
                          } else {
                            votedFor := votedFor3;
                            goto serverLoop;
                          };
                        };
                      };
                    };
                  };
                };
              } else {
                with (
                  i = self, 
                  j = (m).msource, 
                  logOK = (((m).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m).mlastLogIndex) >= (Len((log)[i])))), 
                  grant = ((((m).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor)[self]) \in ({Nil, j}))
                ) {
                  assert ((m).mterm) <= ((currentTerm)[i]);
                  if (grant) {
                    votedFor := [votedFor EXCEPT ![i] = j];
                    either {
                      with (value02 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                        await ((network)[j]).enabled;
                        await (Cardinality(((network)[j]).queue)) < (BufferSize);
                        network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value02}), enabled |-> ((network)[j]).enabled]];
                        if (Debug) {
                          print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                          goto serverLoop;
                        } else {
                          goto serverLoop;
                        };
                      };
                    } or {
                      with (yielded_fd9 = (fd)[j]) {
                        await yielded_fd9;
                        if (Debug) {
                          print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                          goto serverLoop;
                        } else {
                          goto serverLoop;
                        };
                      };
                    };
                  } else {
                    either {
                      with (value03 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                        await ((network)[j]).enabled;
                        await (Cardinality(((network)[j]).queue)) < (BufferSize);
                        network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value03}), enabled |-> ((network)[j]).enabled]];
                        if (Debug) {
                          print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                          goto serverLoop;
                        } else {
                          goto serverLoop;
                        };
                      };
                    } or {
                      with (yielded_fd10 = (fd)[j]) {
                        await yielded_fd10;
                        if (Debug) {
                          print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                          goto serverLoop;
                        } else {
                          goto serverLoop;
                        };
                      };
                    };
                  };
                };
              };
            } else {
              if (((m).mtype) = (RequestVoteResponse)) {
                if (((m).mterm) > ((currentTerm)[self])) {
                  currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                  state := [state EXCEPT ![self] = Follower];
                  votedFor := [votedFor EXCEPT ![self] = Nil];
                  leader := [leader EXCEPT ![self] = Nil];
                  if (((m).mterm) < ((currentTerm)[self])) {
                    skip;
                    goto serverLoop;
                  } else {
                    with (
                      i = self, 
                      j = (m).msource
                    ) {
                      assert ((m).mterm) = ((currentTerm)[i]);
                      votesResponded := [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})];
                      if ((m).mvoteGranted) {
                        votesGranted := [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})];
                        if ((((state)[i]) = (Candidate)) /\ (isQuorum((votesGranted)[i]))) {
                          with (value18 = TRUE) {
                            becomeLeaderCh := [becomeLeaderCh EXCEPT ![i] = Append((becomeLeaderCh)[i], value18)];
                            goto serverLoop;
                          };
                        } else {
                          goto serverLoop;
                        };
                      } else {
                        goto serverLoop;
                      };
                    };
                  };
                } else {
                  if (((m).mterm) < ((currentTerm)[self])) {
                    skip;
                    goto serverLoop;
                  } else {
                    with (
                      i = self, 
                      j = (m).msource
                    ) {
                      assert ((m).mterm) = ((currentTerm)[i]);
                      votesResponded := [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})];
                      if ((m).mvoteGranted) {
                        votesGranted := [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})];
                        if ((((state)[i]) = (Candidate)) /\ (isQuorum((votesGranted)[i]))) {
                          with (value19 = TRUE) {
                            becomeLeaderCh := [becomeLeaderCh EXCEPT ![i] = Append((becomeLeaderCh)[i], value19)];
                            goto serverLoop;
                          };
                        } else {
                          goto serverLoop;
                        };
                      } else {
                        goto serverLoop;
                      };
                    };
                  };
                };
              } else {
                if (((m).mtype) = (AppendEntriesRequest)) {
                  if (((m).mterm) > ((currentTerm)[self])) {
                    currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                    with (state3 = [state EXCEPT ![self] = Follower]) {
                      votedFor := [votedFor EXCEPT ![self] = Nil];
                      with (
                        leader3 = [leader EXCEPT ![self] = Nil], 
                        i = self, 
                        j = (m).msource, 
                        logOK = (((m).mprevLogIndex) = (0)) \/ (((((m).mprevLogIndex) > (0)) /\ (((m).mprevLogIndex) <= (Len((log)[i])))) /\ (((m).mprevLogTerm) = ((((log)[i])[(m).mprevLogIndex]).term)))
                      ) {
                        assert ((m).mterm) <= ((currentTerm)[i]);
                        if (((m).mterm) = ((currentTerm)[i])) {
                          leader := [leader3 EXCEPT ![i] = (m).msource];
                          with (value20 = LeaderTimeoutReset) {
                            assert FALSE;
                            if ((((m).mterm) = ((currentTerm)[i])) /\ (((state3)[i]) = (Candidate))) {
                              state := [state3 EXCEPT ![i] = Follower];
                              if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                                either {
                                  with (value30 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                    await ((network)[j]).enabled;
                                    await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                    network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value30}), enabled |-> ((network)[j]).enabled]];
                                    goto serverLoop;
                                  };
                                } or {
                                  with (yielded_fd00 = (fd)[j]) {
                                    await yielded_fd00;
                                    goto serverLoop;
                                  };
                                };
                              } else {
                                assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                                with (
                                  index = ((m).mprevLogIndex) + (1), 
                                  value40 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                                ) {
                                  if (((value40).cmd) = (LogConcat)) {
                                    with (
                                      plog24 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value40).entries)], 
                                      log24 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value50 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value50).cmd) = (LogConcat)) {
                                        plog := [plog24 EXCEPT ![i] = ((plog24)[i]) \o ((value50).entries)];
                                        log := [log24 EXCEPT ![i] = ((log24)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result24 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result24)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result24)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value60 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value60}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd11 = (fd)[j]) {
                                              await yielded_fd11;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value50).cmd) = (LogPop)) {
                                          plog := [plog24 EXCEPT ![i] = SubSeq((plog24)[i], 1, (Len((plog24)[i])) - ((value50).cnt))];
                                          log := [log24 EXCEPT ![i] = ((log24)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result25 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result25)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result25)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value61 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value61}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd12 = (fd)[j]) {
                                                await yielded_fd12;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log24 EXCEPT ![i] = ((log24)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result26 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result26)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result26)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value62 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value62}), enabled |-> ((network)[j]).enabled]];
                                                plog := plog24;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd13 = (fd)[j]) {
                                                await yielded_fd13;
                                                plog := plog24;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value40).cmd) = (LogPop)) {
                                      with (
                                        plog25 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value40).cnt))], 
                                        log25 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                        value51 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                      ) {
                                        if (((value51).cmd) = (LogConcat)) {
                                          plog := [plog25 EXCEPT ![i] = ((plog25)[i]) \o ((value51).entries)];
                                          log := [log25 EXCEPT ![i] = ((log25)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result27 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result27)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result27)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value63 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value63}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd14 = (fd)[j]) {
                                                await yielded_fd14;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          if (((value51).cmd) = (LogPop)) {
                                            plog := [plog25 EXCEPT ![i] = SubSeq((plog25)[i], 1, (Len((plog25)[i])) - ((value51).cnt))];
                                            log := [log25 EXCEPT ![i] = ((log25)[i]) \o ((m).mentries)];
                                            assert ((m).mcommitIndex) <= (Len((log)[i]));
                                            with (result28 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result28)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result28)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value64 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value64}), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd15 = (fd)[j]) {
                                                  await yielded_fd15;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            log := [log25 EXCEPT ![i] = ((log25)[i]) \o ((m).mentries)];
                                            assert ((m).mcommitIndex) <= (Len((log)[i]));
                                            with (result29 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result29)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result29)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value65 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value65}), enabled |-> ((network)[j]).enabled]];
                                                  plog := plog25;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd16 = (fd)[j]) {
                                                  await yielded_fd16;
                                                  plog := plog25;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          };
                                        };
                                      };
                                    } else {
                                      with (
                                        log26 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                        value52 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                      ) {
                                        if (((value52).cmd) = (LogConcat)) {
                                          plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value52).entries)];
                                          log := [log26 EXCEPT ![i] = ((log26)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result30 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result30)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result30)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value66 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value66}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd17 = (fd)[j]) {
                                                await yielded_fd17;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          if (((value52).cmd) = (LogPop)) {
                                            plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value52).cnt))];
                                            log := [log26 EXCEPT ![i] = ((log26)[i]) \o ((m).mentries)];
                                            assert ((m).mcommitIndex) <= (Len((log)[i]));
                                            with (result31 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result31)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result31)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value67 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value67}), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd18 = (fd)[j]) {
                                                  await yielded_fd18;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            log := [log26 EXCEPT ![i] = ((log26)[i]) \o ((m).mentries)];
                                            assert ((m).mcommitIndex) <= (Len((log)[i]));
                                            with (result32 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result32)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result32)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value68 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value68}), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd19 = (fd)[j]) {
                                                  await yielded_fd19;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            } else {
                              if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state3)[i]) = (Follower))) /\ (~ (logOK)))) {
                                either {
                                  with (value31 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                    await ((network)[j]).enabled;
                                    await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                    network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value31}), enabled |-> ((network)[j]).enabled]];
                                    state := state3;
                                    goto serverLoop;
                                  };
                                } or {
                                  with (yielded_fd01 = (fd)[j]) {
                                    await yielded_fd01;
                                    state := state3;
                                    goto serverLoop;
                                  };
                                };
                              } else {
                                assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state3)[i]) = (Follower))) /\ (logOK);
                                with (
                                  index = ((m).mprevLogIndex) + (1), 
                                  value41 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                                ) {
                                  if (((value41).cmd) = (LogConcat)) {
                                    with (
                                      plog26 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value41).entries)], 
                                      log27 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value53 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value53).cmd) = (LogConcat)) {
                                        plog := [plog26 EXCEPT ![i] = ((plog26)[i]) \o ((value53).entries)];
                                        log := [log27 EXCEPT ![i] = ((log27)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result33 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result33)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result33)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value69 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value69}), enabled |-> ((network)[j]).enabled]];
                                              state := state3;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd110 = (fd)[j]) {
                                              await yielded_fd110;
                                              state := state3;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value53).cmd) = (LogPop)) {
                                          plog := [plog26 EXCEPT ![i] = SubSeq((plog26)[i], 1, (Len((plog26)[i])) - ((value53).cnt))];
                                          log := [log27 EXCEPT ![i] = ((log27)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result34 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result34)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result34)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value610 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value610}), enabled |-> ((network)[j]).enabled]];
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd111 = (fd)[j]) {
                                                await yielded_fd111;
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log27 EXCEPT ![i] = ((log27)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result35 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result35)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result35)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value611 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value611}), enabled |-> ((network)[j]).enabled]];
                                                plog := plog26;
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd112 = (fd)[j]) {
                                                await yielded_fd112;
                                                plog := plog26;
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value41).cmd) = (LogPop)) {
                                      with (
                                        plog27 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value41).cnt))], 
                                        log28 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                        value54 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                      ) {
                                        if (((value54).cmd) = (LogConcat)) {
                                          plog := [plog27 EXCEPT ![i] = ((plog27)[i]) \o ((value54).entries)];
                                          log := [log28 EXCEPT ![i] = ((log28)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result36 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result36)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result36)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value612 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value612}), enabled |-> ((network)[j]).enabled]];
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd113 = (fd)[j]) {
                                                await yielded_fd113;
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          if (((value54).cmd) = (LogPop)) {
                                            plog := [plog27 EXCEPT ![i] = SubSeq((plog27)[i], 1, (Len((plog27)[i])) - ((value54).cnt))];
                                            log := [log28 EXCEPT ![i] = ((log28)[i]) \o ((m).mentries)];
                                            assert ((m).mcommitIndex) <= (Len((log)[i]));
                                            with (result37 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result37)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result37)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value613 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value613}), enabled |-> ((network)[j]).enabled]];
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd114 = (fd)[j]) {
                                                  await yielded_fd114;
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            log := [log28 EXCEPT ![i] = ((log28)[i]) \o ((m).mentries)];
                                            assert ((m).mcommitIndex) <= (Len((log)[i]));
                                            with (result38 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result38)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result38)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value614 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value614}), enabled |-> ((network)[j]).enabled]];
                                                  plog := plog27;
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd115 = (fd)[j]) {
                                                  await yielded_fd115;
                                                  plog := plog27;
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          };
                                        };
                                      };
                                    } else {
                                      with (
                                        log29 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                        value55 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                      ) {
                                        if (((value55).cmd) = (LogConcat)) {
                                          plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value55).entries)];
                                          log := [log29 EXCEPT ![i] = ((log29)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result39 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result39)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result39)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value615 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value615}), enabled |-> ((network)[j]).enabled]];
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd116 = (fd)[j]) {
                                                await yielded_fd116;
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          if (((value55).cmd) = (LogPop)) {
                                            plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value55).cnt))];
                                            log := [log29 EXCEPT ![i] = ((log29)[i]) \o ((m).mentries)];
                                            assert ((m).mcommitIndex) <= (Len((log)[i]));
                                            with (result40 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result40)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result40)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value616 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value616}), enabled |-> ((network)[j]).enabled]];
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd117 = (fd)[j]) {
                                                  await yielded_fd117;
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            log := [log29 EXCEPT ![i] = ((log29)[i]) \o ((m).mentries)];
                                            assert ((m).mcommitIndex) <= (Len((log)[i]));
                                            with (result41 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result41)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result41)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value617 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value617}), enabled |-> ((network)[j]).enabled]];
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd118 = (fd)[j]) {
                                                  await yielded_fd118;
                                                  state := state3;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        } else {
                          if ((((m).mterm) = ((currentTerm)[i])) /\ (((state3)[i]) = (Candidate))) {
                            state := [state3 EXCEPT ![i] = Follower];
                            if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                              either {
                                with (value32 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                  await ((network)[j]).enabled;
                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value32}), enabled |-> ((network)[j]).enabled]];
                                  leader := leader3;
                                  goto serverLoop;
                                };
                              } or {
                                with (yielded_fd02 = (fd)[j]) {
                                  await yielded_fd02;
                                  leader := leader3;
                                  goto serverLoop;
                                };
                              };
                            } else {
                              assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                              with (
                                index = ((m).mprevLogIndex) + (1), 
                                value42 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                              ) {
                                if (((value42).cmd) = (LogConcat)) {
                                  with (
                                    plog28 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value42).entries)], 
                                    log30 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value56 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value56).cmd) = (LogConcat)) {
                                      plog := [plog28 EXCEPT ![i] = ((plog28)[i]) \o ((value56).entries)];
                                      log := [log30 EXCEPT ![i] = ((log30)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result42 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result42)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result42)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value618 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value618}), enabled |-> ((network)[j]).enabled]];
                                            leader := leader3;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd119 = (fd)[j]) {
                                            await yielded_fd119;
                                            leader := leader3;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value56).cmd) = (LogPop)) {
                                        plog := [plog28 EXCEPT ![i] = SubSeq((plog28)[i], 1, (Len((plog28)[i])) - ((value56).cnt))];
                                        log := [log30 EXCEPT ![i] = ((log30)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result43 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result43)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result43)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value619 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value619}), enabled |-> ((network)[j]).enabled]];
                                              leader := leader3;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd120 = (fd)[j]) {
                                              await yielded_fd120;
                                              leader := leader3;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log30 EXCEPT ![i] = ((log30)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result44 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result44)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result44)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value620 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value620}), enabled |-> ((network)[j]).enabled]];
                                              plog := plog28;
                                              leader := leader3;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd121 = (fd)[j]) {
                                              await yielded_fd121;
                                              plog := plog28;
                                              leader := leader3;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  if (((value42).cmd) = (LogPop)) {
                                    with (
                                      plog29 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value42).cnt))], 
                                      log31 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value57 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value57).cmd) = (LogConcat)) {
                                        plog := [plog29 EXCEPT ![i] = ((plog29)[i]) \o ((value57).entries)];
                                        log := [log31 EXCEPT ![i] = ((log31)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result45 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result45)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result45)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value621 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value621}), enabled |-> ((network)[j]).enabled]];
                                              leader := leader3;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd122 = (fd)[j]) {
                                              await yielded_fd122;
                                              leader := leader3;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value57).cmd) = (LogPop)) {
                                          plog := [plog29 EXCEPT ![i] = SubSeq((plog29)[i], 1, (Len((plog29)[i])) - ((value57).cnt))];
                                          log := [log31 EXCEPT ![i] = ((log31)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result46 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result46)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result46)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value622 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value622}), enabled |-> ((network)[j]).enabled]];
                                                leader := leader3;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd123 = (fd)[j]) {
                                                await yielded_fd123;
                                                leader := leader3;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log31 EXCEPT ![i] = ((log31)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result47 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result47)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result47)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value623 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value623}), enabled |-> ((network)[j]).enabled]];
                                                plog := plog29;
                                                leader := leader3;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd124 = (fd)[j]) {
                                                await yielded_fd124;
                                                plog := plog29;
                                                leader := leader3;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    with (
                                      log32 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value58 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value58).cmd) = (LogConcat)) {
                                        plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value58).entries)];
                                        log := [log32 EXCEPT ![i] = ((log32)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result48 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result48)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result48)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value624 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value624}), enabled |-> ((network)[j]).enabled]];
                                              leader := leader3;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd125 = (fd)[j]) {
                                              await yielded_fd125;
                                              leader := leader3;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value58).cmd) = (LogPop)) {
                                          plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value58).cnt))];
                                          log := [log32 EXCEPT ![i] = ((log32)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result49 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result49)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result49)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value625 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value625}), enabled |-> ((network)[j]).enabled]];
                                                leader := leader3;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd126 = (fd)[j]) {
                                                await yielded_fd126;
                                                leader := leader3;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log32 EXCEPT ![i] = ((log32)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result50 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result50)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result50)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value626 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value626}), enabled |-> ((network)[j]).enabled]];
                                                leader := leader3;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd127 = (fd)[j]) {
                                                await yielded_fd127;
                                                leader := leader3;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          } else {
                            if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state3)[i]) = (Follower))) /\ (~ (logOK)))) {
                              either {
                                with (value33 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                  await ((network)[j]).enabled;
                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value33}), enabled |-> ((network)[j]).enabled]];
                                  leader := leader3;
                                  state := state3;
                                  goto serverLoop;
                                };
                              } or {
                                with (yielded_fd03 = (fd)[j]) {
                                  await yielded_fd03;
                                  leader := leader3;
                                  state := state3;
                                  goto serverLoop;
                                };
                              };
                            } else {
                              assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state3)[i]) = (Follower))) /\ (logOK);
                              with (
                                index = ((m).mprevLogIndex) + (1), 
                                value43 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                              ) {
                                if (((value43).cmd) = (LogConcat)) {
                                  with (
                                    plog30 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value43).entries)], 
                                    log33 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value59 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value59).cmd) = (LogConcat)) {
                                      plog := [plog30 EXCEPT ![i] = ((plog30)[i]) \o ((value59).entries)];
                                      log := [log33 EXCEPT ![i] = ((log33)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result51 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result51)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result51)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value627 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value627}), enabled |-> ((network)[j]).enabled]];
                                            leader := leader3;
                                            state := state3;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd128 = (fd)[j]) {
                                            await yielded_fd128;
                                            leader := leader3;
                                            state := state3;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value59).cmd) = (LogPop)) {
                                        plog := [plog30 EXCEPT ![i] = SubSeq((plog30)[i], 1, (Len((plog30)[i])) - ((value59).cnt))];
                                        log := [log33 EXCEPT ![i] = ((log33)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result52 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result52)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result52)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value628 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value628}), enabled |-> ((network)[j]).enabled]];
                                              leader := leader3;
                                              state := state3;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd129 = (fd)[j]) {
                                              await yielded_fd129;
                                              leader := leader3;
                                              state := state3;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log33 EXCEPT ![i] = ((log33)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result53 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result53)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result53)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value629 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value629}), enabled |-> ((network)[j]).enabled]];
                                              plog := plog30;
                                              leader := leader3;
                                              state := state3;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd130 = (fd)[j]) {
                                              await yielded_fd130;
                                              plog := plog30;
                                              leader := leader3;
                                              state := state3;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  if (((value43).cmd) = (LogPop)) {
                                    with (
                                      plog31 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value43).cnt))], 
                                      log34 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value510 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value510).cmd) = (LogConcat)) {
                                        plog := [plog31 EXCEPT ![i] = ((plog31)[i]) \o ((value510).entries)];
                                        log := [log34 EXCEPT ![i] = ((log34)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result54 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result54)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result54)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value630 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value630}), enabled |-> ((network)[j]).enabled]];
                                              leader := leader3;
                                              state := state3;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd131 = (fd)[j]) {
                                              await yielded_fd131;
                                              leader := leader3;
                                              state := state3;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value510).cmd) = (LogPop)) {
                                          plog := [plog31 EXCEPT ![i] = SubSeq((plog31)[i], 1, (Len((plog31)[i])) - ((value510).cnt))];
                                          log := [log34 EXCEPT ![i] = ((log34)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result55 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result55)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result55)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value631 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value631}), enabled |-> ((network)[j]).enabled]];
                                                leader := leader3;
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd132 = (fd)[j]) {
                                                await yielded_fd132;
                                                leader := leader3;
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log34 EXCEPT ![i] = ((log34)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result56 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result56)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result56)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value632 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value632}), enabled |-> ((network)[j]).enabled]];
                                                plog := plog31;
                                                leader := leader3;
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd133 = (fd)[j]) {
                                                await yielded_fd133;
                                                plog := plog31;
                                                leader := leader3;
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    with (
                                      log35 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value511 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value511).cmd) = (LogConcat)) {
                                        plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value511).entries)];
                                        log := [log35 EXCEPT ![i] = ((log35)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result57 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result57)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result57)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value633 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value633}), enabled |-> ((network)[j]).enabled]];
                                              leader := leader3;
                                              state := state3;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd134 = (fd)[j]) {
                                              await yielded_fd134;
                                              leader := leader3;
                                              state := state3;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value511).cmd) = (LogPop)) {
                                          plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value511).cnt))];
                                          log := [log35 EXCEPT ![i] = ((log35)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result58 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result58)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result58)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value634 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value634}), enabled |-> ((network)[j]).enabled]];
                                                leader := leader3;
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd135 = (fd)[j]) {
                                                await yielded_fd135;
                                                leader := leader3;
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log35 EXCEPT ![i] = ((log35)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result59 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result59)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result59)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value635 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value635}), enabled |-> ((network)[j]).enabled]];
                                                leader := leader3;
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd136 = (fd)[j]) {
                                                await yielded_fd136;
                                                leader := leader3;
                                                state := state3;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  } else {
                    with (
                      i = self, 
                      j = (m).msource, 
                      logOK = (((m).mprevLogIndex) = (0)) \/ (((((m).mprevLogIndex) > (0)) /\ (((m).mprevLogIndex) <= (Len((log)[i])))) /\ (((m).mprevLogTerm) = ((((log)[i])[(m).mprevLogIndex]).term)))
                    ) {
                      assert ((m).mterm) <= ((currentTerm)[i]);
                      if (((m).mterm) = ((currentTerm)[i])) {
                        leader := [leader EXCEPT ![i] = (m).msource];
                        with (value21 = LeaderTimeoutReset) {
                          assert FALSE;
                          if ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))) {
                            state := [state EXCEPT ![i] = Follower];
                            if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                              either {
                                with (value34 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                  await ((network)[j]).enabled;
                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value34}), enabled |-> ((network)[j]).enabled]];
                                  goto serverLoop;
                                };
                              } or {
                                with (yielded_fd04 = (fd)[j]) {
                                  await yielded_fd04;
                                  goto serverLoop;
                                };
                              };
                            } else {
                              assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                              with (
                                index = ((m).mprevLogIndex) + (1), 
                                value44 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                              ) {
                                if (((value44).cmd) = (LogConcat)) {
                                  with (
                                    plog32 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value44).entries)], 
                                    log36 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value512 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value512).cmd) = (LogConcat)) {
                                      plog := [plog32 EXCEPT ![i] = ((plog32)[i]) \o ((value512).entries)];
                                      log := [log36 EXCEPT ![i] = ((log36)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result60 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result60)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result60)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value636 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value636}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd137 = (fd)[j]) {
                                            await yielded_fd137;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value512).cmd) = (LogPop)) {
                                        plog := [plog32 EXCEPT ![i] = SubSeq((plog32)[i], 1, (Len((plog32)[i])) - ((value512).cnt))];
                                        log := [log36 EXCEPT ![i] = ((log36)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result61 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result61)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result61)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value637 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value637}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd138 = (fd)[j]) {
                                              await yielded_fd138;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log36 EXCEPT ![i] = ((log36)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result62 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result62)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result62)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value638 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value638}), enabled |-> ((network)[j]).enabled]];
                                              plog := plog32;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd139 = (fd)[j]) {
                                              await yielded_fd139;
                                              plog := plog32;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  if (((value44).cmd) = (LogPop)) {
                                    with (
                                      plog33 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value44).cnt))], 
                                      log37 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value513 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value513).cmd) = (LogConcat)) {
                                        plog := [plog33 EXCEPT ![i] = ((plog33)[i]) \o ((value513).entries)];
                                        log := [log37 EXCEPT ![i] = ((log37)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result63 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result63)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result63)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value639 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value639}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd140 = (fd)[j]) {
                                              await yielded_fd140;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value513).cmd) = (LogPop)) {
                                          plog := [plog33 EXCEPT ![i] = SubSeq((plog33)[i], 1, (Len((plog33)[i])) - ((value513).cnt))];
                                          log := [log37 EXCEPT ![i] = ((log37)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result64 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result64)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result64)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value640 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value640}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd141 = (fd)[j]) {
                                                await yielded_fd141;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log37 EXCEPT ![i] = ((log37)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result65 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result65)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result65)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value641 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value641}), enabled |-> ((network)[j]).enabled]];
                                                plog := plog33;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd142 = (fd)[j]) {
                                                await yielded_fd142;
                                                plog := plog33;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    with (
                                      log38 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value514 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value514).cmd) = (LogConcat)) {
                                        plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value514).entries)];
                                        log := [log38 EXCEPT ![i] = ((log38)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result66 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result66)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result66)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value642 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value642}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd143 = (fd)[j]) {
                                              await yielded_fd143;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value514).cmd) = (LogPop)) {
                                          plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value514).cnt))];
                                          log := [log38 EXCEPT ![i] = ((log38)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result67 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result67)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result67)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value643 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value643}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd144 = (fd)[j]) {
                                                await yielded_fd144;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log38 EXCEPT ![i] = ((log38)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result68 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result68)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result68)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value644 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value644}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd145 = (fd)[j]) {
                                                await yielded_fd145;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          } else {
                            if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                              either {
                                with (value35 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                  await ((network)[j]).enabled;
                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value35}), enabled |-> ((network)[j]).enabled]];
                                  goto serverLoop;
                                };
                              } or {
                                with (yielded_fd05 = (fd)[j]) {
                                  await yielded_fd05;
                                  goto serverLoop;
                                };
                              };
                            } else {
                              assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                              with (
                                index = ((m).mprevLogIndex) + (1), 
                                value45 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                              ) {
                                if (((value45).cmd) = (LogConcat)) {
                                  with (
                                    plog34 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value45).entries)], 
                                    log39 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value515 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value515).cmd) = (LogConcat)) {
                                      plog := [plog34 EXCEPT ![i] = ((plog34)[i]) \o ((value515).entries)];
                                      log := [log39 EXCEPT ![i] = ((log39)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result69 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result69)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result69)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value645 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value645}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd146 = (fd)[j]) {
                                            await yielded_fd146;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value515).cmd) = (LogPop)) {
                                        plog := [plog34 EXCEPT ![i] = SubSeq((plog34)[i], 1, (Len((plog34)[i])) - ((value515).cnt))];
                                        log := [log39 EXCEPT ![i] = ((log39)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result70 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result70)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result70)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value646 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value646}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd147 = (fd)[j]) {
                                              await yielded_fd147;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log39 EXCEPT ![i] = ((log39)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result71 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result71)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result71)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value647 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value647}), enabled |-> ((network)[j]).enabled]];
                                              plog := plog34;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd148 = (fd)[j]) {
                                              await yielded_fd148;
                                              plog := plog34;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  if (((value45).cmd) = (LogPop)) {
                                    with (
                                      plog35 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value45).cnt))], 
                                      log40 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value516 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value516).cmd) = (LogConcat)) {
                                        plog := [plog35 EXCEPT ![i] = ((plog35)[i]) \o ((value516).entries)];
                                        log := [log40 EXCEPT ![i] = ((log40)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result72 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result72)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result72)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value648 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value648}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd149 = (fd)[j]) {
                                              await yielded_fd149;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value516).cmd) = (LogPop)) {
                                          plog := [plog35 EXCEPT ![i] = SubSeq((plog35)[i], 1, (Len((plog35)[i])) - ((value516).cnt))];
                                          log := [log40 EXCEPT ![i] = ((log40)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result73 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result73)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result73)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value649 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value649}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd150 = (fd)[j]) {
                                                await yielded_fd150;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log40 EXCEPT ![i] = ((log40)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result74 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result74)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result74)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value650 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value650}), enabled |-> ((network)[j]).enabled]];
                                                plog := plog35;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd151 = (fd)[j]) {
                                                await yielded_fd151;
                                                plog := plog35;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    with (
                                      log41 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value517 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value517).cmd) = (LogConcat)) {
                                        plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value517).entries)];
                                        log := [log41 EXCEPT ![i] = ((log41)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result75 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result75)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result75)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value651 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value651}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd152 = (fd)[j]) {
                                              await yielded_fd152;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value517).cmd) = (LogPop)) {
                                          plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value517).cnt))];
                                          log := [log41 EXCEPT ![i] = ((log41)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result76 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result76)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result76)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value652 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value652}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd153 = (fd)[j]) {
                                                await yielded_fd153;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log41 EXCEPT ![i] = ((log41)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result77 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result77)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result77)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value653 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value653}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd154 = (fd)[j]) {
                                                await yielded_fd154;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        };
                      } else {
                        if ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))) {
                          state := [state EXCEPT ![i] = Follower];
                          if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                            either {
                              with (value36 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                await ((network)[j]).enabled;
                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value36}), enabled |-> ((network)[j]).enabled]];
                                goto serverLoop;
                              };
                            } or {
                              with (yielded_fd06 = (fd)[j]) {
                                await yielded_fd06;
                                goto serverLoop;
                              };
                            };
                          } else {
                            assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                            with (
                              index = ((m).mprevLogIndex) + (1), 
                              value46 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                            ) {
                              if (((value46).cmd) = (LogConcat)) {
                                with (
                                  plog36 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value46).entries)], 
                                  log42 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                  value518 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                ) {
                                  if (((value518).cmd) = (LogConcat)) {
                                    plog := [plog36 EXCEPT ![i] = ((plog36)[i]) \o ((value518).entries)];
                                    log := [log42 EXCEPT ![i] = ((log42)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result78 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result78)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result78)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value654 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value654}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd155 = (fd)[j]) {
                                          await yielded_fd155;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value518).cmd) = (LogPop)) {
                                      plog := [plog36 EXCEPT ![i] = SubSeq((plog36)[i], 1, (Len((plog36)[i])) - ((value518).cnt))];
                                      log := [log42 EXCEPT ![i] = ((log42)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result79 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result79)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result79)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value655 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value655}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd156 = (fd)[j]) {
                                            await yielded_fd156;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      log := [log42 EXCEPT ![i] = ((log42)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result80 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result80)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result80)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value656 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value656}), enabled |-> ((network)[j]).enabled]];
                                            plog := plog36;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd157 = (fd)[j]) {
                                            await yielded_fd157;
                                            plog := plog36;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              } else {
                                if (((value46).cmd) = (LogPop)) {
                                  with (
                                    plog37 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value46).cnt))], 
                                    log43 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value519 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value519).cmd) = (LogConcat)) {
                                      plog := [plog37 EXCEPT ![i] = ((plog37)[i]) \o ((value519).entries)];
                                      log := [log43 EXCEPT ![i] = ((log43)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result81 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result81)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result81)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value657 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value657}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd158 = (fd)[j]) {
                                            await yielded_fd158;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value519).cmd) = (LogPop)) {
                                        plog := [plog37 EXCEPT ![i] = SubSeq((plog37)[i], 1, (Len((plog37)[i])) - ((value519).cnt))];
                                        log := [log43 EXCEPT ![i] = ((log43)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result82 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result82)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result82)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value658 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value658}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd159 = (fd)[j]) {
                                              await yielded_fd159;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log43 EXCEPT ![i] = ((log43)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result83 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result83)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result83)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value659 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value659}), enabled |-> ((network)[j]).enabled]];
                                              plog := plog37;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd160 = (fd)[j]) {
                                              await yielded_fd160;
                                              plog := plog37;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  with (
                                    log44 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value520 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value520).cmd) = (LogConcat)) {
                                      plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value520).entries)];
                                      log := [log44 EXCEPT ![i] = ((log44)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result84 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result84)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result84)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value660 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value660}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd161 = (fd)[j]) {
                                            await yielded_fd161;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value520).cmd) = (LogPop)) {
                                        plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value520).cnt))];
                                        log := [log44 EXCEPT ![i] = ((log44)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result85 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result85)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result85)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value661 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value661}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd162 = (fd)[j]) {
                                              await yielded_fd162;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log44 EXCEPT ![i] = ((log44)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result86 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result86)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result86)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value662 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value662}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd163 = (fd)[j]) {
                                              await yielded_fd163;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        } else {
                          if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                            either {
                              with (value37 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                await ((network)[j]).enabled;
                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value37}), enabled |-> ((network)[j]).enabled]];
                                goto serverLoop;
                              };
                            } or {
                              with (yielded_fd07 = (fd)[j]) {
                                await yielded_fd07;
                                goto serverLoop;
                              };
                            };
                          } else {
                            assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                            with (
                              index = ((m).mprevLogIndex) + (1), 
                              value47 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                            ) {
                              if (((value47).cmd) = (LogConcat)) {
                                with (
                                  plog38 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value47).entries)], 
                                  log45 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                  value521 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                ) {
                                  if (((value521).cmd) = (LogConcat)) {
                                    plog := [plog38 EXCEPT ![i] = ((plog38)[i]) \o ((value521).entries)];
                                    log := [log45 EXCEPT ![i] = ((log45)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result87 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result87)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result87)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value663 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value663}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd164 = (fd)[j]) {
                                          await yielded_fd164;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value521).cmd) = (LogPop)) {
                                      plog := [plog38 EXCEPT ![i] = SubSeq((plog38)[i], 1, (Len((plog38)[i])) - ((value521).cnt))];
                                      log := [log45 EXCEPT ![i] = ((log45)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result88 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result88)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result88)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value664 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value664}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd165 = (fd)[j]) {
                                            await yielded_fd165;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      log := [log45 EXCEPT ![i] = ((log45)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result89 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result89)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result89)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value665 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value665}), enabled |-> ((network)[j]).enabled]];
                                            plog := plog38;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd166 = (fd)[j]) {
                                            await yielded_fd166;
                                            plog := plog38;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              } else {
                                if (((value47).cmd) = (LogPop)) {
                                  with (
                                    plog39 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value47).cnt))], 
                                    log46 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value522 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value522).cmd) = (LogConcat)) {
                                      plog := [plog39 EXCEPT ![i] = ((plog39)[i]) \o ((value522).entries)];
                                      log := [log46 EXCEPT ![i] = ((log46)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result90 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result90)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result90)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value666 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value666}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd167 = (fd)[j]) {
                                            await yielded_fd167;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value522).cmd) = (LogPop)) {
                                        plog := [plog39 EXCEPT ![i] = SubSeq((plog39)[i], 1, (Len((plog39)[i])) - ((value522).cnt))];
                                        log := [log46 EXCEPT ![i] = ((log46)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result91 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result91)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result91)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value667 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value667}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd168 = (fd)[j]) {
                                              await yielded_fd168;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log46 EXCEPT ![i] = ((log46)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result92 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result92)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result92)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value668 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value668}), enabled |-> ((network)[j]).enabled]];
                                              plog := plog39;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd169 = (fd)[j]) {
                                              await yielded_fd169;
                                              plog := plog39;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  with (
                                    log47 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value523 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value523).cmd) = (LogConcat)) {
                                      plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value523).entries)];
                                      log := [log47 EXCEPT ![i] = ((log47)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result93 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result93)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result93)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value669 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value669}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd170 = (fd)[j]) {
                                            await yielded_fd170;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value523).cmd) = (LogPop)) {
                                        plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value523).cnt))];
                                        log := [log47 EXCEPT ![i] = ((log47)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result94 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result94)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result94)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value670 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value670}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd171 = (fd)[j]) {
                                              await yielded_fd171;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log47 EXCEPT ![i] = ((log47)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result95 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result95)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result95)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value671 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value671}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd172 = (fd)[j]) {
                                              await yielded_fd172;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  };
                } else {
                  if (((m).mtype) = (AppendEntriesResponse)) {
                    if (((m).mterm) > ((currentTerm)[self])) {
                      currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                      state := [state EXCEPT ![self] = Follower];
                      votedFor := [votedFor EXCEPT ![self] = Nil];
                      leader := [leader EXCEPT ![self] = Nil];
                      if (((m).mterm) < ((currentTerm)[self])) {
                        skip;
                        goto serverLoop;
                      } else {
                        with (
                          i = self, 
                          j = (m).msource
                        ) {
                          assert ((m).mterm) = ((currentTerm)[i]);
                          if ((m).msuccess) {
                            nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m).mmatchIndex) + (1)]];
                            matchIndex := [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m).mmatchIndex]];
                            goto serverLoop;
                          } else {
                            nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]];
                            goto serverLoop;
                          };
                        };
                      };
                    } else {
                      if (((m).mterm) < ((currentTerm)[self])) {
                        skip;
                        goto serverLoop;
                      } else {
                        with (
                          i = self, 
                          j = (m).msource
                        ) {
                          assert ((m).mterm) = ((currentTerm)[i]);
                          if ((m).msuccess) {
                            nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m).mmatchIndex) + (1)]];
                            matchIndex := [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m).mmatchIndex]];
                            goto serverLoop;
                          } else {
                            nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]];
                            goto serverLoop;
                          };
                        };
                      };
                    };
                  } else {
                    if ((((m).mtype) = (ClientPutRequest)) \/ (((m).mtype) = (ClientGetRequest))) {
                      if (((state)[self]) = (Leader)) {
                        with (entry = [term |-> (currentTerm)[self], cmd |-> (m).mcmd, client |-> (m).msource]) {
                          log := [log EXCEPT ![self] = Append((log)[self], entry)];
                          with (value70 = [cmd |-> LogConcat, entries |-> <<entry>>]) {
                            if (((value70).cmd) = (LogConcat)) {
                              plog := [plog EXCEPT ![self] = ((plog)[self]) \o ((value70).entries)];
                              with (value80 = TRUE) {
                                appendEntriesCh := [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value80)];
                                goto serverLoop;
                              };
                            } else {
                              if (((value70).cmd) = (LogPop)) {
                                plog := [plog EXCEPT ![self] = SubSeq((plog)[self], 1, (Len((plog)[self])) - ((value70).cnt))];
                                with (value81 = TRUE) {
                                  appendEntriesCh := [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value81)];
                                  goto serverLoop;
                                };
                              } else {
                                with (value82 = TRUE) {
                                  appendEntriesCh := [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value82)];
                                  goto serverLoop;
                                };
                              };
                            };
                          };
                        };
                      } else {
                        with (
                          i = self, 
                          j = (m).msource, 
                          respType = IF (((m).mcmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse, 
                          value90 = [mtype |-> respType, msuccess |-> FALSE, mresponse |-> [idx |-> ((m).mcmd).idx, key |-> ((m).mcmd).key], mleaderHint |-> (leader)[i], msource |-> i, mdest |-> j]
                        ) {
                          await ((network)[j]).enabled;
                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value90}), enabled |-> ((network)[j]).enabled]];
                          goto serverLoop;
                        };
                      };
                    } else {
                      goto serverLoop;
                    };
                  };
                };
              };
            };
          } else {
            if (((m).mtype) = (RequestVoteRequest)) {
              if (((m).mterm) > ((currentTerm)[self])) {
                currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                state := [state EXCEPT ![self] = Follower];
                with (votedFor4 = [votedFor EXCEPT ![self] = Nil]) {
                  leader := [leader EXCEPT ![self] = Nil];
                  with (
                    i = self, 
                    j = (m).msource, 
                    logOK = (((m).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m).mlastLogIndex) >= (Len((log)[i])))), 
                    grant = ((((m).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor4)[self]) \in ({Nil, j}))
                  ) {
                    assert ((m).mterm) <= ((currentTerm)[i]);
                    if (grant) {
                      votedFor := [votedFor4 EXCEPT ![i] = j];
                      either {
                        with (value04 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                          await ((network)[j]).enabled;
                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value04}), enabled |-> ((network)[j]).enabled]];
                          if (Debug) {
                            print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                            goto serverLoop;
                          } else {
                            goto serverLoop;
                          };
                        };
                      } or {
                        with (yielded_fd20 = (fd)[j]) {
                          await yielded_fd20;
                          if (Debug) {
                            print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                            goto serverLoop;
                          } else {
                            goto serverLoop;
                          };
                        };
                      };
                    } else {
                      either {
                        with (value05 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                          await ((network)[j]).enabled;
                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value05}), enabled |-> ((network)[j]).enabled]];
                          if (Debug) {
                            print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                            votedFor := votedFor4;
                            goto serverLoop;
                          } else {
                            votedFor := votedFor4;
                            goto serverLoop;
                          };
                        };
                      } or {
                        with (yielded_fd21 = (fd)[j]) {
                          await yielded_fd21;
                          if (Debug) {
                            print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                            votedFor := votedFor4;
                            goto serverLoop;
                          } else {
                            votedFor := votedFor4;
                            goto serverLoop;
                          };
                        };
                      };
                    };
                  };
                };
              } else {
                with (
                  i = self, 
                  j = (m).msource, 
                  logOK = (((m).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m).mlastLogIndex) >= (Len((log)[i])))), 
                  grant = ((((m).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor)[self]) \in ({Nil, j}))
                ) {
                  assert ((m).mterm) <= ((currentTerm)[i]);
                  if (grant) {
                    votedFor := [votedFor EXCEPT ![i] = j];
                    either {
                      with (value06 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                        await ((network)[j]).enabled;
                        await (Cardinality(((network)[j]).queue)) < (BufferSize);
                        network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value06}), enabled |-> ((network)[j]).enabled]];
                        if (Debug) {
                          print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                          goto serverLoop;
                        } else {
                          goto serverLoop;
                        };
                      };
                    } or {
                      with (yielded_fd22 = (fd)[j]) {
                        await yielded_fd22;
                        if (Debug) {
                          print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                          goto serverLoop;
                        } else {
                          goto serverLoop;
                        };
                      };
                    };
                  } else {
                    either {
                      with (value07 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                        await ((network)[j]).enabled;
                        await (Cardinality(((network)[j]).queue)) < (BufferSize);
                        network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value07}), enabled |-> ((network)[j]).enabled]];
                        if (Debug) {
                          print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                          goto serverLoop;
                        } else {
                          goto serverLoop;
                        };
                      };
                    } or {
                      with (yielded_fd23 = (fd)[j]) {
                        await yielded_fd23;
                        if (Debug) {
                          print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                          goto serverLoop;
                        } else {
                          goto serverLoop;
                        };
                      };
                    };
                  };
                };
              };
            } else {
              if (((m).mtype) = (RequestVoteResponse)) {
                if (((m).mterm) > ((currentTerm)[self])) {
                  currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                  state := [state EXCEPT ![self] = Follower];
                  votedFor := [votedFor EXCEPT ![self] = Nil];
                  leader := [leader EXCEPT ![self] = Nil];
                  if (((m).mterm) < ((currentTerm)[self])) {
                    skip;
                    goto serverLoop;
                  } else {
                    with (
                      i = self, 
                      j = (m).msource
                    ) {
                      assert ((m).mterm) = ((currentTerm)[i]);
                      votesResponded := [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})];
                      if ((m).mvoteGranted) {
                        votesGranted := [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})];
                        if ((((state)[i]) = (Candidate)) /\ (isQuorum((votesGranted)[i]))) {
                          with (value110 = TRUE) {
                            becomeLeaderCh := [becomeLeaderCh EXCEPT ![i] = Append((becomeLeaderCh)[i], value110)];
                            goto serverLoop;
                          };
                        } else {
                          goto serverLoop;
                        };
                      } else {
                        goto serverLoop;
                      };
                    };
                  };
                } else {
                  if (((m).mterm) < ((currentTerm)[self])) {
                    skip;
                    goto serverLoop;
                  } else {
                    with (
                      i = self, 
                      j = (m).msource
                    ) {
                      assert ((m).mterm) = ((currentTerm)[i]);
                      votesResponded := [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})];
                      if ((m).mvoteGranted) {
                        votesGranted := [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})];
                        if ((((state)[i]) = (Candidate)) /\ (isQuorum((votesGranted)[i]))) {
                          with (value111 = TRUE) {
                            becomeLeaderCh := [becomeLeaderCh EXCEPT ![i] = Append((becomeLeaderCh)[i], value111)];
                            goto serverLoop;
                          };
                        } else {
                          goto serverLoop;
                        };
                      } else {
                        goto serverLoop;
                      };
                    };
                  };
                };
              } else {
                if (((m).mtype) = (AppendEntriesRequest)) {
                  if (((m).mterm) > ((currentTerm)[self])) {
                    currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                    with (state4 = [state EXCEPT ![self] = Follower]) {
                      votedFor := [votedFor EXCEPT ![self] = Nil];
                      with (
                        leader4 = [leader EXCEPT ![self] = Nil], 
                        i = self, 
                        j = (m).msource, 
                        logOK = (((m).mprevLogIndex) = (0)) \/ (((((m).mprevLogIndex) > (0)) /\ (((m).mprevLogIndex) <= (Len((log)[i])))) /\ (((m).mprevLogTerm) = ((((log)[i])[(m).mprevLogIndex]).term)))
                      ) {
                        assert ((m).mterm) <= ((currentTerm)[i]);
                        if (((m).mterm) = ((currentTerm)[i])) {
                          leader := [leader4 EXCEPT ![i] = (m).msource];
                          with (value22 = LeaderTimeoutReset) {
                            assert FALSE;
                            if ((((m).mterm) = ((currentTerm)[i])) /\ (((state4)[i]) = (Candidate))) {
                              state := [state4 EXCEPT ![i] = Follower];
                              if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                                either {
                                  with (value38 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                    await ((network)[j]).enabled;
                                    await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                    network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value38}), enabled |-> ((network)[j]).enabled]];
                                    goto serverLoop;
                                  };
                                } or {
                                  with (yielded_fd08 = (fd)[j]) {
                                    await yielded_fd08;
                                    goto serverLoop;
                                  };
                                };
                              } else {
                                assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                                with (
                                  index = ((m).mprevLogIndex) + (1), 
                                  value48 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                                ) {
                                  if (((value48).cmd) = (LogConcat)) {
                                    with (
                                      plog40 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value48).entries)], 
                                      log48 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value524 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value524).cmd) = (LogConcat)) {
                                        plog := [plog40 EXCEPT ![i] = ((plog40)[i]) \o ((value524).entries)];
                                        log := [log48 EXCEPT ![i] = ((log48)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result96 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result96)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result96)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value672 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value672}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd173 = (fd)[j]) {
                                              await yielded_fd173;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value524).cmd) = (LogPop)) {
                                          plog := [plog40 EXCEPT ![i] = SubSeq((plog40)[i], 1, (Len((plog40)[i])) - ((value524).cnt))];
                                          log := [log48 EXCEPT ![i] = ((log48)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result97 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result97)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result97)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value673 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value673}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd174 = (fd)[j]) {
                                                await yielded_fd174;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log48 EXCEPT ![i] = ((log48)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result98 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result98)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result98)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value674 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value674}), enabled |-> ((network)[j]).enabled]];
                                                plog := plog40;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd175 = (fd)[j]) {
                                                await yielded_fd175;
                                                plog := plog40;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value48).cmd) = (LogPop)) {
                                      with (
                                        plog41 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value48).cnt))], 
                                        log49 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                        value525 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                      ) {
                                        if (((value525).cmd) = (LogConcat)) {
                                          plog := [plog41 EXCEPT ![i] = ((plog41)[i]) \o ((value525).entries)];
                                          log := [log49 EXCEPT ![i] = ((log49)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result99 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result99)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result99)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value675 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value675}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd176 = (fd)[j]) {
                                                await yielded_fd176;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          if (((value525).cmd) = (LogPop)) {
                                            plog := [plog41 EXCEPT ![i] = SubSeq((plog41)[i], 1, (Len((plog41)[i])) - ((value525).cnt))];
                                            log := [log49 EXCEPT ![i] = ((log49)[i]) \o ((m).mentries)];
                                            assert ((m).mcommitIndex) <= (Len((log)[i]));
                                            with (result100 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result100)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result100)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value676 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value676}), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd177 = (fd)[j]) {
                                                  await yielded_fd177;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            log := [log49 EXCEPT ![i] = ((log49)[i]) \o ((m).mentries)];
                                            assert ((m).mcommitIndex) <= (Len((log)[i]));
                                            with (result101 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result101)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result101)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value677 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value677}), enabled |-> ((network)[j]).enabled]];
                                                  plog := plog41;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd178 = (fd)[j]) {
                                                  await yielded_fd178;
                                                  plog := plog41;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          };
                                        };
                                      };
                                    } else {
                                      with (
                                        log50 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                        value526 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                      ) {
                                        if (((value526).cmd) = (LogConcat)) {
                                          plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value526).entries)];
                                          log := [log50 EXCEPT ![i] = ((log50)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result102 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result102)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result102)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value678 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value678}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd179 = (fd)[j]) {
                                                await yielded_fd179;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          if (((value526).cmd) = (LogPop)) {
                                            plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value526).cnt))];
                                            log := [log50 EXCEPT ![i] = ((log50)[i]) \o ((m).mentries)];
                                            assert ((m).mcommitIndex) <= (Len((log)[i]));
                                            with (result103 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result103)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result103)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value679 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value679}), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd180 = (fd)[j]) {
                                                  await yielded_fd180;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            log := [log50 EXCEPT ![i] = ((log50)[i]) \o ((m).mentries)];
                                            assert ((m).mcommitIndex) <= (Len((log)[i]));
                                            with (result104 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result104)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result104)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value680 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value680}), enabled |-> ((network)[j]).enabled]];
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd181 = (fd)[j]) {
                                                  await yielded_fd181;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            } else {
                              if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state4)[i]) = (Follower))) /\ (~ (logOK)))) {
                                either {
                                  with (value39 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                    await ((network)[j]).enabled;
                                    await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                    network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value39}), enabled |-> ((network)[j]).enabled]];
                                    state := state4;
                                    goto serverLoop;
                                  };
                                } or {
                                  with (yielded_fd09 = (fd)[j]) {
                                    await yielded_fd09;
                                    state := state4;
                                    goto serverLoop;
                                  };
                                };
                              } else {
                                assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state4)[i]) = (Follower))) /\ (logOK);
                                with (
                                  index = ((m).mprevLogIndex) + (1), 
                                  value49 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                                ) {
                                  if (((value49).cmd) = (LogConcat)) {
                                    with (
                                      plog42 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value49).entries)], 
                                      log51 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value527 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value527).cmd) = (LogConcat)) {
                                        plog := [plog42 EXCEPT ![i] = ((plog42)[i]) \o ((value527).entries)];
                                        log := [log51 EXCEPT ![i] = ((log51)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result105 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result105)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result105)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value681 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value681}), enabled |-> ((network)[j]).enabled]];
                                              state := state4;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd182 = (fd)[j]) {
                                              await yielded_fd182;
                                              state := state4;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value527).cmd) = (LogPop)) {
                                          plog := [plog42 EXCEPT ![i] = SubSeq((plog42)[i], 1, (Len((plog42)[i])) - ((value527).cnt))];
                                          log := [log51 EXCEPT ![i] = ((log51)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result106 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result106)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result106)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value682 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value682}), enabled |-> ((network)[j]).enabled]];
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd183 = (fd)[j]) {
                                                await yielded_fd183;
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log51 EXCEPT ![i] = ((log51)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result107 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result107)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result107)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value683 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value683}), enabled |-> ((network)[j]).enabled]];
                                                plog := plog42;
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd184 = (fd)[j]) {
                                                await yielded_fd184;
                                                plog := plog42;
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value49).cmd) = (LogPop)) {
                                      with (
                                        plog43 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value49).cnt))], 
                                        log52 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                        value528 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                      ) {
                                        if (((value528).cmd) = (LogConcat)) {
                                          plog := [plog43 EXCEPT ![i] = ((plog43)[i]) \o ((value528).entries)];
                                          log := [log52 EXCEPT ![i] = ((log52)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result108 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result108)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result108)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value684 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value684}), enabled |-> ((network)[j]).enabled]];
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd185 = (fd)[j]) {
                                                await yielded_fd185;
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          if (((value528).cmd) = (LogPop)) {
                                            plog := [plog43 EXCEPT ![i] = SubSeq((plog43)[i], 1, (Len((plog43)[i])) - ((value528).cnt))];
                                            log := [log52 EXCEPT ![i] = ((log52)[i]) \o ((m).mentries)];
                                            assert ((m).mcommitIndex) <= (Len((log)[i]));
                                            with (result109 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result109)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result109)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value685 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value685}), enabled |-> ((network)[j]).enabled]];
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd186 = (fd)[j]) {
                                                  await yielded_fd186;
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            log := [log52 EXCEPT ![i] = ((log52)[i]) \o ((m).mentries)];
                                            assert ((m).mcommitIndex) <= (Len((log)[i]));
                                            with (result110 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result110)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result110)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value686 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value686}), enabled |-> ((network)[j]).enabled]];
                                                  plog := plog43;
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd187 = (fd)[j]) {
                                                  await yielded_fd187;
                                                  plog := plog43;
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          };
                                        };
                                      };
                                    } else {
                                      with (
                                        log53 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                        value529 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                      ) {
                                        if (((value529).cmd) = (LogConcat)) {
                                          plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value529).entries)];
                                          log := [log53 EXCEPT ![i] = ((log53)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result111 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result111)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result111)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value687 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value687}), enabled |-> ((network)[j]).enabled]];
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd188 = (fd)[j]) {
                                                await yielded_fd188;
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          if (((value529).cmd) = (LogPop)) {
                                            plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value529).cnt))];
                                            log := [log53 EXCEPT ![i] = ((log53)[i]) \o ((m).mentries)];
                                            assert ((m).mcommitIndex) <= (Len((log)[i]));
                                            with (result112 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result112)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result112)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value688 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value688}), enabled |-> ((network)[j]).enabled]];
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd189 = (fd)[j]) {
                                                  await yielded_fd189;
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          } else {
                                            log := [log53 EXCEPT ![i] = ((log53)[i]) \o ((m).mentries)];
                                            assert ((m).mcommitIndex) <= (Len((log)[i]));
                                            with (result113 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                              sm := [sm EXCEPT ![i] = (result113)[1]];
                                              smDomain := [smDomain EXCEPT ![i] = (result113)[2]];
                                              commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                              either {
                                                with (value689 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                  await ((network)[j]).enabled;
                                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value689}), enabled |-> ((network)[j]).enabled]];
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              } or {
                                                with (yielded_fd190 = (fd)[j]) {
                                                  await yielded_fd190;
                                                  state := state4;
                                                  goto serverLoop;
                                                };
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        } else {
                          if ((((m).mterm) = ((currentTerm)[i])) /\ (((state4)[i]) = (Candidate))) {
                            state := [state4 EXCEPT ![i] = Follower];
                            if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                              either {
                                with (value310 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                  await ((network)[j]).enabled;
                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value310}), enabled |-> ((network)[j]).enabled]];
                                  leader := leader4;
                                  goto serverLoop;
                                };
                              } or {
                                with (yielded_fd010 = (fd)[j]) {
                                  await yielded_fd010;
                                  leader := leader4;
                                  goto serverLoop;
                                };
                              };
                            } else {
                              assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                              with (
                                index = ((m).mprevLogIndex) + (1), 
                                value410 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                              ) {
                                if (((value410).cmd) = (LogConcat)) {
                                  with (
                                    plog44 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value410).entries)], 
                                    log54 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value530 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value530).cmd) = (LogConcat)) {
                                      plog := [plog44 EXCEPT ![i] = ((plog44)[i]) \o ((value530).entries)];
                                      log := [log54 EXCEPT ![i] = ((log54)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result114 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result114)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result114)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value690 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value690}), enabled |-> ((network)[j]).enabled]];
                                            leader := leader4;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd191 = (fd)[j]) {
                                            await yielded_fd191;
                                            leader := leader4;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value530).cmd) = (LogPop)) {
                                        plog := [plog44 EXCEPT ![i] = SubSeq((plog44)[i], 1, (Len((plog44)[i])) - ((value530).cnt))];
                                        log := [log54 EXCEPT ![i] = ((log54)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result115 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result115)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result115)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value691 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value691}), enabled |-> ((network)[j]).enabled]];
                                              leader := leader4;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd192 = (fd)[j]) {
                                              await yielded_fd192;
                                              leader := leader4;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log54 EXCEPT ![i] = ((log54)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result116 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result116)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result116)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value692 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value692}), enabled |-> ((network)[j]).enabled]];
                                              plog := plog44;
                                              leader := leader4;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd193 = (fd)[j]) {
                                              await yielded_fd193;
                                              plog := plog44;
                                              leader := leader4;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  if (((value410).cmd) = (LogPop)) {
                                    with (
                                      plog45 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value410).cnt))], 
                                      log55 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value531 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value531).cmd) = (LogConcat)) {
                                        plog := [plog45 EXCEPT ![i] = ((plog45)[i]) \o ((value531).entries)];
                                        log := [log55 EXCEPT ![i] = ((log55)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result117 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result117)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result117)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value693 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value693}), enabled |-> ((network)[j]).enabled]];
                                              leader := leader4;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd194 = (fd)[j]) {
                                              await yielded_fd194;
                                              leader := leader4;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value531).cmd) = (LogPop)) {
                                          plog := [plog45 EXCEPT ![i] = SubSeq((plog45)[i], 1, (Len((plog45)[i])) - ((value531).cnt))];
                                          log := [log55 EXCEPT ![i] = ((log55)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result118 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result118)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result118)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value694 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value694}), enabled |-> ((network)[j]).enabled]];
                                                leader := leader4;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd195 = (fd)[j]) {
                                                await yielded_fd195;
                                                leader := leader4;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log55 EXCEPT ![i] = ((log55)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result119 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result119)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result119)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value695 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value695}), enabled |-> ((network)[j]).enabled]];
                                                plog := plog45;
                                                leader := leader4;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd196 = (fd)[j]) {
                                                await yielded_fd196;
                                                plog := plog45;
                                                leader := leader4;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    with (
                                      log56 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value532 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value532).cmd) = (LogConcat)) {
                                        plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value532).entries)];
                                        log := [log56 EXCEPT ![i] = ((log56)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result120 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result120)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result120)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value696 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value696}), enabled |-> ((network)[j]).enabled]];
                                              leader := leader4;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd197 = (fd)[j]) {
                                              await yielded_fd197;
                                              leader := leader4;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value532).cmd) = (LogPop)) {
                                          plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value532).cnt))];
                                          log := [log56 EXCEPT ![i] = ((log56)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result121 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result121)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result121)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value697 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value697}), enabled |-> ((network)[j]).enabled]];
                                                leader := leader4;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd198 = (fd)[j]) {
                                                await yielded_fd198;
                                                leader := leader4;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log56 EXCEPT ![i] = ((log56)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result122 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result122)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result122)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value698 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value698}), enabled |-> ((network)[j]).enabled]];
                                                leader := leader4;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd199 = (fd)[j]) {
                                                await yielded_fd199;
                                                leader := leader4;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          } else {
                            if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state4)[i]) = (Follower))) /\ (~ (logOK)))) {
                              either {
                                with (value311 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                  await ((network)[j]).enabled;
                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value311}), enabled |-> ((network)[j]).enabled]];
                                  leader := leader4;
                                  state := state4;
                                  goto serverLoop;
                                };
                              } or {
                                with (yielded_fd011 = (fd)[j]) {
                                  await yielded_fd011;
                                  leader := leader4;
                                  state := state4;
                                  goto serverLoop;
                                };
                              };
                            } else {
                              assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state4)[i]) = (Follower))) /\ (logOK);
                              with (
                                index = ((m).mprevLogIndex) + (1), 
                                value411 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                              ) {
                                if (((value411).cmd) = (LogConcat)) {
                                  with (
                                    plog46 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value411).entries)], 
                                    log57 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value533 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value533).cmd) = (LogConcat)) {
                                      plog := [plog46 EXCEPT ![i] = ((plog46)[i]) \o ((value533).entries)];
                                      log := [log57 EXCEPT ![i] = ((log57)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result123 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result123)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result123)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value699 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value699}), enabled |-> ((network)[j]).enabled]];
                                            leader := leader4;
                                            state := state4;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1100 = (fd)[j]) {
                                            await yielded_fd1100;
                                            leader := leader4;
                                            state := state4;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value533).cmd) = (LogPop)) {
                                        plog := [plog46 EXCEPT ![i] = SubSeq((plog46)[i], 1, (Len((plog46)[i])) - ((value533).cnt))];
                                        log := [log57 EXCEPT ![i] = ((log57)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result124 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result124)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result124)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6100 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6100}), enabled |-> ((network)[j]).enabled]];
                                              leader := leader4;
                                              state := state4;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1101 = (fd)[j]) {
                                              await yielded_fd1101;
                                              leader := leader4;
                                              state := state4;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log57 EXCEPT ![i] = ((log57)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result125 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result125)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result125)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6101 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6101}), enabled |-> ((network)[j]).enabled]];
                                              plog := plog46;
                                              leader := leader4;
                                              state := state4;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1102 = (fd)[j]) {
                                              await yielded_fd1102;
                                              plog := plog46;
                                              leader := leader4;
                                              state := state4;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  if (((value411).cmd) = (LogPop)) {
                                    with (
                                      plog47 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value411).cnt))], 
                                      log58 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value534 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value534).cmd) = (LogConcat)) {
                                        plog := [plog47 EXCEPT ![i] = ((plog47)[i]) \o ((value534).entries)];
                                        log := [log58 EXCEPT ![i] = ((log58)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result126 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result126)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result126)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6102 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6102}), enabled |-> ((network)[j]).enabled]];
                                              leader := leader4;
                                              state := state4;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1103 = (fd)[j]) {
                                              await yielded_fd1103;
                                              leader := leader4;
                                              state := state4;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value534).cmd) = (LogPop)) {
                                          plog := [plog47 EXCEPT ![i] = SubSeq((plog47)[i], 1, (Len((plog47)[i])) - ((value534).cnt))];
                                          log := [log58 EXCEPT ![i] = ((log58)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result127 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result127)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result127)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value6103 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6103}), enabled |-> ((network)[j]).enabled]];
                                                leader := leader4;
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1104 = (fd)[j]) {
                                                await yielded_fd1104;
                                                leader := leader4;
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log58 EXCEPT ![i] = ((log58)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result128 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result128)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result128)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value6104 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6104}), enabled |-> ((network)[j]).enabled]];
                                                plog := plog47;
                                                leader := leader4;
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1105 = (fd)[j]) {
                                                await yielded_fd1105;
                                                plog := plog47;
                                                leader := leader4;
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    with (
                                      log59 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value535 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value535).cmd) = (LogConcat)) {
                                        plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value535).entries)];
                                        log := [log59 EXCEPT ![i] = ((log59)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result129 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result129)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result129)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6105 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6105}), enabled |-> ((network)[j]).enabled]];
                                              leader := leader4;
                                              state := state4;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1106 = (fd)[j]) {
                                              await yielded_fd1106;
                                              leader := leader4;
                                              state := state4;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value535).cmd) = (LogPop)) {
                                          plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value535).cnt))];
                                          log := [log59 EXCEPT ![i] = ((log59)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result130 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result130)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result130)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value6106 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6106}), enabled |-> ((network)[j]).enabled]];
                                                leader := leader4;
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1107 = (fd)[j]) {
                                                await yielded_fd1107;
                                                leader := leader4;
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log59 EXCEPT ![i] = ((log59)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result131 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result131)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result131)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value6107 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6107}), enabled |-> ((network)[j]).enabled]];
                                                leader := leader4;
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1108 = (fd)[j]) {
                                                await yielded_fd1108;
                                                leader := leader4;
                                                state := state4;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  } else {
                    with (
                      i = self, 
                      j = (m).msource, 
                      logOK = (((m).mprevLogIndex) = (0)) \/ (((((m).mprevLogIndex) > (0)) /\ (((m).mprevLogIndex) <= (Len((log)[i])))) /\ (((m).mprevLogTerm) = ((((log)[i])[(m).mprevLogIndex]).term)))
                    ) {
                      assert ((m).mterm) <= ((currentTerm)[i]);
                      if (((m).mterm) = ((currentTerm)[i])) {
                        leader := [leader EXCEPT ![i] = (m).msource];
                        with (value23 = LeaderTimeoutReset) {
                          assert FALSE;
                          if ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))) {
                            state := [state EXCEPT ![i] = Follower];
                            if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                              either {
                                with (value312 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                  await ((network)[j]).enabled;
                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value312}), enabled |-> ((network)[j]).enabled]];
                                  goto serverLoop;
                                };
                              } or {
                                with (yielded_fd012 = (fd)[j]) {
                                  await yielded_fd012;
                                  goto serverLoop;
                                };
                              };
                            } else {
                              assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                              with (
                                index = ((m).mprevLogIndex) + (1), 
                                value412 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                              ) {
                                if (((value412).cmd) = (LogConcat)) {
                                  with (
                                    plog48 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value412).entries)], 
                                    log60 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value536 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value536).cmd) = (LogConcat)) {
                                      plog := [plog48 EXCEPT ![i] = ((plog48)[i]) \o ((value536).entries)];
                                      log := [log60 EXCEPT ![i] = ((log60)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result132 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result132)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result132)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6108 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6108}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1109 = (fd)[j]) {
                                            await yielded_fd1109;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value536).cmd) = (LogPop)) {
                                        plog := [plog48 EXCEPT ![i] = SubSeq((plog48)[i], 1, (Len((plog48)[i])) - ((value536).cnt))];
                                        log := [log60 EXCEPT ![i] = ((log60)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result133 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result133)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result133)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6109 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6109}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1110 = (fd)[j]) {
                                              await yielded_fd1110;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log60 EXCEPT ![i] = ((log60)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result134 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result134)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result134)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6110 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6110}), enabled |-> ((network)[j]).enabled]];
                                              plog := plog48;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1111 = (fd)[j]) {
                                              await yielded_fd1111;
                                              plog := plog48;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  if (((value412).cmd) = (LogPop)) {
                                    with (
                                      plog49 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value412).cnt))], 
                                      log61 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value537 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value537).cmd) = (LogConcat)) {
                                        plog := [plog49 EXCEPT ![i] = ((plog49)[i]) \o ((value537).entries)];
                                        log := [log61 EXCEPT ![i] = ((log61)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result135 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result135)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result135)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6111 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6111}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1112 = (fd)[j]) {
                                              await yielded_fd1112;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value537).cmd) = (LogPop)) {
                                          plog := [plog49 EXCEPT ![i] = SubSeq((plog49)[i], 1, (Len((plog49)[i])) - ((value537).cnt))];
                                          log := [log61 EXCEPT ![i] = ((log61)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result136 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result136)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result136)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value6112 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6112}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1113 = (fd)[j]) {
                                                await yielded_fd1113;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log61 EXCEPT ![i] = ((log61)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result137 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result137)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result137)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value6113 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6113}), enabled |-> ((network)[j]).enabled]];
                                                plog := plog49;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1114 = (fd)[j]) {
                                                await yielded_fd1114;
                                                plog := plog49;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    with (
                                      log62 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value538 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value538).cmd) = (LogConcat)) {
                                        plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value538).entries)];
                                        log := [log62 EXCEPT ![i] = ((log62)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result138 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result138)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result138)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6114 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6114}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1115 = (fd)[j]) {
                                              await yielded_fd1115;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value538).cmd) = (LogPop)) {
                                          plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value538).cnt))];
                                          log := [log62 EXCEPT ![i] = ((log62)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result139 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result139)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result139)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value6115 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6115}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1116 = (fd)[j]) {
                                                await yielded_fd1116;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log62 EXCEPT ![i] = ((log62)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result140 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result140)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result140)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value6116 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6116}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1117 = (fd)[j]) {
                                                await yielded_fd1117;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          } else {
                            if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                              either {
                                with (value313 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                  await ((network)[j]).enabled;
                                  await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                  network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value313}), enabled |-> ((network)[j]).enabled]];
                                  goto serverLoop;
                                };
                              } or {
                                with (yielded_fd013 = (fd)[j]) {
                                  await yielded_fd013;
                                  goto serverLoop;
                                };
                              };
                            } else {
                              assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                              with (
                                index = ((m).mprevLogIndex) + (1), 
                                value413 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                              ) {
                                if (((value413).cmd) = (LogConcat)) {
                                  with (
                                    plog50 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value413).entries)], 
                                    log63 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value539 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value539).cmd) = (LogConcat)) {
                                      plog := [plog50 EXCEPT ![i] = ((plog50)[i]) \o ((value539).entries)];
                                      log := [log63 EXCEPT ![i] = ((log63)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result141 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result141)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result141)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6117 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6117}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1118 = (fd)[j]) {
                                            await yielded_fd1118;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value539).cmd) = (LogPop)) {
                                        plog := [plog50 EXCEPT ![i] = SubSeq((plog50)[i], 1, (Len((plog50)[i])) - ((value539).cnt))];
                                        log := [log63 EXCEPT ![i] = ((log63)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result142 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result142)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result142)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6118 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6118}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1119 = (fd)[j]) {
                                              await yielded_fd1119;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log63 EXCEPT ![i] = ((log63)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result143 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result143)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result143)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6119 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6119}), enabled |-> ((network)[j]).enabled]];
                                              plog := plog50;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1120 = (fd)[j]) {
                                              await yielded_fd1120;
                                              plog := plog50;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  if (((value413).cmd) = (LogPop)) {
                                    with (
                                      plog51 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value413).cnt))], 
                                      log64 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value540 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value540).cmd) = (LogConcat)) {
                                        plog := [plog51 EXCEPT ![i] = ((plog51)[i]) \o ((value540).entries)];
                                        log := [log64 EXCEPT ![i] = ((log64)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result144 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result144)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result144)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6120 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6120}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1121 = (fd)[j]) {
                                              await yielded_fd1121;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value540).cmd) = (LogPop)) {
                                          plog := [plog51 EXCEPT ![i] = SubSeq((plog51)[i], 1, (Len((plog51)[i])) - ((value540).cnt))];
                                          log := [log64 EXCEPT ![i] = ((log64)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result145 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result145)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result145)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value6121 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6121}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1122 = (fd)[j]) {
                                                await yielded_fd1122;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log64 EXCEPT ![i] = ((log64)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result146 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result146)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result146)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value6122 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6122}), enabled |-> ((network)[j]).enabled]];
                                                plog := plog51;
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1123 = (fd)[j]) {
                                                await yielded_fd1123;
                                                plog := plog51;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  } else {
                                    with (
                                      log65 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                      value541 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                    ) {
                                      if (((value541).cmd) = (LogConcat)) {
                                        plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value541).entries)];
                                        log := [log65 EXCEPT ![i] = ((log65)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result147 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result147)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result147)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6123 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6123}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1124 = (fd)[j]) {
                                              await yielded_fd1124;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        if (((value541).cmd) = (LogPop)) {
                                          plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value541).cnt))];
                                          log := [log65 EXCEPT ![i] = ((log65)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result148 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result148)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result148)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value6124 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6124}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1125 = (fd)[j]) {
                                                await yielded_fd1125;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        } else {
                                          log := [log65 EXCEPT ![i] = ((log65)[i]) \o ((m).mentries)];
                                          assert ((m).mcommitIndex) <= (Len((log)[i]));
                                          with (result149 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                            sm := [sm EXCEPT ![i] = (result149)[1]];
                                            smDomain := [smDomain EXCEPT ![i] = (result149)[2]];
                                            commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                            either {
                                              with (value6125 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                                await ((network)[j]).enabled;
                                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6125}), enabled |-> ((network)[j]).enabled]];
                                                goto serverLoop;
                                              };
                                            } or {
                                              with (yielded_fd1126 = (fd)[j]) {
                                                await yielded_fd1126;
                                                goto serverLoop;
                                              };
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        };
                      } else {
                        if ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))) {
                          state := [state EXCEPT ![i] = Follower];
                          if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                            either {
                              with (value314 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                await ((network)[j]).enabled;
                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value314}), enabled |-> ((network)[j]).enabled]];
                                goto serverLoop;
                              };
                            } or {
                              with (yielded_fd014 = (fd)[j]) {
                                await yielded_fd014;
                                goto serverLoop;
                              };
                            };
                          } else {
                            assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                            with (
                              index = ((m).mprevLogIndex) + (1), 
                              value414 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                            ) {
                              if (((value414).cmd) = (LogConcat)) {
                                with (
                                  plog52 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value414).entries)], 
                                  log66 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                  value542 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                ) {
                                  if (((value542).cmd) = (LogConcat)) {
                                    plog := [plog52 EXCEPT ![i] = ((plog52)[i]) \o ((value542).entries)];
                                    log := [log66 EXCEPT ![i] = ((log66)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result150 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result150)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result150)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6126 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6126}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1127 = (fd)[j]) {
                                          await yielded_fd1127;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value542).cmd) = (LogPop)) {
                                      plog := [plog52 EXCEPT ![i] = SubSeq((plog52)[i], 1, (Len((plog52)[i])) - ((value542).cnt))];
                                      log := [log66 EXCEPT ![i] = ((log66)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result151 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result151)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result151)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6127 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6127}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1128 = (fd)[j]) {
                                            await yielded_fd1128;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      log := [log66 EXCEPT ![i] = ((log66)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result152 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result152)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result152)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6128 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6128}), enabled |-> ((network)[j]).enabled]];
                                            plog := plog52;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1129 = (fd)[j]) {
                                            await yielded_fd1129;
                                            plog := plog52;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              } else {
                                if (((value414).cmd) = (LogPop)) {
                                  with (
                                    plog53 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value414).cnt))], 
                                    log67 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value543 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value543).cmd) = (LogConcat)) {
                                      plog := [plog53 EXCEPT ![i] = ((plog53)[i]) \o ((value543).entries)];
                                      log := [log67 EXCEPT ![i] = ((log67)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result153 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result153)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result153)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6129 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6129}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1130 = (fd)[j]) {
                                            await yielded_fd1130;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value543).cmd) = (LogPop)) {
                                        plog := [plog53 EXCEPT ![i] = SubSeq((plog53)[i], 1, (Len((plog53)[i])) - ((value543).cnt))];
                                        log := [log67 EXCEPT ![i] = ((log67)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result154 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result154)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result154)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6130 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6130}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1131 = (fd)[j]) {
                                              await yielded_fd1131;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log67 EXCEPT ![i] = ((log67)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result155 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result155)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result155)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6131 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6131}), enabled |-> ((network)[j]).enabled]];
                                              plog := plog53;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1132 = (fd)[j]) {
                                              await yielded_fd1132;
                                              plog := plog53;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  with (
                                    log68 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value544 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value544).cmd) = (LogConcat)) {
                                      plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value544).entries)];
                                      log := [log68 EXCEPT ![i] = ((log68)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result156 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result156)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result156)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6132 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6132}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1133 = (fd)[j]) {
                                            await yielded_fd1133;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value544).cmd) = (LogPop)) {
                                        plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value544).cnt))];
                                        log := [log68 EXCEPT ![i] = ((log68)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result157 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result157)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result157)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6133 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6133}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1134 = (fd)[j]) {
                                              await yielded_fd1134;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log68 EXCEPT ![i] = ((log68)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result158 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result158)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result158)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6134 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6134}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1135 = (fd)[j]) {
                                              await yielded_fd1135;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        } else {
                          if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                            either {
                              with (value315 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                await ((network)[j]).enabled;
                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value315}), enabled |-> ((network)[j]).enabled]];
                                goto serverLoop;
                              };
                            } or {
                              with (yielded_fd015 = (fd)[j]) {
                                await yielded_fd015;
                                goto serverLoop;
                              };
                            };
                          } else {
                            assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                            with (
                              index = ((m).mprevLogIndex) + (1), 
                              value415 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                            ) {
                              if (((value415).cmd) = (LogConcat)) {
                                with (
                                  plog54 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value415).entries)], 
                                  log69 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                  value545 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                ) {
                                  if (((value545).cmd) = (LogConcat)) {
                                    plog := [plog54 EXCEPT ![i] = ((plog54)[i]) \o ((value545).entries)];
                                    log := [log69 EXCEPT ![i] = ((log69)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result159 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result159)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result159)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6135 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6135}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1136 = (fd)[j]) {
                                          await yielded_fd1136;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value545).cmd) = (LogPop)) {
                                      plog := [plog54 EXCEPT ![i] = SubSeq((plog54)[i], 1, (Len((plog54)[i])) - ((value545).cnt))];
                                      log := [log69 EXCEPT ![i] = ((log69)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result160 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result160)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result160)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6136 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6136}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1137 = (fd)[j]) {
                                            await yielded_fd1137;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      log := [log69 EXCEPT ![i] = ((log69)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result161 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result161)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result161)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6137 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6137}), enabled |-> ((network)[j]).enabled]];
                                            plog := plog54;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1138 = (fd)[j]) {
                                            await yielded_fd1138;
                                            plog := plog54;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              } else {
                                if (((value415).cmd) = (LogPop)) {
                                  with (
                                    plog55 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value415).cnt))], 
                                    log70 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value546 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value546).cmd) = (LogConcat)) {
                                      plog := [plog55 EXCEPT ![i] = ((plog55)[i]) \o ((value546).entries)];
                                      log := [log70 EXCEPT ![i] = ((log70)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result162 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result162)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result162)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6138 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6138}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1139 = (fd)[j]) {
                                            await yielded_fd1139;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value546).cmd) = (LogPop)) {
                                        plog := [plog55 EXCEPT ![i] = SubSeq((plog55)[i], 1, (Len((plog55)[i])) - ((value546).cnt))];
                                        log := [log70 EXCEPT ![i] = ((log70)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result163 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result163)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result163)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6139 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6139}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1140 = (fd)[j]) {
                                              await yielded_fd1140;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log70 EXCEPT ![i] = ((log70)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result164 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result164)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result164)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6140 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6140}), enabled |-> ((network)[j]).enabled]];
                                              plog := plog55;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1141 = (fd)[j]) {
                                              await yielded_fd1141;
                                              plog := plog55;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  with (
                                    log71 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value547 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value547).cmd) = (LogConcat)) {
                                      plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value547).entries)];
                                      log := [log71 EXCEPT ![i] = ((log71)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result165 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result165)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result165)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6141 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6141}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1142 = (fd)[j]) {
                                            await yielded_fd1142;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value547).cmd) = (LogPop)) {
                                        plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value547).cnt))];
                                        log := [log71 EXCEPT ![i] = ((log71)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result166 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result166)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result166)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6142 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6142}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1143 = (fd)[j]) {
                                              await yielded_fd1143;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log71 EXCEPT ![i] = ((log71)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result167 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result167)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result167)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6143 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6143}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1144 = (fd)[j]) {
                                              await yielded_fd1144;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  };
                } else {
                  if (((m).mtype) = (AppendEntriesResponse)) {
                    if (((m).mterm) > ((currentTerm)[self])) {
                      currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                      state := [state EXCEPT ![self] = Follower];
                      votedFor := [votedFor EXCEPT ![self] = Nil];
                      leader := [leader EXCEPT ![self] = Nil];
                      if (((m).mterm) < ((currentTerm)[self])) {
                        skip;
                        goto serverLoop;
                      } else {
                        with (
                          i = self, 
                          j = (m).msource
                        ) {
                          assert ((m).mterm) = ((currentTerm)[i]);
                          if ((m).msuccess) {
                            nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m).mmatchIndex) + (1)]];
                            matchIndex := [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m).mmatchIndex]];
                            goto serverLoop;
                          } else {
                            nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]];
                            goto serverLoop;
                          };
                        };
                      };
                    } else {
                      if (((m).mterm) < ((currentTerm)[self])) {
                        skip;
                        goto serverLoop;
                      } else {
                        with (
                          i = self, 
                          j = (m).msource
                        ) {
                          assert ((m).mterm) = ((currentTerm)[i]);
                          if ((m).msuccess) {
                            nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m).mmatchIndex) + (1)]];
                            matchIndex := [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m).mmatchIndex]];
                            goto serverLoop;
                          } else {
                            nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]];
                            goto serverLoop;
                          };
                        };
                      };
                    };
                  } else {
                    if ((((m).mtype) = (ClientPutRequest)) \/ (((m).mtype) = (ClientGetRequest))) {
                      if (((state)[self]) = (Leader)) {
                        with (entry = [term |-> (currentTerm)[self], cmd |-> (m).mcmd, client |-> (m).msource]) {
                          log := [log EXCEPT ![self] = Append((log)[self], entry)];
                          with (value71 = [cmd |-> LogConcat, entries |-> <<entry>>]) {
                            if (((value71).cmd) = (LogConcat)) {
                              plog := [plog EXCEPT ![self] = ((plog)[self]) \o ((value71).entries)];
                              with (value83 = TRUE) {
                                appendEntriesCh := [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value83)];
                                goto serverLoop;
                              };
                            } else {
                              if (((value71).cmd) = (LogPop)) {
                                plog := [plog EXCEPT ![self] = SubSeq((plog)[self], 1, (Len((plog)[self])) - ((value71).cnt))];
                                with (value84 = TRUE) {
                                  appendEntriesCh := [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value84)];
                                  goto serverLoop;
                                };
                              } else {
                                with (value85 = TRUE) {
                                  appendEntriesCh := [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value85)];
                                  goto serverLoop;
                                };
                              };
                            };
                          };
                        };
                      } else {
                        with (
                          i = self, 
                          j = (m).msource, 
                          respType = IF (((m).mcmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse, 
                          value91 = [mtype |-> respType, msuccess |-> FALSE, mresponse |-> [idx |-> ((m).mcmd).idx, key |-> ((m).mcmd).key], mleaderHint |-> (leader)[i], msource |-> i, mdest |-> j]
                        ) {
                          await ((network)[j]).enabled;
                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value91}), enabled |-> ((network)[j]).enabled]];
                          goto serverLoop;
                        };
                      };
                    } else {
                      goto serverLoop;
                    };
                  };
                };
              };
            };
          };
        };
      } else {
        if (((m).mtype) = (RequestVoteRequest)) {
          if (((m).mterm) > ((currentTerm)[self])) {
            currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
            state := [state EXCEPT ![self] = Follower];
            with (votedFor5 = [votedFor EXCEPT ![self] = Nil]) {
              leader := [leader EXCEPT ![self] = Nil];
              with (
                i = self, 
                j = (m).msource, 
                logOK = (((m).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m).mlastLogIndex) >= (Len((log)[i])))), 
                grant = ((((m).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor5)[self]) \in ({Nil, j}))
              ) {
                assert ((m).mterm) <= ((currentTerm)[i]);
                if (grant) {
                  votedFor := [votedFor5 EXCEPT ![i] = j];
                  either {
                    with (value08 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                      await ((network)[j]).enabled;
                      await (Cardinality(((network)[j]).queue)) < (BufferSize);
                      network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value08}), enabled |-> ((network)[j]).enabled]];
                      if (Debug) {
                        print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                        goto serverLoop;
                      } else {
                        goto serverLoop;
                      };
                    };
                  } or {
                    with (yielded_fd24 = (fd)[j]) {
                      await yielded_fd24;
                      if (Debug) {
                        print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                        goto serverLoop;
                      } else {
                        goto serverLoop;
                      };
                    };
                  };
                } else {
                  either {
                    with (value09 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                      await ((network)[j]).enabled;
                      await (Cardinality(((network)[j]).queue)) < (BufferSize);
                      network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value09}), enabled |-> ((network)[j]).enabled]];
                      if (Debug) {
                        print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                        votedFor := votedFor5;
                        goto serverLoop;
                      } else {
                        votedFor := votedFor5;
                        goto serverLoop;
                      };
                    };
                  } or {
                    with (yielded_fd25 = (fd)[j]) {
                      await yielded_fd25;
                      if (Debug) {
                        print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                        votedFor := votedFor5;
                        goto serverLoop;
                      } else {
                        votedFor := votedFor5;
                        goto serverLoop;
                      };
                    };
                  };
                };
              };
            };
          } else {
            with (
              i = self, 
              j = (m).msource, 
              logOK = (((m).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m).mlastLogIndex) >= (Len((log)[i])))), 
              grant = ((((m).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor)[self]) \in ({Nil, j}))
            ) {
              assert ((m).mterm) <= ((currentTerm)[i]);
              if (grant) {
                votedFor := [votedFor EXCEPT ![i] = j];
                either {
                  with (value010 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                    await ((network)[j]).enabled;
                    await (Cardinality(((network)[j]).queue)) < (BufferSize);
                    network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value010}), enabled |-> ((network)[j]).enabled]];
                    if (Debug) {
                      print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                      goto serverLoop;
                    } else {
                      goto serverLoop;
                    };
                  };
                } or {
                  with (yielded_fd26 = (fd)[j]) {
                    await yielded_fd26;
                    if (Debug) {
                      print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                      goto serverLoop;
                    } else {
                      goto serverLoop;
                    };
                  };
                };
              } else {
                either {
                  with (value011 = [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j]) {
                    await ((network)[j]).enabled;
                    await (Cardinality(((network)[j]).queue)) < (BufferSize);
                    network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value011}), enabled |-> ((network)[j]).enabled]];
                    if (Debug) {
                      print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                      goto serverLoop;
                    } else {
                      goto serverLoop;
                    };
                  };
                } or {
                  with (yielded_fd27 = (fd)[j]) {
                    await yielded_fd27;
                    if (Debug) {
                      print <<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>;
                      goto serverLoop;
                    } else {
                      goto serverLoop;
                    };
                  };
                };
              };
            };
          };
        } else {
          if (((m).mtype) = (RequestVoteResponse)) {
            if (((m).mterm) > ((currentTerm)[self])) {
              currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
              state := [state EXCEPT ![self] = Follower];
              votedFor := [votedFor EXCEPT ![self] = Nil];
              leader := [leader EXCEPT ![self] = Nil];
              if (((m).mterm) < ((currentTerm)[self])) {
                skip;
                goto serverLoop;
              } else {
                with (
                  i = self, 
                  j = (m).msource
                ) {
                  assert ((m).mterm) = ((currentTerm)[i]);
                  votesResponded := [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})];
                  if ((m).mvoteGranted) {
                    votesGranted := [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})];
                    if ((((state)[i]) = (Candidate)) /\ (isQuorum((votesGranted)[i]))) {
                      with (value112 = TRUE) {
                        becomeLeaderCh := [becomeLeaderCh EXCEPT ![i] = Append((becomeLeaderCh)[i], value112)];
                        goto serverLoop;
                      };
                    } else {
                      goto serverLoop;
                    };
                  } else {
                    goto serverLoop;
                  };
                };
              };
            } else {
              if (((m).mterm) < ((currentTerm)[self])) {
                skip;
                goto serverLoop;
              } else {
                with (
                  i = self, 
                  j = (m).msource
                ) {
                  assert ((m).mterm) = ((currentTerm)[i]);
                  votesResponded := [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})];
                  if ((m).mvoteGranted) {
                    votesGranted := [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})];
                    if ((((state)[i]) = (Candidate)) /\ (isQuorum((votesGranted)[i]))) {
                      with (value113 = TRUE) {
                        becomeLeaderCh := [becomeLeaderCh EXCEPT ![i] = Append((becomeLeaderCh)[i], value113)];
                        goto serverLoop;
                      };
                    } else {
                      goto serverLoop;
                    };
                  } else {
                    goto serverLoop;
                  };
                };
              };
            };
          } else {
            if (((m).mtype) = (AppendEntriesRequest)) {
              if (((m).mterm) > ((currentTerm)[self])) {
                currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                with (state5 = [state EXCEPT ![self] = Follower]) {
                  votedFor := [votedFor EXCEPT ![self] = Nil];
                  with (
                    leader5 = [leader EXCEPT ![self] = Nil], 
                    i = self, 
                    j = (m).msource, 
                    logOK = (((m).mprevLogIndex) = (0)) \/ (((((m).mprevLogIndex) > (0)) /\ (((m).mprevLogIndex) <= (Len((log)[i])))) /\ (((m).mprevLogTerm) = ((((log)[i])[(m).mprevLogIndex]).term)))
                  ) {
                    assert ((m).mterm) <= ((currentTerm)[i]);
                    if (((m).mterm) = ((currentTerm)[i])) {
                      leader := [leader5 EXCEPT ![i] = (m).msource];
                      with (value24 = LeaderTimeoutReset) {
                        assert FALSE;
                        if ((((m).mterm) = ((currentTerm)[i])) /\ (((state5)[i]) = (Candidate))) {
                          state := [state5 EXCEPT ![i] = Follower];
                          if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                            either {
                              with (value316 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                await ((network)[j]).enabled;
                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value316}), enabled |-> ((network)[j]).enabled]];
                                goto serverLoop;
                              };
                            } or {
                              with (yielded_fd016 = (fd)[j]) {
                                await yielded_fd016;
                                goto serverLoop;
                              };
                            };
                          } else {
                            assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                            with (
                              index = ((m).mprevLogIndex) + (1), 
                              value416 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                            ) {
                              if (((value416).cmd) = (LogConcat)) {
                                with (
                                  plog56 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value416).entries)], 
                                  log72 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                  value548 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                ) {
                                  if (((value548).cmd) = (LogConcat)) {
                                    plog := [plog56 EXCEPT ![i] = ((plog56)[i]) \o ((value548).entries)];
                                    log := [log72 EXCEPT ![i] = ((log72)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result168 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result168)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result168)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6144 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6144}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1145 = (fd)[j]) {
                                          await yielded_fd1145;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value548).cmd) = (LogPop)) {
                                      plog := [plog56 EXCEPT ![i] = SubSeq((plog56)[i], 1, (Len((plog56)[i])) - ((value548).cnt))];
                                      log := [log72 EXCEPT ![i] = ((log72)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result169 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result169)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result169)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6145 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6145}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1146 = (fd)[j]) {
                                            await yielded_fd1146;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      log := [log72 EXCEPT ![i] = ((log72)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result170 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result170)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result170)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6146 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6146}), enabled |-> ((network)[j]).enabled]];
                                            plog := plog56;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1147 = (fd)[j]) {
                                            await yielded_fd1147;
                                            plog := plog56;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              } else {
                                if (((value416).cmd) = (LogPop)) {
                                  with (
                                    plog57 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value416).cnt))], 
                                    log73 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value549 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value549).cmd) = (LogConcat)) {
                                      plog := [plog57 EXCEPT ![i] = ((plog57)[i]) \o ((value549).entries)];
                                      log := [log73 EXCEPT ![i] = ((log73)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result171 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result171)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result171)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6147 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6147}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1148 = (fd)[j]) {
                                            await yielded_fd1148;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value549).cmd) = (LogPop)) {
                                        plog := [plog57 EXCEPT ![i] = SubSeq((plog57)[i], 1, (Len((plog57)[i])) - ((value549).cnt))];
                                        log := [log73 EXCEPT ![i] = ((log73)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result172 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result172)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result172)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6148 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6148}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1149 = (fd)[j]) {
                                              await yielded_fd1149;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log73 EXCEPT ![i] = ((log73)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result173 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result173)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result173)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6149 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6149}), enabled |-> ((network)[j]).enabled]];
                                              plog := plog57;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1150 = (fd)[j]) {
                                              await yielded_fd1150;
                                              plog := plog57;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  with (
                                    log74 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value550 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value550).cmd) = (LogConcat)) {
                                      plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value550).entries)];
                                      log := [log74 EXCEPT ![i] = ((log74)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result174 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result174)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result174)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6150 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6150}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1151 = (fd)[j]) {
                                            await yielded_fd1151;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value550).cmd) = (LogPop)) {
                                        plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value550).cnt))];
                                        log := [log74 EXCEPT ![i] = ((log74)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result175 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result175)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result175)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6151 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6151}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1152 = (fd)[j]) {
                                              await yielded_fd1152;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log74 EXCEPT ![i] = ((log74)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result176 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result176)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result176)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6152 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6152}), enabled |-> ((network)[j]).enabled]];
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1153 = (fd)[j]) {
                                              await yielded_fd1153;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        } else {
                          if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state5)[i]) = (Follower))) /\ (~ (logOK)))) {
                            either {
                              with (value317 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                                await ((network)[j]).enabled;
                                await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value317}), enabled |-> ((network)[j]).enabled]];
                                state := state5;
                                goto serverLoop;
                              };
                            } or {
                              with (yielded_fd017 = (fd)[j]) {
                                await yielded_fd017;
                                state := state5;
                                goto serverLoop;
                              };
                            };
                          } else {
                            assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state5)[i]) = (Follower))) /\ (logOK);
                            with (
                              index = ((m).mprevLogIndex) + (1), 
                              value417 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                            ) {
                              if (((value417).cmd) = (LogConcat)) {
                                with (
                                  plog58 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value417).entries)], 
                                  log75 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                  value551 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                ) {
                                  if (((value551).cmd) = (LogConcat)) {
                                    plog := [plog58 EXCEPT ![i] = ((plog58)[i]) \o ((value551).entries)];
                                    log := [log75 EXCEPT ![i] = ((log75)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result177 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result177)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result177)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6153 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6153}), enabled |-> ((network)[j]).enabled]];
                                          state := state5;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1154 = (fd)[j]) {
                                          await yielded_fd1154;
                                          state := state5;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value551).cmd) = (LogPop)) {
                                      plog := [plog58 EXCEPT ![i] = SubSeq((plog58)[i], 1, (Len((plog58)[i])) - ((value551).cnt))];
                                      log := [log75 EXCEPT ![i] = ((log75)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result178 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result178)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result178)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6154 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6154}), enabled |-> ((network)[j]).enabled]];
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1155 = (fd)[j]) {
                                            await yielded_fd1155;
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      log := [log75 EXCEPT ![i] = ((log75)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result179 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result179)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result179)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6155 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6155}), enabled |-> ((network)[j]).enabled]];
                                            plog := plog58;
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1156 = (fd)[j]) {
                                            await yielded_fd1156;
                                            plog := plog58;
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              } else {
                                if (((value417).cmd) = (LogPop)) {
                                  with (
                                    plog59 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value417).cnt))], 
                                    log76 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value552 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value552).cmd) = (LogConcat)) {
                                      plog := [plog59 EXCEPT ![i] = ((plog59)[i]) \o ((value552).entries)];
                                      log := [log76 EXCEPT ![i] = ((log76)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result180 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result180)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result180)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6156 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6156}), enabled |-> ((network)[j]).enabled]];
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1157 = (fd)[j]) {
                                            await yielded_fd1157;
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value552).cmd) = (LogPop)) {
                                        plog := [plog59 EXCEPT ![i] = SubSeq((plog59)[i], 1, (Len((plog59)[i])) - ((value552).cnt))];
                                        log := [log76 EXCEPT ![i] = ((log76)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result181 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result181)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result181)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6157 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6157}), enabled |-> ((network)[j]).enabled]];
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1158 = (fd)[j]) {
                                              await yielded_fd1158;
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log76 EXCEPT ![i] = ((log76)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result182 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result182)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result182)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6158 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6158}), enabled |-> ((network)[j]).enabled]];
                                              plog := plog59;
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1159 = (fd)[j]) {
                                              await yielded_fd1159;
                                              plog := plog59;
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                } else {
                                  with (
                                    log77 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                    value553 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                  ) {
                                    if (((value553).cmd) = (LogConcat)) {
                                      plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value553).entries)];
                                      log := [log77 EXCEPT ![i] = ((log77)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result183 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result183)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result183)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6159 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6159}), enabled |-> ((network)[j]).enabled]];
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1160 = (fd)[j]) {
                                            await yielded_fd1160;
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      if (((value553).cmd) = (LogPop)) {
                                        plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value553).cnt))];
                                        log := [log77 EXCEPT ![i] = ((log77)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result184 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result184)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result184)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6160 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6160}), enabled |-> ((network)[j]).enabled]];
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1161 = (fd)[j]) {
                                              await yielded_fd1161;
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      } else {
                                        log := [log77 EXCEPT ![i] = ((log77)[i]) \o ((m).mentries)];
                                        assert ((m).mcommitIndex) <= (Len((log)[i]));
                                        with (result185 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                          sm := [sm EXCEPT ![i] = (result185)[1]];
                                          smDomain := [smDomain EXCEPT ![i] = (result185)[2]];
                                          commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                          either {
                                            with (value6161 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                              await ((network)[j]).enabled;
                                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6161}), enabled |-> ((network)[j]).enabled]];
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          } or {
                                            with (yielded_fd1162 = (fd)[j]) {
                                              await yielded_fd1162;
                                              state := state5;
                                              goto serverLoop;
                                            };
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        };
                      };
                    } else {
                      if ((((m).mterm) = ((currentTerm)[i])) /\ (((state5)[i]) = (Candidate))) {
                        state := [state5 EXCEPT ![i] = Follower];
                        if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                          either {
                            with (value318 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                              await ((network)[j]).enabled;
                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value318}), enabled |-> ((network)[j]).enabled]];
                              leader := leader5;
                              goto serverLoop;
                            };
                          } or {
                            with (yielded_fd018 = (fd)[j]) {
                              await yielded_fd018;
                              leader := leader5;
                              goto serverLoop;
                            };
                          };
                        } else {
                          assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                          with (
                            index = ((m).mprevLogIndex) + (1), 
                            value418 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                          ) {
                            if (((value418).cmd) = (LogConcat)) {
                              with (
                                plog60 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value418).entries)], 
                                log78 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                value554 = [cmd |-> LogConcat, entries |-> (m).mentries]
                              ) {
                                if (((value554).cmd) = (LogConcat)) {
                                  plog := [plog60 EXCEPT ![i] = ((plog60)[i]) \o ((value554).entries)];
                                  log := [log78 EXCEPT ![i] = ((log78)[i]) \o ((m).mentries)];
                                  assert ((m).mcommitIndex) <= (Len((log)[i]));
                                  with (result186 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result186)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result186)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value6162 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6162}), enabled |-> ((network)[j]).enabled]];
                                        leader := leader5;
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1163 = (fd)[j]) {
                                        await yielded_fd1163;
                                        leader := leader5;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  if (((value554).cmd) = (LogPop)) {
                                    plog := [plog60 EXCEPT ![i] = SubSeq((plog60)[i], 1, (Len((plog60)[i])) - ((value554).cnt))];
                                    log := [log78 EXCEPT ![i] = ((log78)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result187 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result187)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result187)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6163 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6163}), enabled |-> ((network)[j]).enabled]];
                                          leader := leader5;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1164 = (fd)[j]) {
                                          await yielded_fd1164;
                                          leader := leader5;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    log := [log78 EXCEPT ![i] = ((log78)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result188 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result188)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result188)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6164 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6164}), enabled |-> ((network)[j]).enabled]];
                                          plog := plog60;
                                          leader := leader5;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1165 = (fd)[j]) {
                                          await yielded_fd1165;
                                          plog := plog60;
                                          leader := leader5;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            } else {
                              if (((value418).cmd) = (LogPop)) {
                                with (
                                  plog61 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value418).cnt))], 
                                  log79 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                  value555 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                ) {
                                  if (((value555).cmd) = (LogConcat)) {
                                    plog := [plog61 EXCEPT ![i] = ((plog61)[i]) \o ((value555).entries)];
                                    log := [log79 EXCEPT ![i] = ((log79)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result189 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result189)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result189)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6165 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6165}), enabled |-> ((network)[j]).enabled]];
                                          leader := leader5;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1166 = (fd)[j]) {
                                          await yielded_fd1166;
                                          leader := leader5;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value555).cmd) = (LogPop)) {
                                      plog := [plog61 EXCEPT ![i] = SubSeq((plog61)[i], 1, (Len((plog61)[i])) - ((value555).cnt))];
                                      log := [log79 EXCEPT ![i] = ((log79)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result190 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result190)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result190)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6166 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6166}), enabled |-> ((network)[j]).enabled]];
                                            leader := leader5;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1167 = (fd)[j]) {
                                            await yielded_fd1167;
                                            leader := leader5;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      log := [log79 EXCEPT ![i] = ((log79)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result191 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result191)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result191)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6167 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6167}), enabled |-> ((network)[j]).enabled]];
                                            plog := plog61;
                                            leader := leader5;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1168 = (fd)[j]) {
                                            await yielded_fd1168;
                                            plog := plog61;
                                            leader := leader5;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              } else {
                                with (
                                  log80 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                  value556 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                ) {
                                  if (((value556).cmd) = (LogConcat)) {
                                    plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value556).entries)];
                                    log := [log80 EXCEPT ![i] = ((log80)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result192 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result192)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result192)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6168 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6168}), enabled |-> ((network)[j]).enabled]];
                                          leader := leader5;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1169 = (fd)[j]) {
                                          await yielded_fd1169;
                                          leader := leader5;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value556).cmd) = (LogPop)) {
                                      plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value556).cnt))];
                                      log := [log80 EXCEPT ![i] = ((log80)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result193 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result193)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result193)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6169 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6169}), enabled |-> ((network)[j]).enabled]];
                                            leader := leader5;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1170 = (fd)[j]) {
                                            await yielded_fd1170;
                                            leader := leader5;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      log := [log80 EXCEPT ![i] = ((log80)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result194 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result194)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result194)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6170 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6170}), enabled |-> ((network)[j]).enabled]];
                                            leader := leader5;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1171 = (fd)[j]) {
                                            await yielded_fd1171;
                                            leader := leader5;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        };
                      } else {
                        if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state5)[i]) = (Follower))) /\ (~ (logOK)))) {
                          either {
                            with (value319 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                              await ((network)[j]).enabled;
                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value319}), enabled |-> ((network)[j]).enabled]];
                              leader := leader5;
                              state := state5;
                              goto serverLoop;
                            };
                          } or {
                            with (yielded_fd019 = (fd)[j]) {
                              await yielded_fd019;
                              leader := leader5;
                              state := state5;
                              goto serverLoop;
                            };
                          };
                        } else {
                          assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state5)[i]) = (Follower))) /\ (logOK);
                          with (
                            index = ((m).mprevLogIndex) + (1), 
                            value419 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                          ) {
                            if (((value419).cmd) = (LogConcat)) {
                              with (
                                plog62 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value419).entries)], 
                                log81 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                value557 = [cmd |-> LogConcat, entries |-> (m).mentries]
                              ) {
                                if (((value557).cmd) = (LogConcat)) {
                                  plog := [plog62 EXCEPT ![i] = ((plog62)[i]) \o ((value557).entries)];
                                  log := [log81 EXCEPT ![i] = ((log81)[i]) \o ((m).mentries)];
                                  assert ((m).mcommitIndex) <= (Len((log)[i]));
                                  with (result195 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result195)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result195)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value6171 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6171}), enabled |-> ((network)[j]).enabled]];
                                        leader := leader5;
                                        state := state5;
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1172 = (fd)[j]) {
                                        await yielded_fd1172;
                                        leader := leader5;
                                        state := state5;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  if (((value557).cmd) = (LogPop)) {
                                    plog := [plog62 EXCEPT ![i] = SubSeq((plog62)[i], 1, (Len((plog62)[i])) - ((value557).cnt))];
                                    log := [log81 EXCEPT ![i] = ((log81)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result196 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result196)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result196)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6172 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6172}), enabled |-> ((network)[j]).enabled]];
                                          leader := leader5;
                                          state := state5;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1173 = (fd)[j]) {
                                          await yielded_fd1173;
                                          leader := leader5;
                                          state := state5;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    log := [log81 EXCEPT ![i] = ((log81)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result197 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result197)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result197)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6173 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6173}), enabled |-> ((network)[j]).enabled]];
                                          plog := plog62;
                                          leader := leader5;
                                          state := state5;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1174 = (fd)[j]) {
                                          await yielded_fd1174;
                                          plog := plog62;
                                          leader := leader5;
                                          state := state5;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            } else {
                              if (((value419).cmd) = (LogPop)) {
                                with (
                                  plog63 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value419).cnt))], 
                                  log82 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                  value558 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                ) {
                                  if (((value558).cmd) = (LogConcat)) {
                                    plog := [plog63 EXCEPT ![i] = ((plog63)[i]) \o ((value558).entries)];
                                    log := [log82 EXCEPT ![i] = ((log82)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result198 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result198)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result198)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6174 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6174}), enabled |-> ((network)[j]).enabled]];
                                          leader := leader5;
                                          state := state5;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1175 = (fd)[j]) {
                                          await yielded_fd1175;
                                          leader := leader5;
                                          state := state5;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value558).cmd) = (LogPop)) {
                                      plog := [plog63 EXCEPT ![i] = SubSeq((plog63)[i], 1, (Len((plog63)[i])) - ((value558).cnt))];
                                      log := [log82 EXCEPT ![i] = ((log82)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result199 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result199)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result199)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6175 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6175}), enabled |-> ((network)[j]).enabled]];
                                            leader := leader5;
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1176 = (fd)[j]) {
                                            await yielded_fd1176;
                                            leader := leader5;
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      log := [log82 EXCEPT ![i] = ((log82)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result200 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result200)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result200)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6176 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6176}), enabled |-> ((network)[j]).enabled]];
                                            plog := plog63;
                                            leader := leader5;
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1177 = (fd)[j]) {
                                            await yielded_fd1177;
                                            plog := plog63;
                                            leader := leader5;
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              } else {
                                with (
                                  log83 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                  value559 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                ) {
                                  if (((value559).cmd) = (LogConcat)) {
                                    plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value559).entries)];
                                    log := [log83 EXCEPT ![i] = ((log83)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result201 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result201)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result201)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6177 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6177}), enabled |-> ((network)[j]).enabled]];
                                          leader := leader5;
                                          state := state5;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1178 = (fd)[j]) {
                                          await yielded_fd1178;
                                          leader := leader5;
                                          state := state5;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value559).cmd) = (LogPop)) {
                                      plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value559).cnt))];
                                      log := [log83 EXCEPT ![i] = ((log83)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result202 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result202)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result202)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6178 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6178}), enabled |-> ((network)[j]).enabled]];
                                            leader := leader5;
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1179 = (fd)[j]) {
                                            await yielded_fd1179;
                                            leader := leader5;
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      log := [log83 EXCEPT ![i] = ((log83)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result203 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result203)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result203)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6179 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6179}), enabled |-> ((network)[j]).enabled]];
                                            leader := leader5;
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1180 = (fd)[j]) {
                                            await yielded_fd1180;
                                            leader := leader5;
                                            state := state5;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  };
                };
              } else {
                with (
                  i = self, 
                  j = (m).msource, 
                  logOK = (((m).mprevLogIndex) = (0)) \/ (((((m).mprevLogIndex) > (0)) /\ (((m).mprevLogIndex) <= (Len((log)[i])))) /\ (((m).mprevLogTerm) = ((((log)[i])[(m).mprevLogIndex]).term)))
                ) {
                  assert ((m).mterm) <= ((currentTerm)[i]);
                  if (((m).mterm) = ((currentTerm)[i])) {
                    leader := [leader EXCEPT ![i] = (m).msource];
                    with (value25 = LeaderTimeoutReset) {
                      assert FALSE;
                      if ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))) {
                        state := [state EXCEPT ![i] = Follower];
                        if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                          either {
                            with (value320 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                              await ((network)[j]).enabled;
                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value320}), enabled |-> ((network)[j]).enabled]];
                              goto serverLoop;
                            };
                          } or {
                            with (yielded_fd020 = (fd)[j]) {
                              await yielded_fd020;
                              goto serverLoop;
                            };
                          };
                        } else {
                          assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                          with (
                            index = ((m).mprevLogIndex) + (1), 
                            value420 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                          ) {
                            if (((value420).cmd) = (LogConcat)) {
                              with (
                                plog64 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value420).entries)], 
                                log84 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                value560 = [cmd |-> LogConcat, entries |-> (m).mentries]
                              ) {
                                if (((value560).cmd) = (LogConcat)) {
                                  plog := [plog64 EXCEPT ![i] = ((plog64)[i]) \o ((value560).entries)];
                                  log := [log84 EXCEPT ![i] = ((log84)[i]) \o ((m).mentries)];
                                  assert ((m).mcommitIndex) <= (Len((log)[i]));
                                  with (result204 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result204)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result204)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value6180 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6180}), enabled |-> ((network)[j]).enabled]];
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1181 = (fd)[j]) {
                                        await yielded_fd1181;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  if (((value560).cmd) = (LogPop)) {
                                    plog := [plog64 EXCEPT ![i] = SubSeq((plog64)[i], 1, (Len((plog64)[i])) - ((value560).cnt))];
                                    log := [log84 EXCEPT ![i] = ((log84)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result205 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result205)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result205)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6181 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6181}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1182 = (fd)[j]) {
                                          await yielded_fd1182;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    log := [log84 EXCEPT ![i] = ((log84)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result206 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result206)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result206)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6182 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6182}), enabled |-> ((network)[j]).enabled]];
                                          plog := plog64;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1183 = (fd)[j]) {
                                          await yielded_fd1183;
                                          plog := plog64;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            } else {
                              if (((value420).cmd) = (LogPop)) {
                                with (
                                  plog65 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value420).cnt))], 
                                  log85 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                  value561 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                ) {
                                  if (((value561).cmd) = (LogConcat)) {
                                    plog := [plog65 EXCEPT ![i] = ((plog65)[i]) \o ((value561).entries)];
                                    log := [log85 EXCEPT ![i] = ((log85)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result207 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result207)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result207)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6183 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6183}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1184 = (fd)[j]) {
                                          await yielded_fd1184;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value561).cmd) = (LogPop)) {
                                      plog := [plog65 EXCEPT ![i] = SubSeq((plog65)[i], 1, (Len((plog65)[i])) - ((value561).cnt))];
                                      log := [log85 EXCEPT ![i] = ((log85)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result208 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result208)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result208)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6184 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6184}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1185 = (fd)[j]) {
                                            await yielded_fd1185;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      log := [log85 EXCEPT ![i] = ((log85)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result209 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result209)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result209)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6185 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6185}), enabled |-> ((network)[j]).enabled]];
                                            plog := plog65;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1186 = (fd)[j]) {
                                            await yielded_fd1186;
                                            plog := plog65;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              } else {
                                with (
                                  log86 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                  value562 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                ) {
                                  if (((value562).cmd) = (LogConcat)) {
                                    plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value562).entries)];
                                    log := [log86 EXCEPT ![i] = ((log86)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result210 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result210)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result210)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6186 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6186}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1187 = (fd)[j]) {
                                          await yielded_fd1187;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value562).cmd) = (LogPop)) {
                                      plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value562).cnt))];
                                      log := [log86 EXCEPT ![i] = ((log86)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result211 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result211)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result211)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6187 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6187}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1188 = (fd)[j]) {
                                            await yielded_fd1188;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      log := [log86 EXCEPT ![i] = ((log86)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result212 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result212)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result212)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6188 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6188}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1189 = (fd)[j]) {
                                            await yielded_fd1189;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        };
                      } else {
                        if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                          either {
                            with (value321 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                              await ((network)[j]).enabled;
                              await (Cardinality(((network)[j]).queue)) < (BufferSize);
                              network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value321}), enabled |-> ((network)[j]).enabled]];
                              goto serverLoop;
                            };
                          } or {
                            with (yielded_fd021 = (fd)[j]) {
                              await yielded_fd021;
                              goto serverLoop;
                            };
                          };
                        } else {
                          assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                          with (
                            index = ((m).mprevLogIndex) + (1), 
                            value421 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                          ) {
                            if (((value421).cmd) = (LogConcat)) {
                              with (
                                plog66 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value421).entries)], 
                                log87 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                value563 = [cmd |-> LogConcat, entries |-> (m).mentries]
                              ) {
                                if (((value563).cmd) = (LogConcat)) {
                                  plog := [plog66 EXCEPT ![i] = ((plog66)[i]) \o ((value563).entries)];
                                  log := [log87 EXCEPT ![i] = ((log87)[i]) \o ((m).mentries)];
                                  assert ((m).mcommitIndex) <= (Len((log)[i]));
                                  with (result213 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result213)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result213)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value6189 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6189}), enabled |-> ((network)[j]).enabled]];
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1190 = (fd)[j]) {
                                        await yielded_fd1190;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  if (((value563).cmd) = (LogPop)) {
                                    plog := [plog66 EXCEPT ![i] = SubSeq((plog66)[i], 1, (Len((plog66)[i])) - ((value563).cnt))];
                                    log := [log87 EXCEPT ![i] = ((log87)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result214 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result214)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result214)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6190 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6190}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1191 = (fd)[j]) {
                                          await yielded_fd1191;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    log := [log87 EXCEPT ![i] = ((log87)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result215 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result215)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result215)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6191 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6191}), enabled |-> ((network)[j]).enabled]];
                                          plog := plog66;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1192 = (fd)[j]) {
                                          await yielded_fd1192;
                                          plog := plog66;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            } else {
                              if (((value421).cmd) = (LogPop)) {
                                with (
                                  plog67 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value421).cnt))], 
                                  log88 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                  value564 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                ) {
                                  if (((value564).cmd) = (LogConcat)) {
                                    plog := [plog67 EXCEPT ![i] = ((plog67)[i]) \o ((value564).entries)];
                                    log := [log88 EXCEPT ![i] = ((log88)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result216 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result216)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result216)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6192 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6192}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1193 = (fd)[j]) {
                                          await yielded_fd1193;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value564).cmd) = (LogPop)) {
                                      plog := [plog67 EXCEPT ![i] = SubSeq((plog67)[i], 1, (Len((plog67)[i])) - ((value564).cnt))];
                                      log := [log88 EXCEPT ![i] = ((log88)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result217 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result217)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result217)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6193 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6193}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1194 = (fd)[j]) {
                                            await yielded_fd1194;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      log := [log88 EXCEPT ![i] = ((log88)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result218 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result218)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result218)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6194 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6194}), enabled |-> ((network)[j]).enabled]];
                                            plog := plog67;
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1195 = (fd)[j]) {
                                            await yielded_fd1195;
                                            plog := plog67;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              } else {
                                with (
                                  log89 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                  value565 = [cmd |-> LogConcat, entries |-> (m).mentries]
                                ) {
                                  if (((value565).cmd) = (LogConcat)) {
                                    plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value565).entries)];
                                    log := [log89 EXCEPT ![i] = ((log89)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result219 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result219)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result219)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6195 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6195}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1196 = (fd)[j]) {
                                          await yielded_fd1196;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    if (((value565).cmd) = (LogPop)) {
                                      plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value565).cnt))];
                                      log := [log89 EXCEPT ![i] = ((log89)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result220 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result220)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result220)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6196 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6196}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1197 = (fd)[j]) {
                                            await yielded_fd1197;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    } else {
                                      log := [log89 EXCEPT ![i] = ((log89)[i]) \o ((m).mentries)];
                                      assert ((m).mcommitIndex) <= (Len((log)[i]));
                                      with (result221 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                        sm := [sm EXCEPT ![i] = (result221)[1]];
                                        smDomain := [smDomain EXCEPT ![i] = (result221)[2]];
                                        commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                        either {
                                          with (value6197 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                            await ((network)[j]).enabled;
                                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6197}), enabled |-> ((network)[j]).enabled]];
                                            goto serverLoop;
                                          };
                                        } or {
                                          with (yielded_fd1198 = (fd)[j]) {
                                            await yielded_fd1198;
                                            goto serverLoop;
                                          };
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  } else {
                    if ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))) {
                      state := [state EXCEPT ![i] = Follower];
                      if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                        either {
                          with (value322 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                            await ((network)[j]).enabled;
                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value322}), enabled |-> ((network)[j]).enabled]];
                            goto serverLoop;
                          };
                        } or {
                          with (yielded_fd022 = (fd)[j]) {
                            await yielded_fd022;
                            goto serverLoop;
                          };
                        };
                      } else {
                        assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                        with (
                          index = ((m).mprevLogIndex) + (1), 
                          value422 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                        ) {
                          if (((value422).cmd) = (LogConcat)) {
                            with (
                              plog68 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value422).entries)], 
                              log90 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                              value566 = [cmd |-> LogConcat, entries |-> (m).mentries]
                            ) {
                              if (((value566).cmd) = (LogConcat)) {
                                plog := [plog68 EXCEPT ![i] = ((plog68)[i]) \o ((value566).entries)];
                                log := [log90 EXCEPT ![i] = ((log90)[i]) \o ((m).mentries)];
                                assert ((m).mcommitIndex) <= (Len((log)[i]));
                                with (result222 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                  sm := [sm EXCEPT ![i] = (result222)[1]];
                                  smDomain := [smDomain EXCEPT ![i] = (result222)[2]];
                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                  either {
                                    with (value6198 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                      await ((network)[j]).enabled;
                                      await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                      network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6198}), enabled |-> ((network)[j]).enabled]];
                                      goto serverLoop;
                                    };
                                  } or {
                                    with (yielded_fd1199 = (fd)[j]) {
                                      await yielded_fd1199;
                                      goto serverLoop;
                                    };
                                  };
                                };
                              } else {
                                if (((value566).cmd) = (LogPop)) {
                                  plog := [plog68 EXCEPT ![i] = SubSeq((plog68)[i], 1, (Len((plog68)[i])) - ((value566).cnt))];
                                  log := [log90 EXCEPT ![i] = ((log90)[i]) \o ((m).mentries)];
                                  assert ((m).mcommitIndex) <= (Len((log)[i]));
                                  with (result223 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result223)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result223)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value6199 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6199}), enabled |-> ((network)[j]).enabled]];
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1200 = (fd)[j]) {
                                        await yielded_fd1200;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  log := [log90 EXCEPT ![i] = ((log90)[i]) \o ((m).mentries)];
                                  assert ((m).mcommitIndex) <= (Len((log)[i]));
                                  with (result224 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result224)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result224)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value6200 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6200}), enabled |-> ((network)[j]).enabled]];
                                        plog := plog68;
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1201 = (fd)[j]) {
                                        await yielded_fd1201;
                                        plog := plog68;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          } else {
                            if (((value422).cmd) = (LogPop)) {
                              with (
                                plog69 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value422).cnt))], 
                                log91 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                value567 = [cmd |-> LogConcat, entries |-> (m).mentries]
                              ) {
                                if (((value567).cmd) = (LogConcat)) {
                                  plog := [plog69 EXCEPT ![i] = ((plog69)[i]) \o ((value567).entries)];
                                  log := [log91 EXCEPT ![i] = ((log91)[i]) \o ((m).mentries)];
                                  assert ((m).mcommitIndex) <= (Len((log)[i]));
                                  with (result225 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result225)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result225)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value6201 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6201}), enabled |-> ((network)[j]).enabled]];
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1202 = (fd)[j]) {
                                        await yielded_fd1202;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  if (((value567).cmd) = (LogPop)) {
                                    plog := [plog69 EXCEPT ![i] = SubSeq((plog69)[i], 1, (Len((plog69)[i])) - ((value567).cnt))];
                                    log := [log91 EXCEPT ![i] = ((log91)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result226 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result226)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result226)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6202 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6202}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1203 = (fd)[j]) {
                                          await yielded_fd1203;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    log := [log91 EXCEPT ![i] = ((log91)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result227 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result227)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result227)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6203 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6203}), enabled |-> ((network)[j]).enabled]];
                                          plog := plog69;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1204 = (fd)[j]) {
                                          await yielded_fd1204;
                                          plog := plog69;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            } else {
                              with (
                                log92 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                value568 = [cmd |-> LogConcat, entries |-> (m).mentries]
                              ) {
                                if (((value568).cmd) = (LogConcat)) {
                                  plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value568).entries)];
                                  log := [log92 EXCEPT ![i] = ((log92)[i]) \o ((m).mentries)];
                                  assert ((m).mcommitIndex) <= (Len((log)[i]));
                                  with (result228 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result228)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result228)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value6204 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6204}), enabled |-> ((network)[j]).enabled]];
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1205 = (fd)[j]) {
                                        await yielded_fd1205;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  if (((value568).cmd) = (LogPop)) {
                                    plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value568).cnt))];
                                    log := [log92 EXCEPT ![i] = ((log92)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result229 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result229)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result229)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6205 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6205}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1206 = (fd)[j]) {
                                          await yielded_fd1206;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    log := [log92 EXCEPT ![i] = ((log92)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result230 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result230)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result230)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6206 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6206}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1207 = (fd)[j]) {
                                          await yielded_fd1207;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        };
                      };
                    } else {
                      if ((((m).mterm) < ((currentTerm)[i])) \/ (((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))) {
                        either {
                          with (value323 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j]) {
                            await ((network)[j]).enabled;
                            await (Cardinality(((network)[j]).queue)) < (BufferSize);
                            network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value323}), enabled |-> ((network)[j]).enabled]];
                            goto serverLoop;
                          };
                        } or {
                          with (yielded_fd023 = (fd)[j]) {
                            await yielded_fd023;
                            goto serverLoop;
                          };
                        };
                      } else {
                        assert ((((m).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK);
                        with (
                          index = ((m).mprevLogIndex) + (1), 
                          value423 = [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m).mprevLogIndex)]
                        ) {
                          if (((value423).cmd) = (LogConcat)) {
                            with (
                              plog70 = [plog EXCEPT ![i] = ((plog)[i]) \o ((value423).entries)], 
                              log93 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                              value569 = [cmd |-> LogConcat, entries |-> (m).mentries]
                            ) {
                              if (((value569).cmd) = (LogConcat)) {
                                plog := [plog70 EXCEPT ![i] = ((plog70)[i]) \o ((value569).entries)];
                                log := [log93 EXCEPT ![i] = ((log93)[i]) \o ((m).mentries)];
                                assert ((m).mcommitIndex) <= (Len((log)[i]));
                                with (result231 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                  sm := [sm EXCEPT ![i] = (result231)[1]];
                                  smDomain := [smDomain EXCEPT ![i] = (result231)[2]];
                                  commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                  either {
                                    with (value6207 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                      await ((network)[j]).enabled;
                                      await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                      network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6207}), enabled |-> ((network)[j]).enabled]];
                                      goto serverLoop;
                                    };
                                  } or {
                                    with (yielded_fd1208 = (fd)[j]) {
                                      await yielded_fd1208;
                                      goto serverLoop;
                                    };
                                  };
                                };
                              } else {
                                if (((value569).cmd) = (LogPop)) {
                                  plog := [plog70 EXCEPT ![i] = SubSeq((plog70)[i], 1, (Len((plog70)[i])) - ((value569).cnt))];
                                  log := [log93 EXCEPT ![i] = ((log93)[i]) \o ((m).mentries)];
                                  assert ((m).mcommitIndex) <= (Len((log)[i]));
                                  with (result232 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result232)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result232)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value6208 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6208}), enabled |-> ((network)[j]).enabled]];
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1209 = (fd)[j]) {
                                        await yielded_fd1209;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  log := [log93 EXCEPT ![i] = ((log93)[i]) \o ((m).mentries)];
                                  assert ((m).mcommitIndex) <= (Len((log)[i]));
                                  with (result233 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result233)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result233)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value6209 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6209}), enabled |-> ((network)[j]).enabled]];
                                        plog := plog70;
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1210 = (fd)[j]) {
                                        await yielded_fd1210;
                                        plog := plog70;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          } else {
                            if (((value423).cmd) = (LogPop)) {
                              with (
                                plog71 = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value423).cnt))], 
                                log94 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                value570 = [cmd |-> LogConcat, entries |-> (m).mentries]
                              ) {
                                if (((value570).cmd) = (LogConcat)) {
                                  plog := [plog71 EXCEPT ![i] = ((plog71)[i]) \o ((value570).entries)];
                                  log := [log94 EXCEPT ![i] = ((log94)[i]) \o ((m).mentries)];
                                  assert ((m).mcommitIndex) <= (Len((log)[i]));
                                  with (result234 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result234)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result234)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value6210 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6210}), enabled |-> ((network)[j]).enabled]];
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1211 = (fd)[j]) {
                                        await yielded_fd1211;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  if (((value570).cmd) = (LogPop)) {
                                    plog := [plog71 EXCEPT ![i] = SubSeq((plog71)[i], 1, (Len((plog71)[i])) - ((value570).cnt))];
                                    log := [log94 EXCEPT ![i] = ((log94)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result235 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result235)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result235)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6211 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6211}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1212 = (fd)[j]) {
                                          await yielded_fd1212;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    log := [log94 EXCEPT ![i] = ((log94)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result236 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result236)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result236)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6212 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6212}), enabled |-> ((network)[j]).enabled]];
                                          plog := plog71;
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1213 = (fd)[j]) {
                                          await yielded_fd1213;
                                          plog := plog71;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            } else {
                              with (
                                log95 = [log EXCEPT ![i] = SubSeq((log)[i], 1, (m).mprevLogIndex)], 
                                value571 = [cmd |-> LogConcat, entries |-> (m).mentries]
                              ) {
                                if (((value571).cmd) = (LogConcat)) {
                                  plog := [plog EXCEPT ![i] = ((plog)[i]) \o ((value571).entries)];
                                  log := [log95 EXCEPT ![i] = ((log95)[i]) \o ((m).mentries)];
                                  assert ((m).mcommitIndex) <= (Len((log)[i]));
                                  with (result237 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                    sm := [sm EXCEPT ![i] = (result237)[1]];
                                    smDomain := [smDomain EXCEPT ![i] = (result237)[2]];
                                    commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                    either {
                                      with (value6213 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                        await ((network)[j]).enabled;
                                        await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                        network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6213}), enabled |-> ((network)[j]).enabled]];
                                        goto serverLoop;
                                      };
                                    } or {
                                      with (yielded_fd1214 = (fd)[j]) {
                                        await yielded_fd1214;
                                        goto serverLoop;
                                      };
                                    };
                                  };
                                } else {
                                  if (((value571).cmd) = (LogPop)) {
                                    plog := [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value571).cnt))];
                                    log := [log95 EXCEPT ![i] = ((log95)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result238 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result238)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result238)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6214 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6214}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1215 = (fd)[j]) {
                                          await yielded_fd1215;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  } else {
                                    log := [log95 EXCEPT ![i] = ((log95)[i]) \o ((m).mentries)];
                                    assert ((m).mcommitIndex) <= (Len((log)[i]));
                                    with (result239 = ApplyLog((log)[i], ((commitIndex)[i]) + (1), (m).mcommitIndex, (sm)[i], (smDomain)[i])) {
                                      sm := [sm EXCEPT ![i] = (result239)[1]];
                                      smDomain := [smDomain EXCEPT ![i] = (result239)[2]];
                                      commitIndex := [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m).mcommitIndex})];
                                      either {
                                        with (value6215 = [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m).mprevLogIndex) + (Len((m).mentries)), msource |-> i, mdest |-> j]) {
                                          await ((network)[j]).enabled;
                                          await (Cardinality(((network)[j]).queue)) < (BufferSize);
                                          network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6215}), enabled |-> ((network)[j]).enabled]];
                                          goto serverLoop;
                                        };
                                      } or {
                                        with (yielded_fd1216 = (fd)[j]) {
                                          await yielded_fd1216;
                                          goto serverLoop;
                                        };
                                      };
                                    };
                                  };
                                };
                              };
                            };
                          };
                        };
                      };
                    };
                  };
                };
              };
            } else {
              if (((m).mtype) = (AppendEntriesResponse)) {
                if (((m).mterm) > ((currentTerm)[self])) {
                  currentTerm := [currentTerm EXCEPT ![self] = (m).mterm];
                  state := [state EXCEPT ![self] = Follower];
                  votedFor := [votedFor EXCEPT ![self] = Nil];
                  leader := [leader EXCEPT ![self] = Nil];
                  if (((m).mterm) < ((currentTerm)[self])) {
                    skip;
                    goto serverLoop;
                  } else {
                    with (
                      i = self, 
                      j = (m).msource
                    ) {
                      assert ((m).mterm) = ((currentTerm)[i]);
                      if ((m).msuccess) {
                        nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m).mmatchIndex) + (1)]];
                        matchIndex := [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m).mmatchIndex]];
                        goto serverLoop;
                      } else {
                        nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]];
                        goto serverLoop;
                      };
                    };
                  };
                } else {
                  if (((m).mterm) < ((currentTerm)[self])) {
                    skip;
                    goto serverLoop;
                  } else {
                    with (
                      i = self, 
                      j = (m).msource
                    ) {
                      assert ((m).mterm) = ((currentTerm)[i]);
                      if ((m).msuccess) {
                        nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m).mmatchIndex) + (1)]];
                        matchIndex := [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m).mmatchIndex]];
                        goto serverLoop;
                      } else {
                        nextIndex := [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]];
                        goto serverLoop;
                      };
                    };
                  };
                };
              } else {
                if ((((m).mtype) = (ClientPutRequest)) \/ (((m).mtype) = (ClientGetRequest))) {
                  if (((state)[self]) = (Leader)) {
                    with (entry = [term |-> (currentTerm)[self], cmd |-> (m).mcmd, client |-> (m).msource]) {
                      log := [log EXCEPT ![self] = Append((log)[self], entry)];
                      with (value72 = [cmd |-> LogConcat, entries |-> <<entry>>]) {
                        if (((value72).cmd) = (LogConcat)) {
                          plog := [plog EXCEPT ![self] = ((plog)[self]) \o ((value72).entries)];
                          with (value86 = TRUE) {
                            appendEntriesCh := [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value86)];
                            goto serverLoop;
                          };
                        } else {
                          if (((value72).cmd) = (LogPop)) {
                            plog := [plog EXCEPT ![self] = SubSeq((plog)[self], 1, (Len((plog)[self])) - ((value72).cnt))];
                            with (value87 = TRUE) {
                              appendEntriesCh := [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value87)];
                              goto serverLoop;
                            };
                          } else {
                            with (value88 = TRUE) {
                              appendEntriesCh := [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value88)];
                              goto serverLoop;
                            };
                          };
                        };
                      };
                    };
                  } else {
                    with (
                      i = self, 
                      j = (m).msource, 
                      respType = IF (((m).mcmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse, 
                      value92 = [mtype |-> respType, msuccess |-> FALSE, mresponse |-> [idx |-> ((m).mcmd).idx, key |-> ((m).mcmd).key], mleaderHint |-> (leader)[i], msource |-> i, mdest |-> j]
                    ) {
                      await ((network)[j]).enabled;
                      await (Cardinality(((network)[j]).queue)) < (BufferSize);
                      network := [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value92}), enabled |-> ((network)[j]).enabled]];
                      goto serverLoop;
                    };
                  };
                } else {
                  goto serverLoop;
                };
              };
            };
          };
        };
      };
  }
  
  fair process (s1 \in ServerRequestVoteSet)
    variables idx0 = 1; srvId0 = (requestVoteSrvId)[self];
  {
    serverRequestVoteLoop:
      if (TRUE) {
        if (ExploreFail) {
          with (yielded_network20 = ((network)[srvId0]).enabled) {
            if (~ (yielded_network20)) {
              await FALSE;
              either {
                with (yielded_leaderTimeout1 = TRUE) {
                  await yielded_leaderTimeout1;
                  with (
                    len00 \in (0) .. (Cardinality(((network)[srvId0]).queue)), 
                    yielded_network30 = len00
                  ) {
                    await (yielded_network30) = (0);
                    await ((state)[srvId0]) \in ({Follower, Candidate});
                    with (i3 = srvId0) {
                      state := [state EXCEPT ![i3] = Candidate];
                      currentTerm := [currentTerm EXCEPT ![i3] = ((currentTerm)[i3]) + (1)];
                      votedFor := [votedFor EXCEPT ![i3] = i3];
                      votesResponded := [votesResponded EXCEPT ![i3] = {i3}];
                      votesGranted := [votesGranted EXCEPT ![i3] = {i3}];
                      leader := [leader EXCEPT ![i3] = Nil];
                      if (Debug) {
                        print <<"ServerTimeout", i3, (currentTerm)[i3]>>;
                        idx0 := 1;
                        goto requestVoteLoop;
                      } else {
                        idx0 := 1;
                        goto requestVoteLoop;
                      };
                    };
                  };
                };
              } or {
                with (yielded_leaderTimeout00 = FALSE) {
                  await yielded_leaderTimeout00;
                  with (
                    len01 \in (0) .. (Cardinality(((network)[srvId0]).queue)), 
                    yielded_network31 = len01
                  ) {
                    await (yielded_network31) = (0);
                    await ((state)[srvId0]) \in ({Follower, Candidate});
                    with (i4 = srvId0) {
                      state := [state EXCEPT ![i4] = Candidate];
                      currentTerm := [currentTerm EXCEPT ![i4] = ((currentTerm)[i4]) + (1)];
                      votedFor := [votedFor EXCEPT ![i4] = i4];
                      votesResponded := [votesResponded EXCEPT ![i4] = {i4}];
                      votesGranted := [votesGranted EXCEPT ![i4] = {i4}];
                      leader := [leader EXCEPT ![i4] = Nil];
                      if (Debug) {
                        print <<"ServerTimeout", i4, (currentTerm)[i4]>>;
                        idx0 := 1;
                        goto requestVoteLoop;
                      } else {
                        idx0 := 1;
                        goto requestVoteLoop;
                      };
                    };
                  };
                };
              };
            } else {
              either {
                with (yielded_leaderTimeout2 = TRUE) {
                  await yielded_leaderTimeout2;
                  with (
                    len02 \in (0) .. (Cardinality(((network)[srvId0]).queue)), 
                    yielded_network32 = len02
                  ) {
                    await (yielded_network32) = (0);
                    await ((state)[srvId0]) \in ({Follower, Candidate});
                    with (i5 = srvId0) {
                      state := [state EXCEPT ![i5] = Candidate];
                      currentTerm := [currentTerm EXCEPT ![i5] = ((currentTerm)[i5]) + (1)];
                      votedFor := [votedFor EXCEPT ![i5] = i5];
                      votesResponded := [votesResponded EXCEPT ![i5] = {i5}];
                      votesGranted := [votesGranted EXCEPT ![i5] = {i5}];
                      leader := [leader EXCEPT ![i5] = Nil];
                      if (Debug) {
                        print <<"ServerTimeout", i5, (currentTerm)[i5]>>;
                        idx0 := 1;
                        goto requestVoteLoop;
                      } else {
                        idx0 := 1;
                        goto requestVoteLoop;
                      };
                    };
                  };
                };
              } or {
                with (yielded_leaderTimeout01 = FALSE) {
                  await yielded_leaderTimeout01;
                  with (
                    len03 \in (0) .. (Cardinality(((network)[srvId0]).queue)), 
                    yielded_network33 = len03
                  ) {
                    await (yielded_network33) = (0);
                    await ((state)[srvId0]) \in ({Follower, Candidate});
                    with (i6 = srvId0) {
                      state := [state EXCEPT ![i6] = Candidate];
                      currentTerm := [currentTerm EXCEPT ![i6] = ((currentTerm)[i6]) + (1)];
                      votedFor := [votedFor EXCEPT ![i6] = i6];
                      votesResponded := [votesResponded EXCEPT ![i6] = {i6}];
                      votesGranted := [votesGranted EXCEPT ![i6] = {i6}];
                      leader := [leader EXCEPT ![i6] = Nil];
                      if (Debug) {
                        print <<"ServerTimeout", i6, (currentTerm)[i6]>>;
                        idx0 := 1;
                        goto requestVoteLoop;
                      } else {
                        idx0 := 1;
                        goto requestVoteLoop;
                      };
                    };
                  };
                };
              };
            };
          };
        } else {
          either {
            with (yielded_leaderTimeout3 = TRUE) {
              await yielded_leaderTimeout3;
              with (
                len04 \in (0) .. (Cardinality(((network)[srvId0]).queue)), 
                yielded_network34 = len04
              ) {
                await (yielded_network34) = (0);
                await ((state)[srvId0]) \in ({Follower, Candidate});
                with (i7 = srvId0) {
                  state := [state EXCEPT ![i7] = Candidate];
                  currentTerm := [currentTerm EXCEPT ![i7] = ((currentTerm)[i7]) + (1)];
                  votedFor := [votedFor EXCEPT ![i7] = i7];
                  votesResponded := [votesResponded EXCEPT ![i7] = {i7}];
                  votesGranted := [votesGranted EXCEPT ![i7] = {i7}];
                  leader := [leader EXCEPT ![i7] = Nil];
                  if (Debug) {
                    print <<"ServerTimeout", i7, (currentTerm)[i7]>>;
                    idx0 := 1;
                    goto requestVoteLoop;
                  } else {
                    idx0 := 1;
                    goto requestVoteLoop;
                  };
                };
              };
            };
          } or {
            with (yielded_leaderTimeout02 = FALSE) {
              await yielded_leaderTimeout02;
              with (
                len05 \in (0) .. (Cardinality(((network)[srvId0]).queue)), 
                yielded_network35 = len05
              ) {
                await (yielded_network35) = (0);
                await ((state)[srvId0]) \in ({Follower, Candidate});
                with (i8 = srvId0) {
                  state := [state EXCEPT ![i8] = Candidate];
                  currentTerm := [currentTerm EXCEPT ![i8] = ((currentTerm)[i8]) + (1)];
                  votedFor := [votedFor EXCEPT ![i8] = i8];
                  votesResponded := [votesResponded EXCEPT ![i8] = {i8}];
                  votesGranted := [votesGranted EXCEPT ![i8] = {i8}];
                  leader := [leader EXCEPT ![i8] = Nil];
                  if (Debug) {
                    print <<"ServerTimeout", i8, (currentTerm)[i8]>>;
                    idx0 := 1;
                    goto requestVoteLoop;
                  } else {
                    idx0 := 1;
                    goto requestVoteLoop;
                  };
                };
              };
            };
          };
        };
      } else {
        goto Done;
      };
    requestVoteLoop:
      if ((idx0) <= (NumServers)) {
        if (ExploreFail) {
          with (yielded_network40 = ((network)[srvId0]).enabled) {
            if (~ (yielded_network40)) {
              await FALSE;
              if ((idx0) # (srvId0)) {
                either {
                  with (value100 = [mtype |-> RequestVoteRequest, mterm |-> (currentTerm)[srvId0], mlastLogTerm |-> LastTerm((log)[srvId0]), mlastLogIndex |-> Len((log)[srvId0]), msource |-> srvId0, mdest |-> idx0]) {
                    await ((network)[idx0]).enabled;
                    await (Cardinality(((network)[idx0]).queue)) < (BufferSize);
                    network := [network EXCEPT ![idx0] = [queue |-> (((network)[idx0]).queue) \union ({value100}), enabled |-> ((network)[idx0]).enabled]];
                    idx0 := (idx0) + (1);
                    goto requestVoteLoop;
                  };
                } or {
                  with (yielded_fd28 = (fd)[idx0]) {
                    await yielded_fd28;
                    idx0 := (idx0) + (1);
                    goto requestVoteLoop;
                  };
                };
              } else {
                idx0 := (idx0) + (1);
                goto requestVoteLoop;
              };
            } else {
              if ((idx0) # (srvId0)) {
                either {
                  with (value101 = [mtype |-> RequestVoteRequest, mterm |-> (currentTerm)[srvId0], mlastLogTerm |-> LastTerm((log)[srvId0]), mlastLogIndex |-> Len((log)[srvId0]), msource |-> srvId0, mdest |-> idx0]) {
                    await ((network)[idx0]).enabled;
                    await (Cardinality(((network)[idx0]).queue)) < (BufferSize);
                    network := [network EXCEPT ![idx0] = [queue |-> (((network)[idx0]).queue) \union ({value101}), enabled |-> ((network)[idx0]).enabled]];
                    idx0 := (idx0) + (1);
                    goto requestVoteLoop;
                  };
                } or {
                  with (yielded_fd29 = (fd)[idx0]) {
                    await yielded_fd29;
                    idx0 := (idx0) + (1);
                    goto requestVoteLoop;
                  };
                };
              } else {
                idx0 := (idx0) + (1);
                goto requestVoteLoop;
              };
            };
          };
        } else {
          if ((idx0) # (srvId0)) {
            either {
              with (value102 = [mtype |-> RequestVoteRequest, mterm |-> (currentTerm)[srvId0], mlastLogTerm |-> LastTerm((log)[srvId0]), mlastLogIndex |-> Len((log)[srvId0]), msource |-> srvId0, mdest |-> idx0]) {
                await ((network)[idx0]).enabled;
                await (Cardinality(((network)[idx0]).queue)) < (BufferSize);
                network := [network EXCEPT ![idx0] = [queue |-> (((network)[idx0]).queue) \union ({value102}), enabled |-> ((network)[idx0]).enabled]];
                idx0 := (idx0) + (1);
                goto requestVoteLoop;
              };
            } or {
              with (yielded_fd210 = (fd)[idx0]) {
                await yielded_fd210;
                idx0 := (idx0) + (1);
                goto requestVoteLoop;
              };
            };
          } else {
            idx0 := (idx0) + (1);
            goto requestVoteLoop;
          };
        };
      } else {
        goto serverRequestVoteLoop;
      };
  }
  
  fair process (s2 \in ServerAppendEntriesSet)
    variables idx1; srvId1 = (appendEntriesSrvId)[self];
  {
    serverAppendEntriesLoop:
      either {
        await (Len((appendEntriesCh)[srvId1])) > (0);
        with (res0 = Head((appendEntriesCh)[srvId1])) {
          appendEntriesCh := [appendEntriesCh EXCEPT ![srvId1] = Tail((appendEntriesCh)[srvId1])];
          with (yielded_appendEntriesCh = res0) {
            if (yielded_appendEntriesCh) {
              if (ExploreFail) {
                with (yielded_network50 = ((network)[srvId1]).enabled) {
                  if (~ (yielded_network50)) {
                    await FALSE;
                    await ((state)[srvId1]) = (Leader);
                    idx1 := 1;
                    goto appendEntriesLoop;
                  } else {
                    await ((state)[srvId1]) = (Leader);
                    idx1 := 1;
                    goto appendEntriesLoop;
                  };
                };
              } else {
                await ((state)[srvId1]) = (Leader);
                idx1 := 1;
                goto appendEntriesLoop;
              };
            } else {
              goto Done;
            };
          };
        };
      } or {
        await ((appendEntriesCh)[srvId1]) = (<<>>);
        with (yielded_appendEntriesCh0 = TRUE) {
          if (yielded_appendEntriesCh0) {
            if (ExploreFail) {
              with (yielded_network51 = ((network)[srvId1]).enabled) {
                if (~ (yielded_network51)) {
                  await FALSE;
                  await ((state)[srvId1]) = (Leader);
                  idx1 := 1;
                  goto appendEntriesLoop;
                } else {
                  await ((state)[srvId1]) = (Leader);
                  idx1 := 1;
                  goto appendEntriesLoop;
                };
              };
            } else {
              await ((state)[srvId1]) = (Leader);
              idx1 := 1;
              goto appendEntriesLoop;
            };
          } else {
            goto Done;
          };
        };
      };
    appendEntriesLoop:
      if ((((state)[srvId1]) = (Leader)) /\ ((idx1) <= (NumServers))) {
        if (ExploreFail) {
          with (yielded_network60 = ((network)[srvId1]).enabled) {
            if (~ (yielded_network60)) {
              await FALSE;
              if ((idx1) # (srvId1)) {
                with (
                  prevLogIndex3 = (((nextIndex)[srvId1])[idx1]) - (1), 
                  prevLogTerm3 = IF (prevLogIndex3) > (0) THEN (((log)[srvId1])[prevLogIndex3]).term ELSE 0, 
                  entries3 = SubSeq((log)[srvId1], ((nextIndex)[srvId1])[idx1], Len((log)[srvId1]))
                ) {
                  either {
                    with (value114 = [mtype |-> AppendEntriesRequest, mterm |-> (currentTerm)[srvId1], mprevLogIndex |-> prevLogIndex3, mprevLogTerm |-> prevLogTerm3, mentries |-> entries3, mcommitIndex |-> (commitIndex)[srvId1], msource |-> srvId1, mdest |-> idx1]) {
                      await ((network)[idx1]).enabled;
                      await (Cardinality(((network)[idx1]).queue)) < (BufferSize);
                      network := [network EXCEPT ![idx1] = [queue |-> (((network)[idx1]).queue) \union ({value114}), enabled |-> ((network)[idx1]).enabled]];
                      idx1 := (idx1) + (1);
                      goto appendEntriesLoop;
                    };
                  } or {
                    with (yielded_fd30 = (fd)[idx1]) {
                      await yielded_fd30;
                      idx1 := (idx1) + (1);
                      goto appendEntriesLoop;
                    };
                  };
                };
              } else {
                idx1 := (idx1) + (1);
                goto appendEntriesLoop;
              };
            } else {
              if ((idx1) # (srvId1)) {
                with (
                  prevLogIndex4 = (((nextIndex)[srvId1])[idx1]) - (1), 
                  prevLogTerm4 = IF (prevLogIndex4) > (0) THEN (((log)[srvId1])[prevLogIndex4]).term ELSE 0, 
                  entries4 = SubSeq((log)[srvId1], ((nextIndex)[srvId1])[idx1], Len((log)[srvId1]))
                ) {
                  either {
                    with (value115 = [mtype |-> AppendEntriesRequest, mterm |-> (currentTerm)[srvId1], mprevLogIndex |-> prevLogIndex4, mprevLogTerm |-> prevLogTerm4, mentries |-> entries4, mcommitIndex |-> (commitIndex)[srvId1], msource |-> srvId1, mdest |-> idx1]) {
                      await ((network)[idx1]).enabled;
                      await (Cardinality(((network)[idx1]).queue)) < (BufferSize);
                      network := [network EXCEPT ![idx1] = [queue |-> (((network)[idx1]).queue) \union ({value115}), enabled |-> ((network)[idx1]).enabled]];
                      idx1 := (idx1) + (1);
                      goto appendEntriesLoop;
                    };
                  } or {
                    with (yielded_fd31 = (fd)[idx1]) {
                      await yielded_fd31;
                      idx1 := (idx1) + (1);
                      goto appendEntriesLoop;
                    };
                  };
                };
              } else {
                idx1 := (idx1) + (1);
                goto appendEntriesLoop;
              };
            };
          };
        } else {
          if ((idx1) # (srvId1)) {
            with (
              prevLogIndex5 = (((nextIndex)[srvId1])[idx1]) - (1), 
              prevLogTerm5 = IF (prevLogIndex5) > (0) THEN (((log)[srvId1])[prevLogIndex5]).term ELSE 0, 
              entries5 = SubSeq((log)[srvId1], ((nextIndex)[srvId1])[idx1], Len((log)[srvId1]))
            ) {
              either {
                with (value116 = [mtype |-> AppendEntriesRequest, mterm |-> (currentTerm)[srvId1], mprevLogIndex |-> prevLogIndex5, mprevLogTerm |-> prevLogTerm5, mentries |-> entries5, mcommitIndex |-> (commitIndex)[srvId1], msource |-> srvId1, mdest |-> idx1]) {
                  await ((network)[idx1]).enabled;
                  await (Cardinality(((network)[idx1]).queue)) < (BufferSize);
                  network := [network EXCEPT ![idx1] = [queue |-> (((network)[idx1]).queue) \union ({value116}), enabled |-> ((network)[idx1]).enabled]];
                  idx1 := (idx1) + (1);
                  goto appendEntriesLoop;
                };
              } or {
                with (yielded_fd32 = (fd)[idx1]) {
                  await yielded_fd32;
                  idx1 := (idx1) + (1);
                  goto appendEntriesLoop;
                };
              };
            };
          } else {
            idx1 := (idx1) + (1);
            goto appendEntriesLoop;
          };
        };
      } else {
        goto serverAppendEntriesLoop;
      };
  }
  
  fair process (s3 \in ServerAdvanceCommitIndexSet)
    variables newCommitIndex = 0; srvId2 = (advanceCommitIndexSrvId)[self];
  {
    serverAdvanceCommitIndexLoop:
      if (TRUE) {
        if (ExploreFail) {
          with (yielded_network70 = ((network)[srvId2]).enabled) {
            if (~ (yielded_network70)) {
              await FALSE;
              await ((state)[srvId2]) = (Leader);
              with (
                i = srvId2, 
                maxAgreeIndex = FindMaxAgreeIndex((log)[i], i, (matchIndex)[i]), 
                nCommitIndex = IF ((maxAgreeIndex) # (Nil)) /\ (((((log)[i])[maxAgreeIndex]).term) = ((currentTerm)[i])) THEN maxAgreeIndex ELSE (commitIndex)[i]
              ) {
                newCommitIndex := nCommitIndex;
                assert (newCommitIndex) >= ((commitIndex)[i]);
                goto applyLoop;
              };
            } else {
              await ((state)[srvId2]) = (Leader);
              with (
                i = srvId2, 
                maxAgreeIndex = FindMaxAgreeIndex((log)[i], i, (matchIndex)[i]), 
                nCommitIndex = IF ((maxAgreeIndex) # (Nil)) /\ (((((log)[i])[maxAgreeIndex]).term) = ((currentTerm)[i])) THEN maxAgreeIndex ELSE (commitIndex)[i]
              ) {
                newCommitIndex := nCommitIndex;
                assert (newCommitIndex) >= ((commitIndex)[i]);
                goto applyLoop;
              };
            };
          };
        } else {
          await ((state)[srvId2]) = (Leader);
          with (
            i = srvId2, 
            maxAgreeIndex = FindMaxAgreeIndex((log)[i], i, (matchIndex)[i]), 
            nCommitIndex = IF ((maxAgreeIndex) # (Nil)) /\ (((((log)[i])[maxAgreeIndex]).term) = ((currentTerm)[i])) THEN maxAgreeIndex ELSE (commitIndex)[i]
          ) {
            newCommitIndex := nCommitIndex;
            assert (newCommitIndex) >= ((commitIndex)[i]);
            goto applyLoop;
          };
        };
      } else {
        goto Done;
      };
    applyLoop:
      if (((commitIndex)[srvId2]) < (newCommitIndex)) {
        if (ExploreFail) {
          with (yielded_network80 = ((network)[srvId2]).enabled) {
            if (~ (yielded_network80)) {
              await FALSE;
              commitIndex := [commitIndex EXCEPT ![srvId2] = ((commitIndex)[srvId2]) + (1)];
              with (
                i = srvId2, 
                k = (commitIndex)[i], 
                entry = ((log)[i])[k], 
                cmd = (entry).cmd, 
                respType = IF ((cmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse
              ) {
                if (((cmd).type) = (Put)) {
                  sm := [sm EXCEPT ![i] = ((sm)[i]) @@ (((cmd).key) :> ((cmd).value))];
                  smDomain := [smDomain EXCEPT ![i] = ((smDomain)[i]) \union ({(cmd).key})];
                  with (
                    reqOk = ((cmd).key) \in ((smDomain)[i]), 
                    value120 = [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client]
                  ) {
                    await ((network)[(entry).client]).enabled;
                    await (Cardinality(((network)[(entry).client]).queue)) < (BufferSize);
                    network := [network EXCEPT ![(entry).client] = [queue |-> (((network)[(entry).client]).queue) \union ({value120}), enabled |-> ((network)[(entry).client]).enabled]];
                    goto applyLoop;
                  };
                } else {
                  with (
                    reqOk = ((cmd).key) \in ((smDomain)[i]), 
                    value121 = [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client]
                  ) {
                    await ((network)[(entry).client]).enabled;
                    await (Cardinality(((network)[(entry).client]).queue)) < (BufferSize);
                    network := [network EXCEPT ![(entry).client] = [queue |-> (((network)[(entry).client]).queue) \union ({value121}), enabled |-> ((network)[(entry).client]).enabled]];
                    goto applyLoop;
                  };
                };
              };
            } else {
              commitIndex := [commitIndex EXCEPT ![srvId2] = ((commitIndex)[srvId2]) + (1)];
              with (
                i = srvId2, 
                k = (commitIndex)[i], 
                entry = ((log)[i])[k], 
                cmd = (entry).cmd, 
                respType = IF ((cmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse
              ) {
                if (((cmd).type) = (Put)) {
                  sm := [sm EXCEPT ![i] = ((sm)[i]) @@ (((cmd).key) :> ((cmd).value))];
                  smDomain := [smDomain EXCEPT ![i] = ((smDomain)[i]) \union ({(cmd).key})];
                  with (
                    reqOk = ((cmd).key) \in ((smDomain)[i]), 
                    value122 = [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client]
                  ) {
                    await ((network)[(entry).client]).enabled;
                    await (Cardinality(((network)[(entry).client]).queue)) < (BufferSize);
                    network := [network EXCEPT ![(entry).client] = [queue |-> (((network)[(entry).client]).queue) \union ({value122}), enabled |-> ((network)[(entry).client]).enabled]];
                    goto applyLoop;
                  };
                } else {
                  with (
                    reqOk = ((cmd).key) \in ((smDomain)[i]), 
                    value123 = [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client]
                  ) {
                    await ((network)[(entry).client]).enabled;
                    await (Cardinality(((network)[(entry).client]).queue)) < (BufferSize);
                    network := [network EXCEPT ![(entry).client] = [queue |-> (((network)[(entry).client]).queue) \union ({value123}), enabled |-> ((network)[(entry).client]).enabled]];
                    goto applyLoop;
                  };
                };
              };
            };
          };
        } else {
          commitIndex := [commitIndex EXCEPT ![srvId2] = ((commitIndex)[srvId2]) + (1)];
          with (
            i = srvId2, 
            k = (commitIndex)[i], 
            entry = ((log)[i])[k], 
            cmd = (entry).cmd, 
            respType = IF ((cmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse
          ) {
            if (((cmd).type) = (Put)) {
              sm := [sm EXCEPT ![i] = ((sm)[i]) @@ (((cmd).key) :> ((cmd).value))];
              smDomain := [smDomain EXCEPT ![i] = ((smDomain)[i]) \union ({(cmd).key})];
              with (
                reqOk = ((cmd).key) \in ((smDomain)[i]), 
                value124 = [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client]
              ) {
                await ((network)[(entry).client]).enabled;
                await (Cardinality(((network)[(entry).client]).queue)) < (BufferSize);
                network := [network EXCEPT ![(entry).client] = [queue |-> (((network)[(entry).client]).queue) \union ({value124}), enabled |-> ((network)[(entry).client]).enabled]];
                goto applyLoop;
              };
            } else {
              with (
                reqOk = ((cmd).key) \in ((smDomain)[i]), 
                value125 = [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client]
              ) {
                await ((network)[(entry).client]).enabled;
                await (Cardinality(((network)[(entry).client]).queue)) < (BufferSize);
                network := [network EXCEPT ![(entry).client] = [queue |-> (((network)[(entry).client]).queue) \union ({value125}), enabled |-> ((network)[(entry).client]).enabled]];
                goto applyLoop;
              };
            };
          };
        };
      } else {
        goto serverAdvanceCommitIndexLoop;
      };
  }
  
  fair process (s4 \in ServerBecomeLeaderSet)
    variables srvId3 = (becomeLeaderSrvId)[self];
  {
    serverBecomeLeaderLoop:
      either {
        await (Len((becomeLeaderCh)[srvId3])) > (0);
        with (res1 = Head((becomeLeaderCh)[srvId3])) {
          becomeLeaderCh := [becomeLeaderCh EXCEPT ![srvId3] = Tail((becomeLeaderCh)[srvId3])];
          with (yielded_becomeLeaderCh = res1) {
            if (yielded_becomeLeaderCh) {
              if (ExploreFail) {
                with (yielded_network90 = ((network)[srvId3]).enabled) {
                  if (~ (yielded_network90)) {
                    await FALSE;
                    await ((state)[srvId3]) = (Candidate);
                    await isQuorum((votesGranted)[srvId3]);
                    with (i = srvId3) {
                      state := [state EXCEPT ![i] = Leader];
                      nextIndex := [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]];
                      matchIndex := [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]];
                      leader := [leader EXCEPT ![i] = i];
                      with (value130 = TRUE) {
                        appendEntriesCh := [appendEntriesCh EXCEPT ![srvId3] = Append((appendEntriesCh)[srvId3], value130)];
                        if (Debug) {
                          print <<"BecomeLeader", i, (currentTerm)[i], (state)[i], (leader)[i]>>;
                          goto serverBecomeLeaderLoop;
                        } else {
                          goto serverBecomeLeaderLoop;
                        };
                      };
                    };
                  } else {
                    await ((state)[srvId3]) = (Candidate);
                    await isQuorum((votesGranted)[srvId3]);
                    with (i = srvId3) {
                      state := [state EXCEPT ![i] = Leader];
                      nextIndex := [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]];
                      matchIndex := [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]];
                      leader := [leader EXCEPT ![i] = i];
                      with (value131 = TRUE) {
                        appendEntriesCh := [appendEntriesCh EXCEPT ![srvId3] = Append((appendEntriesCh)[srvId3], value131)];
                        if (Debug) {
                          print <<"BecomeLeader", i, (currentTerm)[i], (state)[i], (leader)[i]>>;
                          goto serverBecomeLeaderLoop;
                        } else {
                          goto serverBecomeLeaderLoop;
                        };
                      };
                    };
                  };
                };
              } else {
                await ((state)[srvId3]) = (Candidate);
                await isQuorum((votesGranted)[srvId3]);
                with (i = srvId3) {
                  state := [state EXCEPT ![i] = Leader];
                  nextIndex := [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]];
                  matchIndex := [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]];
                  leader := [leader EXCEPT ![i] = i];
                  with (value132 = TRUE) {
                    appendEntriesCh := [appendEntriesCh EXCEPT ![srvId3] = Append((appendEntriesCh)[srvId3], value132)];
                    if (Debug) {
                      print <<"BecomeLeader", i, (currentTerm)[i], (state)[i], (leader)[i]>>;
                      goto serverBecomeLeaderLoop;
                    } else {
                      goto serverBecomeLeaderLoop;
                    };
                  };
                };
              };
            } else {
              goto Done;
            };
          };
        };
      } or {
        await ((becomeLeaderCh)[srvId3]) = (<<>>);
        with (yielded_becomeLeaderCh0 = TRUE) {
          if (yielded_becomeLeaderCh0) {
            if (ExploreFail) {
              with (yielded_network91 = ((network)[srvId3]).enabled) {
                if (~ (yielded_network91)) {
                  await FALSE;
                  await ((state)[srvId3]) = (Candidate);
                  await isQuorum((votesGranted)[srvId3]);
                  with (i = srvId3) {
                    state := [state EXCEPT ![i] = Leader];
                    nextIndex := [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]];
                    matchIndex := [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]];
                    leader := [leader EXCEPT ![i] = i];
                    with (value133 = TRUE) {
                      appendEntriesCh := [appendEntriesCh EXCEPT ![srvId3] = Append((appendEntriesCh)[srvId3], value133)];
                      if (Debug) {
                        print <<"BecomeLeader", i, (currentTerm)[i], (state)[i], (leader)[i]>>;
                        goto serverBecomeLeaderLoop;
                      } else {
                        goto serverBecomeLeaderLoop;
                      };
                    };
                  };
                } else {
                  await ((state)[srvId3]) = (Candidate);
                  await isQuorum((votesGranted)[srvId3]);
                  with (i = srvId3) {
                    state := [state EXCEPT ![i] = Leader];
                    nextIndex := [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]];
                    matchIndex := [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]];
                    leader := [leader EXCEPT ![i] = i];
                    with (value134 = TRUE) {
                      appendEntriesCh := [appendEntriesCh EXCEPT ![srvId3] = Append((appendEntriesCh)[srvId3], value134)];
                      if (Debug) {
                        print <<"BecomeLeader", i, (currentTerm)[i], (state)[i], (leader)[i]>>;
                        goto serverBecomeLeaderLoop;
                      } else {
                        goto serverBecomeLeaderLoop;
                      };
                    };
                  };
                };
              };
            } else {
              await ((state)[srvId3]) = (Candidate);
              await isQuorum((votesGranted)[srvId3]);
              with (i = srvId3) {
                state := [state EXCEPT ![i] = Leader];
                nextIndex := [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]];
                matchIndex := [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]];
                leader := [leader EXCEPT ![i] = i];
                with (value135 = TRUE) {
                  appendEntriesCh := [appendEntriesCh EXCEPT ![srvId3] = Append((appendEntriesCh)[srvId3], value135)];
                  if (Debug) {
                    print <<"BecomeLeader", i, (currentTerm)[i], (state)[i], (leader)[i]>>;
                    goto serverBecomeLeaderLoop;
                  } else {
                    goto serverBecomeLeaderLoop;
                  };
                };
              };
            };
          } else {
            goto Done;
          };
        };
      };
  }
  
  fair process (client \in ClientSet)
    variables leader0 = Nil; req; resp; reqIdx = 0; timeout = FALSE;
  {
    clientLoop:
      if (TRUE) {
        with (
          req00 \in AllReqs, 
          yielded_reqCh0 = req00
        ) {
          req := yielded_reqCh0;
          reqIdx := (reqIdx) + (1);
          goto sndReq;
        };
      } else {
        goto Done;
      };
    sndReq:
      if ((leader0) = (Nil)) {
        with (srv1 \in ServerSet) {
          leader0 := srv1;
          if (Debug) {
            print <<"ClientSndReq", self, leader0, reqIdx, req>>;
            if (((req).type) = (Put)) {
              either {
                with (value140 = [mtype |-> ClientPutRequest, mcmd |-> [idx |-> reqIdx, type |-> Put, key |-> (req).key, value |-> (req).value], msource |-> self, mdest |-> leader0]) {
                  await ((network)[leader0]).enabled;
                  await (Cardinality(((network)[leader0]).queue)) < (BufferSize);
                  network := [network EXCEPT ![leader0] = [queue |-> (((network)[leader0]).queue) \union ({value140}), enabled |-> ((network)[leader0]).enabled]];
                  goto rcvResp;
                };
              } or {
                with (yielded_fd40 = (fd)[leader0]) {
                  await yielded_fd40;
                  goto rcvResp;
                };
              };
            } else {
              if (((req).type) = (Get)) {
                either {
                  with (value150 = [mtype |-> ClientGetRequest, mcmd |-> [idx |-> reqIdx, type |-> Get, key |-> (req).key], msource |-> self, mdest |-> leader0]) {
                    await ((network)[leader0]).enabled;
                    await (Cardinality(((network)[leader0]).queue)) < (BufferSize);
                    network := [network EXCEPT ![leader0] = [queue |-> (((network)[leader0]).queue) \union ({value150}), enabled |-> ((network)[leader0]).enabled]];
                    goto rcvResp;
                  };
                } or {
                  with (yielded_fd50 = (fd)[leader0]) {
                    await yielded_fd50;
                    goto rcvResp;
                  };
                };
              } else {
                goto rcvResp;
              };
            };
          } else {
            if (((req).type) = (Put)) {
              either {
                with (value141 = [mtype |-> ClientPutRequest, mcmd |-> [idx |-> reqIdx, type |-> Put, key |-> (req).key, value |-> (req).value], msource |-> self, mdest |-> leader0]) {
                  await ((network)[leader0]).enabled;
                  await (Cardinality(((network)[leader0]).queue)) < (BufferSize);
                  network := [network EXCEPT ![leader0] = [queue |-> (((network)[leader0]).queue) \union ({value141}), enabled |-> ((network)[leader0]).enabled]];
                  goto rcvResp;
                };
              } or {
                with (yielded_fd41 = (fd)[leader0]) {
                  await yielded_fd41;
                  goto rcvResp;
                };
              };
            } else {
              if (((req).type) = (Get)) {
                either {
                  with (value151 = [mtype |-> ClientGetRequest, mcmd |-> [idx |-> reqIdx, type |-> Get, key |-> (req).key], msource |-> self, mdest |-> leader0]) {
                    await ((network)[leader0]).enabled;
                    await (Cardinality(((network)[leader0]).queue)) < (BufferSize);
                    network := [network EXCEPT ![leader0] = [queue |-> (((network)[leader0]).queue) \union ({value151}), enabled |-> ((network)[leader0]).enabled]];
                    goto rcvResp;
                  };
                } or {
                  with (yielded_fd51 = (fd)[leader0]) {
                    await yielded_fd51;
                    goto rcvResp;
                  };
                };
              } else {
                goto rcvResp;
              };
            };
          };
        };
      } else {
        if (Debug) {
          print <<"ClientSndReq", self, leader0, reqIdx, req>>;
          if (((req).type) = (Put)) {
            either {
              with (value142 = [mtype |-> ClientPutRequest, mcmd |-> [idx |-> reqIdx, type |-> Put, key |-> (req).key, value |-> (req).value], msource |-> self, mdest |-> leader0]) {
                await ((network)[leader0]).enabled;
                await (Cardinality(((network)[leader0]).queue)) < (BufferSize);
                network := [network EXCEPT ![leader0] = [queue |-> (((network)[leader0]).queue) \union ({value142}), enabled |-> ((network)[leader0]).enabled]];
                goto rcvResp;
              };
            } or {
              with (yielded_fd42 = (fd)[leader0]) {
                await yielded_fd42;
                goto rcvResp;
              };
            };
          } else {
            if (((req).type) = (Get)) {
              either {
                with (value152 = [mtype |-> ClientGetRequest, mcmd |-> [idx |-> reqIdx, type |-> Get, key |-> (req).key], msource |-> self, mdest |-> leader0]) {
                  await ((network)[leader0]).enabled;
                  await (Cardinality(((network)[leader0]).queue)) < (BufferSize);
                  network := [network EXCEPT ![leader0] = [queue |-> (((network)[leader0]).queue) \union ({value152}), enabled |-> ((network)[leader0]).enabled]];
                  goto rcvResp;
                };
              } or {
                with (yielded_fd52 = (fd)[leader0]) {
                  await yielded_fd52;
                  goto rcvResp;
                };
              };
            } else {
              goto rcvResp;
            };
          };
        } else {
          if (((req).type) = (Put)) {
            either {
              with (value143 = [mtype |-> ClientPutRequest, mcmd |-> [idx |-> reqIdx, type |-> Put, key |-> (req).key, value |-> (req).value], msource |-> self, mdest |-> leader0]) {
                await ((network)[leader0]).enabled;
                await (Cardinality(((network)[leader0]).queue)) < (BufferSize);
                network := [network EXCEPT ![leader0] = [queue |-> (((network)[leader0]).queue) \union ({value143}), enabled |-> ((network)[leader0]).enabled]];
                goto rcvResp;
              };
            } or {
              with (yielded_fd43 = (fd)[leader0]) {
                await yielded_fd43;
                goto rcvResp;
              };
            };
          } else {
            if (((req).type) = (Get)) {
              either {
                with (value153 = [mtype |-> ClientGetRequest, mcmd |-> [idx |-> reqIdx, type |-> Get, key |-> (req).key], msource |-> self, mdest |-> leader0]) {
                  await ((network)[leader0]).enabled;
                  await (Cardinality(((network)[leader0]).queue)) < (BufferSize);
                  network := [network EXCEPT ![leader0] = [queue |-> (((network)[leader0]).queue) \union ({value153}), enabled |-> ((network)[leader0]).enabled]];
                  goto rcvResp;
                };
              } or {
                with (yielded_fd53 = (fd)[leader0]) {
                  await yielded_fd53;
                  goto rcvResp;
                };
              };
            } else {
              goto rcvResp;
            };
          };
        };
      };
    rcvResp:
      either {
        assert ((network)[self]).enabled;
        await (Cardinality(((network)[self]).queue)) > (0);
        with (readMsg10 \in ((network)[self]).queue) {
          network := [network EXCEPT ![self] = [queue |-> (((network)[self]).queue) \ ({readMsg10}), enabled |-> ((network)[self]).enabled]];
          with (yielded_network100 = readMsg10) {
            resp := yielded_network100;
            if (Debug) {
              print <<"ClientRcvResp", self, leader0, reqIdx, resp>>;
              assert ((resp).mdest) = (self);
              if ((((resp).mresponse).idx) # (reqIdx)) {
                goto rcvResp;
              } else {
                leader0 := (resp).mleaderHint;
                assert ((((req).type) = (Get)) => (((resp).mtype) = (ClientGetResponse))) /\ ((((req).type) = (Put)) => (((resp).mtype) = (ClientPutResponse)));
                if (~ ((resp).msuccess)) {
                  goto sndReq;
                } else {
                  assert ((((resp).mresponse).idx) = (reqIdx)) /\ ((((resp).mresponse).key) = ((req).key));
                  respCh := resp;
                  if (Debug) {
                    print <<"ClientRcvChDone", self, leader0, reqIdx, resp>>;
                    goto clientLoop;
                  } else {
                    goto clientLoop;
                  };
                };
              };
            } else {
              assert ((resp).mdest) = (self);
              if ((((resp).mresponse).idx) # (reqIdx)) {
                goto rcvResp;
              } else {
                leader0 := (resp).mleaderHint;
                assert ((((req).type) = (Get)) => (((resp).mtype) = (ClientGetResponse))) /\ ((((req).type) = (Put)) => (((resp).mtype) = (ClientPutResponse)));
                if (~ ((resp).msuccess)) {
                  goto sndReq;
                } else {
                  assert ((((resp).mresponse).idx) = (reqIdx)) /\ ((((resp).mresponse).key) = ((req).key));
                  respCh := resp;
                  if (Debug) {
                    print <<"ClientRcvChDone", self, leader0, reqIdx, resp>>;
                    goto clientLoop;
                  } else {
                    goto clientLoop;
                  };
                };
              };
            };
          };
        };
      } or {
        with (
          yielded_fd60 = (fd)[leader0], 
          len10 \in (0) .. (Cardinality(((network)[self]).queue)), 
          yielded_network110 = len10
        ) {
          await ((yielded_fd60) /\ ((yielded_network110) = (0))) \/ (timeout);
          if (Debug) {
            print <<"ClientTimeout", self, leader0, reqIdx>>;
            leader0 := Nil;
            goto sndReq;
          } else {
            leader0 := Nil;
            goto sndReq;
          };
        };
      };
  }
  
  fair process (crasher \in ServerCrasherSet)
    variables srvId4 = (crasherSrvId)[self];
  {
    serverCrash:
      with (value160 = FALSE) {
        network := [network EXCEPT ![srvId4] = [queue |-> ((network)[srvId4]).queue, enabled |-> value160]];
        goto fdUpdate;
      };
    fdUpdate:
      with (value170 = TRUE) {
        fd := [fd EXCEPT ![srvId4] = value170];
        goto Done;
      };
  }
}

\* END PLUSCAL TRANSLATION

********************)
\* BEGIN TRANSLATION (chksum(pcal) = "70844735" /\ chksum(tla) = "a929e7a8") PCal-18049938ece8066a38eb5044080cf45c
CONSTANT defaultInitValue
VARIABLES pc, network, fd, state, currentTerm, commitIndex, nextIndex, 
          matchIndex, log, plog, votedFor, votesResponded, votesGranted, 
          leader, sm, smDomain, leaderTimeout, appendEntriesCh, 
          becomeLeaderCh, reqCh, respCh, requestVoteSrvId, appendEntriesSrvId, 
          advanceCommitIndexSrvId, becomeLeaderSrvId, crasherSrvId

(* define statement *)
Follower == "follower"
Candidate == "candidate"
Leader == "leader"
RequestVoteRequest == "rvq"
RequestVoteResponse == "rvp"
AppendEntriesRequest == "apq"
AppendEntriesResponse == "app"
ClientPutRequest == "cpq"
ClientPutResponse == "cpp"
ClientGetRequest == "cgq"
ClientGetResponse == "cgp"
LastTerm(xlog) == IF (Len(xlog)) = (0) THEN 0 ELSE ((xlog)[Len(xlog)]).term
ServerRequestVoteSet == (((1) * (NumServers)) + (1)) .. ((2) * (NumServers))
ServerAppendEntriesSet == (((2) * (NumServers)) + (1)) .. ((3) * (NumServers))
ServerAdvanceCommitIndexSet == (((3) * (NumServers)) + (1)) .. ((4) * (NumServers))
ServerBecomeLeaderSet == (((4) * (NumServers)) + (1)) .. ((5) * (NumServers))
ServerCrasherSet == IF ExploreFail THEN (((5) * (NumServers)) + (1)) .. (((5) * (NumServers)) + (MaxNodeFail)) ELSE {}
ClientSet == (((6) * (NumServers)) + (1)) .. (((6) * (NumServers)) + (NumClients))
NodeSet == (ServerSet) \union (ClientSet)
KeySet == {}

VARIABLES idx, m, srvId, idx0, srvId0, idx1, srvId1, newCommitIndex, srvId2, 
          srvId3, leader0, req, resp, reqIdx, timeout, srvId4

vars == << pc, network, fd, state, currentTerm, commitIndex, nextIndex, 
           matchIndex, log, plog, votedFor, votesResponded, votesGranted, 
           leader, sm, smDomain, leaderTimeout, appendEntriesCh, 
           becomeLeaderCh, reqCh, respCh, requestVoteSrvId, 
           appendEntriesSrvId, advanceCommitIndexSrvId, becomeLeaderSrvId, 
           crasherSrvId, idx, m, srvId, idx0, srvId0, idx1, srvId1, 
           newCommitIndex, srvId2, srvId3, leader0, req, resp, reqIdx, 
           timeout, srvId4 >>

ProcSet == (ServerSet) \cup (ServerRequestVoteSet) \cup (ServerAppendEntriesSet) \cup (ServerAdvanceCommitIndexSet) \cup (ServerBecomeLeaderSet) \cup (ClientSet) \cup (ServerCrasherSet)

Init == (* Global variables *)
        /\ network = [i \in NodeSet |-> [queue |-> {}, enabled |-> TRUE]]
        /\ fd = [i \in ServerSet |-> FALSE]
        /\ state = [i \in ServerSet |-> Follower]
        /\ currentTerm = [i \in ServerSet |-> 1]
        /\ commitIndex = [i \in ServerSet |-> 0]
        /\ nextIndex = [i \in ServerSet |-> [j \in ServerSet |-> 1]]
        /\ matchIndex = [i \in ServerSet |-> [j \in ServerSet |-> 0]]
        /\ log = [i \in ServerSet |-> <<>>]
        /\ plog = [i \in ServerSet |-> <<>>]
        /\ votedFor = [i \in ServerSet |-> Nil]
        /\ votesResponded = [i \in ServerSet |-> {}]
        /\ votesGranted = [i \in ServerSet |-> {}]
        /\ leader = [i \in ServerSet |-> Nil]
        /\ sm = [i \in ServerSet |-> [k \in KeySet |-> Nil]]
        /\ smDomain = [i \in ServerSet |-> KeySet]
        /\ leaderTimeout = TRUE
        /\ appendEntriesCh = [i \in ServerSet |-> <<>>]
        /\ becomeLeaderCh = [i \in ServerSet |-> IF (NumServers) > (1) THEN <<>> ELSE <<TRUE>>]
        /\ reqCh = defaultInitValue
        /\ respCh = defaultInitValue
        /\ requestVoteSrvId = [i \in ServerRequestVoteSet |-> (i) - ((1) * (NumServers))]
        /\ appendEntriesSrvId = [i \in ServerAppendEntriesSet |-> (i) - ((2) * (NumServers))]
        /\ advanceCommitIndexSrvId = [i \in ServerAdvanceCommitIndexSet |-> (i) - ((3) * (NumServers))]
        /\ becomeLeaderSrvId = [i \in ServerBecomeLeaderSet |-> (i) - ((4) * (NumServers))]
        /\ crasherSrvId = [i \in ServerCrasherSet |-> (i) - ((5) * (NumServers))]
        (* Process s0 *)
        /\ idx = [self \in ServerSet |-> 1]
        /\ m = [self \in ServerSet |-> defaultInitValue]
        /\ srvId = [self \in ServerSet |-> self]
        (* Process s1 *)
        /\ idx0 = [self \in ServerRequestVoteSet |-> 1]
        /\ srvId0 = [self \in ServerRequestVoteSet |-> (requestVoteSrvId)[self]]
        (* Process s2 *)
        /\ idx1 = [self \in ServerAppendEntriesSet |-> defaultInitValue]
        /\ srvId1 = [self \in ServerAppendEntriesSet |-> (appendEntriesSrvId)[self]]
        (* Process s3 *)
        /\ newCommitIndex = [self \in ServerAdvanceCommitIndexSet |-> 0]
        /\ srvId2 = [self \in ServerAdvanceCommitIndexSet |-> (advanceCommitIndexSrvId)[self]]
        (* Process s4 *)
        /\ srvId3 = [self \in ServerBecomeLeaderSet |-> (becomeLeaderSrvId)[self]]
        (* Process client *)
        /\ leader0 = [self \in ClientSet |-> Nil]
        /\ req = [self \in ClientSet |-> defaultInitValue]
        /\ resp = [self \in ClientSet |-> defaultInitValue]
        /\ reqIdx = [self \in ClientSet |-> 0]
        /\ timeout = [self \in ClientSet |-> FALSE]
        (* Process crasher *)
        /\ srvId4 = [self \in ServerCrasherSet |-> (crasherSrvId)[self]]
        /\ pc = [self \in ProcSet |-> CASE self \in ServerSet -> "serverLoop"
                                        [] self \in ServerRequestVoteSet -> "serverRequestVoteLoop"
                                        [] self \in ServerAppendEntriesSet -> "serverAppendEntriesLoop"
                                        [] self \in ServerAdvanceCommitIndexSet -> "serverAdvanceCommitIndexLoop"
                                        [] self \in ServerBecomeLeaderSet -> "serverBecomeLeaderLoop"
                                        [] self \in ClientSet -> "clientLoop"
                                        [] self \in ServerCrasherSet -> "serverCrash"]

serverLoop(self) == /\ pc[self] = "serverLoop"
                    /\ IF TRUE
                          THEN /\ IF ExploreFail
                                     THEN /\ LET yielded_network12 == ((network)[self]).enabled IN
                                               IF ~ (yielded_network12)
                                                  THEN /\ FALSE
                                                       /\ Assert(((network)[self]).enabled, 
                                                                 "Failure of assertion at line 1010, column 15.")
                                                       /\ (Cardinality(((network)[self]).queue)) > (0)
                                                       /\ \E readMsg00 \in ((network)[self]).queue:
                                                            /\ network' = [network EXCEPT ![self] = [queue |-> (((network)[self]).queue) \ ({readMsg00}), enabled |-> ((network)[self]).enabled]]
                                                            /\ LET yielded_network00 == readMsg00 IN
                                                                 /\ m' = [m EXCEPT ![self] = yielded_network00]
                                                                 /\ Assert(((m'[self]).mdest) = (self), 
                                                                           "Failure of assertion at line 1016, column 19.")
                                                                 /\ pc' = [pc EXCEPT ![self] = "handleMsg"]
                                                  ELSE /\ Assert(((network)[self]).enabled, 
                                                                 "Failure of assertion at line 1021, column 15.")
                                                       /\ (Cardinality(((network)[self]).queue)) > (0)
                                                       /\ \E readMsg01 \in ((network)[self]).queue:
                                                            /\ network' = [network EXCEPT ![self] = [queue |-> (((network)[self]).queue) \ ({readMsg01}), enabled |-> ((network)[self]).enabled]]
                                                            /\ LET yielded_network01 == readMsg01 IN
                                                                 /\ m' = [m EXCEPT ![self] = yielded_network01]
                                                                 /\ Assert(((m'[self]).mdest) = (self), 
                                                                           "Failure of assertion at line 1027, column 19.")
                                                                 /\ pc' = [pc EXCEPT ![self] = "handleMsg"]
                                     ELSE /\ Assert(((network)[self]).enabled, 
                                                    "Failure of assertion at line 1034, column 11.")
                                          /\ (Cardinality(((network)[self]).queue)) > (0)
                                          /\ \E readMsg02 \in ((network)[self]).queue:
                                               /\ network' = [network EXCEPT ![self] = [queue |-> (((network)[self]).queue) \ ({readMsg02}), enabled |-> ((network)[self]).enabled]]
                                               /\ LET yielded_network02 == readMsg02 IN
                                                    /\ m' = [m EXCEPT ![self] = yielded_network02]
                                                    /\ Assert(((m'[self]).mdest) = (self), 
                                                              "Failure of assertion at line 1040, column 15.")
                                                    /\ pc' = [pc EXCEPT ![self] = "handleMsg"]
                          ELSE /\ pc' = [pc EXCEPT ![self] = "Done"]
                               /\ UNCHANGED << network, m >>
                    /\ UNCHANGED << fd, state, currentTerm, commitIndex, 
                                    nextIndex, matchIndex, log, plog, votedFor, 
                                    votesResponded, votesGranted, leader, sm, 
                                    smDomain, leaderTimeout, appendEntriesCh, 
                                    becomeLeaderCh, reqCh, respCh, 
                                    requestVoteSrvId, appendEntriesSrvId, 
                                    advanceCommitIndexSrvId, becomeLeaderSrvId, 
                                    crasherSrvId, idx, srvId, idx0, srvId0, 
                                    idx1, srvId1, newCommitIndex, srvId2, 
                                    srvId3, leader0, req, resp, reqIdx, 
                                    timeout, srvId4 >>

handleMsg(self) == /\ pc[self] = "handleMsg"
                   /\ IF ExploreFail
                         THEN /\ LET yielded_network13 == ((network)[self]).enabled IN
                                   IF ~ (yielded_network13)
                                      THEN /\ FALSE
                                           /\ IF ((m[self]).mtype) = (RequestVoteRequest)
                                                 THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                            THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                 /\ state' = [state EXCEPT ![self] = Follower]
                                                                 /\ LET votedFor3 == [votedFor EXCEPT ![self] = Nil] IN
                                                                      /\ leader' = [leader EXCEPT ![self] = Nil]
                                                                      /\ LET i == self IN
                                                                           LET j == (m[self]).msource IN
                                                                             LET logOK == (((m[self]).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m[self]).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m[self]).mlastLogIndex) >= (Len((log)[i])))) IN
                                                                               LET grant == ((((m[self]).mterm) = ((currentTerm')[i])) /\ (logOK)) /\ (((votedFor3)[self]) \in ({Nil, j})) IN
                                                                                 /\ Assert(((m[self]).mterm) <= ((currentTerm')[i]), 
                                                                                           "Failure of assertion at line 1065, column 21.")
                                                                                 /\ IF grant
                                                                                       THEN /\ votedFor' = [votedFor3 EXCEPT ![i] = j]
                                                                                            /\ \/ /\ LET value00 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm')[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                                       /\ ((network)[j]).enabled
                                                                                                       /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value00}), enabled |-> ((network)[j]).enabled]]
                                                                                                       /\ IF Debug
                                                                                                             THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                               \/ /\ LET yielded_fd7 == (fd)[j] IN
                                                                                                       /\ yielded_fd7
                                                                                                       /\ IF Debug
                                                                                                             THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                  /\ UNCHANGED network
                                                                                       ELSE /\ \/ /\ LET value01 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm')[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                                       /\ ((network)[j]).enabled
                                                                                                       /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value01}), enabled |-> ((network)[j]).enabled]]
                                                                                                       /\ IF Debug
                                                                                                             THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                                  /\ votedFor' = votedFor3
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ votedFor' = votedFor3
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                               \/ /\ LET yielded_fd8 == (fd)[j] IN
                                                                                                       /\ yielded_fd8
                                                                                                       /\ IF Debug
                                                                                                             THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                                  /\ votedFor' = votedFor3
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ votedFor' = votedFor3
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                  /\ UNCHANGED network
                                                            ELSE /\ LET i == self IN
                                                                      LET j == (m[self]).msource IN
                                                                        LET logOK == (((m[self]).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m[self]).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m[self]).mlastLogIndex) >= (Len((log)[i])))) IN
                                                                          LET grant == ((((m[self]).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor)[self]) \in ({Nil, j})) IN
                                                                            /\ Assert(((m[self]).mterm) <= ((currentTerm)[i]), 
                                                                                      "Failure of assertion at line 1129, column 19.")
                                                                            /\ IF grant
                                                                                  THEN /\ votedFor' = [votedFor EXCEPT ![i] = j]
                                                                                       /\ \/ /\ LET value02 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                                  /\ ((network)[j]).enabled
                                                                                                  /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value02}), enabled |-> ((network)[j]).enabled]]
                                                                                                  /\ IF Debug
                                                                                                        THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                          \/ /\ LET yielded_fd9 == (fd)[j] IN
                                                                                                  /\ yielded_fd9
                                                                                                  /\ IF Debug
                                                                                                        THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                             /\ UNCHANGED network
                                                                                  ELSE /\ \/ /\ LET value03 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                                  /\ ((network)[j]).enabled
                                                                                                  /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value03}), enabled |-> ((network)[j]).enabled]]
                                                                                                  /\ IF Debug
                                                                                                        THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                          \/ /\ LET yielded_fd10 == (fd)[j] IN
                                                                                                  /\ yielded_fd10
                                                                                                  /\ IF Debug
                                                                                                        THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                             /\ UNCHANGED network
                                                                                       /\ UNCHANGED votedFor
                                                                 /\ UNCHANGED << state, 
                                                                                 currentTerm, 
                                                                                 leader >>
                                                      /\ UNCHANGED << commitIndex, 
                                                                      nextIndex, 
                                                                      matchIndex, 
                                                                      log, 
                                                                      plog, 
                                                                      votesResponded, 
                                                                      votesGranted, 
                                                                      sm, 
                                                                      smDomain, 
                                                                      appendEntriesCh, 
                                                                      becomeLeaderCh >>
                                                 ELSE /\ IF ((m[self]).mtype) = (RequestVoteResponse)
                                                            THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                                       THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                            /\ state' = [state EXCEPT ![self] = Follower]
                                                                            /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                                            /\ leader' = [leader EXCEPT ![self] = Nil]
                                                                            /\ IF ((m[self]).mterm) < ((currentTerm')[self])
                                                                                  THEN /\ TRUE
                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                       /\ UNCHANGED << votesResponded, 
                                                                                                       votesGranted, 
                                                                                                       becomeLeaderCh >>
                                                                                  ELSE /\ LET i == self IN
                                                                                            LET j == (m[self]).msource IN
                                                                                              /\ Assert(((m[self]).mterm) = ((currentTerm')[i]), 
                                                                                                        "Failure of assertion at line 1197, column 23.")
                                                                                              /\ votesResponded' = [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})]
                                                                                              /\ IF (m[self]).mvoteGranted
                                                                                                    THEN /\ votesGranted' = [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})]
                                                                                                         /\ IF (((state')[i]) = (Candidate)) /\ (isQuorum((votesGranted')[i]))
                                                                                                               THEN /\ LET value18 == TRUE IN
                                                                                                                         /\ becomeLeaderCh' = [becomeLeaderCh EXCEPT ![i] = Append((becomeLeaderCh)[i], value18)]
                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                               ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                    /\ UNCHANGED becomeLeaderCh
                                                                                                    ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                         /\ UNCHANGED << votesGranted, 
                                                                                                                         becomeLeaderCh >>
                                                                       ELSE /\ IF ((m[self]).mterm) < ((currentTerm)[self])
                                                                                  THEN /\ TRUE
                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                       /\ UNCHANGED << votesResponded, 
                                                                                                       votesGranted, 
                                                                                                       becomeLeaderCh >>
                                                                                  ELSE /\ LET i == self IN
                                                                                            LET j == (m[self]).msource IN
                                                                                              /\ Assert(((m[self]).mterm) = ((currentTerm)[i]), 
                                                                                                        "Failure of assertion at line 1223, column 23.")
                                                                                              /\ votesResponded' = [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})]
                                                                                              /\ IF (m[self]).mvoteGranted
                                                                                                    THEN /\ votesGranted' = [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})]
                                                                                                         /\ IF (((state)[i]) = (Candidate)) /\ (isQuorum((votesGranted')[i]))
                                                                                                               THEN /\ LET value19 == TRUE IN
                                                                                                                         /\ becomeLeaderCh' = [becomeLeaderCh EXCEPT ![i] = Append((becomeLeaderCh)[i], value19)]
                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                               ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                    /\ UNCHANGED becomeLeaderCh
                                                                                                    ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                         /\ UNCHANGED << votesGranted, 
                                                                                                                         becomeLeaderCh >>
                                                                            /\ UNCHANGED << state, 
                                                                                            currentTerm, 
                                                                                            votedFor, 
                                                                                            leader >>
                                                                 /\ UNCHANGED << network, 
                                                                                 commitIndex, 
                                                                                 nextIndex, 
                                                                                 matchIndex, 
                                                                                 log, 
                                                                                 plog, 
                                                                                 sm, 
                                                                                 smDomain, 
                                                                                 appendEntriesCh >>
                                                            ELSE /\ IF ((m[self]).mtype) = (AppendEntriesRequest)
                                                                       THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                                                  THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                                       /\ LET state3 == [state EXCEPT ![self] = Follower] IN
                                                                                            /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                                                            /\ LET leader3 == [leader EXCEPT ![self] = Nil] IN
                                                                                                 LET i == self IN
                                                                                                   LET j == (m[self]).msource IN
                                                                                                     LET logOK == (((m[self]).mprevLogIndex) = (0)) \/ (((((m[self]).mprevLogIndex) > (0)) /\ (((m[self]).mprevLogIndex) <= (Len((log)[i])))) /\ (((m[self]).mprevLogTerm) = ((((log)[i])[(m[self]).mprevLogIndex]).term))) IN
                                                                                                       /\ Assert(((m[self]).mterm) <= ((currentTerm')[i]), 
                                                                                                                 "Failure of assertion at line 1253, column 25.")
                                                                                                       /\ IF ((m[self]).mterm) = ((currentTerm')[i])
                                                                                                             THEN /\ leader' = [leader3 EXCEPT ![i] = (m[self]).msource]
                                                                                                                  /\ LET value20 == LeaderTimeoutReset IN
                                                                                                                       /\ Assert(FALSE, 
                                                                                                                                 "Failure of assertion at line 1257, column 29.")
                                                                                                                       /\ IF (((m[self]).mterm) = ((currentTerm')[i])) /\ (((state3)[i]) = (Candidate))
                                                                                                                             THEN /\ state' = [state3 EXCEPT ![i] = Follower]
                                                                                                                                  /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                                        THEN /\ \/ /\ LET value30 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value30}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                \/ /\ LET yielded_fd00 == (fd)[j] IN
                                                                                                                                                        /\ yielded_fd00
                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                             /\ UNCHANGED << commitIndex, 
                                                                                                                                                             log, 
                                                                                                                                                             plog, 
                                                                                                                                                             sm, 
                                                                                                                                                             smDomain >>
                                                                                                                                        ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                                                       "Failure of assertion at line 1275, column 33.")
                                                                                                                                             /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                                  LET value40 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                                    IF ((value40).cmd) = (LogConcat)
                                                                                                                                                       THEN /\ LET plog24 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value40).entries)] IN
                                                                                                                                                                 LET log24 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                   LET value50 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                     IF ((value50).cmd) = (LogConcat)
                                                                                                                                                                        THEN /\ plog' = [plog24 EXCEPT ![i] = ((plog24)[i]) \o ((value50).entries)]
                                                                                                                                                                             /\ log' = [log24 EXCEPT ![i] = ((log24)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                             /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                       "Failure of assertion at line 1289, column 41.")
                                                                                                                                                                             /\ LET result24 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result24)[1]]
                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result24)[2]]
                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                  /\ \/ /\ LET value60 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                             /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value60}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     \/ /\ LET yielded_fd11 == (fd)[j] IN
                                                                                                                                                                                             /\ yielded_fd11
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                        ELSE /\ IF ((value50).cmd) = (LogPop)
                                                                                                                                                                                   THEN /\ plog' = [plog24 EXCEPT ![i] = SubSeq((plog24)[i], 1, (Len((plog24)[i])) - ((value50).cnt))]
                                                                                                                                                                                        /\ log' = [log24 EXCEPT ![i] = ((log24)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                  "Failure of assertion at line 1312, column 43.")
                                                                                                                                                                                        /\ LET result25 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result25)[1]]
                                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result25)[2]]
                                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                             /\ \/ /\ LET value61 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value61}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                \/ /\ LET yielded_fd12 == (fd)[j] IN
                                                                                                                                                                                                        /\ yielded_fd12
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                                   ELSE /\ log' = [log24 EXCEPT ![i] = ((log24)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                  "Failure of assertion at line 1333, column 43.")
                                                                                                                                                                                        /\ LET result26 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result26)[1]]
                                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result26)[2]]
                                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                             /\ \/ /\ LET value62 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value62}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                        /\ plog' = plog24
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                \/ /\ LET yielded_fd13 == (fd)[j] IN
                                                                                                                                                                                                        /\ yielded_fd13
                                                                                                                                                                                                        /\ plog' = plog24
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                       ELSE /\ IF ((value40).cmd) = (LogPop)
                                                                                                                                                                  THEN /\ LET plog25 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value40).cnt))] IN
                                                                                                                                                                            LET log25 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                              LET value51 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                                IF ((value51).cmd) = (LogConcat)
                                                                                                                                                                                   THEN /\ plog' = [plog25 EXCEPT ![i] = ((plog25)[i]) \o ((value51).entries)]
                                                                                                                                                                                        /\ log' = [log25 EXCEPT ![i] = ((log25)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                  "Failure of assertion at line 1367, column 43.")
                                                                                                                                                                                        /\ LET result27 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result27)[1]]
                                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result27)[2]]
                                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                             /\ \/ /\ LET value63 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value63}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                \/ /\ LET yielded_fd14 == (fd)[j] IN
                                                                                                                                                                                                        /\ yielded_fd14
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                                   ELSE /\ IF ((value51).cmd) = (LogPop)
                                                                                                                                                                                              THEN /\ plog' = [plog25 EXCEPT ![i] = SubSeq((plog25)[i], 1, (Len((plog25)[i])) - ((value51).cnt))]
                                                                                                                                                                                                   /\ log' = [log25 EXCEPT ![i] = ((log25)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                             "Failure of assertion at line 1390, column 45.")
                                                                                                                                                                                                   /\ LET result28 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result28)[1]]
                                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result28)[2]]
                                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                        /\ \/ /\ LET value64 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value64}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           \/ /\ LET yielded_fd15 == (fd)[j] IN
                                                                                                                                                                                                                   /\ yielded_fd15
                                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                                              ELSE /\ log' = [log25 EXCEPT ![i] = ((log25)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                             "Failure of assertion at line 1411, column 45.")
                                                                                                                                                                                                   /\ LET result29 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result29)[1]]
                                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result29)[2]]
                                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                        /\ \/ /\ LET value65 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value65}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                   /\ plog' = plog25
                                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           \/ /\ LET yielded_fd16 == (fd)[j] IN
                                                                                                                                                                                                                   /\ yielded_fd16
                                                                                                                                                                                                                   /\ plog' = plog25
                                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                  ELSE /\ LET log26 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                            LET value52 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                              IF ((value52).cmd) = (LogConcat)
                                                                                                                                                                                 THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value52).entries)]
                                                                                                                                                                                      /\ log' = [log26 EXCEPT ![i] = ((log26)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                "Failure of assertion at line 1443, column 43.")
                                                                                                                                                                                      /\ LET result30 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result30)[1]]
                                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result30)[2]]
                                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                           /\ \/ /\ LET value66 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value66}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              \/ /\ LET yielded_fd17 == (fd)[j] IN
                                                                                                                                                                                                      /\ yielded_fd17
                                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                                 ELSE /\ IF ((value52).cmd) = (LogPop)
                                                                                                                                                                                            THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value52).cnt))]
                                                                                                                                                                                                 /\ log' = [log26 EXCEPT ![i] = ((log26)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                           "Failure of assertion at line 1466, column 45.")
                                                                                                                                                                                                 /\ LET result31 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result31)[1]]
                                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result31)[2]]
                                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                      /\ \/ /\ LET value67 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value67}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         \/ /\ LET yielded_fd18 == (fd)[j] IN
                                                                                                                                                                                                                 /\ yielded_fd18
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                                            ELSE /\ log' = [log26 EXCEPT ![i] = ((log26)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                           "Failure of assertion at line 1487, column 45.")
                                                                                                                                                                                                 /\ LET result32 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result32)[1]]
                                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result32)[2]]
                                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                      /\ \/ /\ LET value68 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value68}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         \/ /\ LET yielded_fd19 == (fd)[j] IN
                                                                                                                                                                                                                 /\ yielded_fd19
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                                                 /\ plog' = plog
                                                                                                                             ELSE /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state3)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                                        THEN /\ \/ /\ LET value31 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value31}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                        /\ state' = state3
                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                \/ /\ LET yielded_fd01 == (fd)[j] IN
                                                                                                                                                        /\ yielded_fd01
                                                                                                                                                        /\ state' = state3
                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                             /\ UNCHANGED << commitIndex, 
                                                                                                                                                             log, 
                                                                                                                                                             plog, 
                                                                                                                                                             sm, 
                                                                                                                                                             smDomain >>
                                                                                                                                        ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state3)[i]) = (Follower))) /\ (logOK), 
                                                                                                                                                       "Failure of assertion at line 1531, column 33.")
                                                                                                                                             /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                                  LET value41 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                                    IF ((value41).cmd) = (LogConcat)
                                                                                                                                                       THEN /\ LET plog26 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value41).entries)] IN
                                                                                                                                                                 LET log27 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                   LET value53 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                     IF ((value53).cmd) = (LogConcat)
                                                                                                                                                                        THEN /\ plog' = [plog26 EXCEPT ![i] = ((plog26)[i]) \o ((value53).entries)]
                                                                                                                                                                             /\ log' = [log27 EXCEPT ![i] = ((log27)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                             /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                       "Failure of assertion at line 1545, column 41.")
                                                                                                                                                                             /\ LET result33 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result33)[1]]
                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result33)[2]]
                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                  /\ \/ /\ LET value69 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                             /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value69}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                             /\ state' = state3
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     \/ /\ LET yielded_fd110 == (fd)[j] IN
                                                                                                                                                                                             /\ yielded_fd110
                                                                                                                                                                                             /\ state' = state3
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                        ELSE /\ IF ((value53).cmd) = (LogPop)
                                                                                                                                                                                   THEN /\ plog' = [plog26 EXCEPT ![i] = SubSeq((plog26)[i], 1, (Len((plog26)[i])) - ((value53).cnt))]
                                                                                                                                                                                        /\ log' = [log27 EXCEPT ![i] = ((log27)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                  "Failure of assertion at line 1570, column 43.")
                                                                                                                                                                                        /\ LET result34 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result34)[1]]
                                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result34)[2]]
                                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                             /\ \/ /\ LET value610 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value610}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                        /\ state' = state3
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                \/ /\ LET yielded_fd111 == (fd)[j] IN
                                                                                                                                                                                                        /\ yielded_fd111
                                                                                                                                                                                                        /\ state' = state3
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                                   ELSE /\ log' = [log27 EXCEPT ![i] = ((log27)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                  "Failure of assertion at line 1593, column 43.")
                                                                                                                                                                                        /\ LET result35 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result35)[1]]
                                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result35)[2]]
                                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                             /\ \/ /\ LET value611 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value611}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                        /\ plog' = plog26
                                                                                                                                                                                                        /\ state' = state3
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                \/ /\ LET yielded_fd112 == (fd)[j] IN
                                                                                                                                                                                                        /\ yielded_fd112
                                                                                                                                                                                                        /\ plog' = plog26
                                                                                                                                                                                                        /\ state' = state3
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                       ELSE /\ IF ((value41).cmd) = (LogPop)
                                                                                                                                                                  THEN /\ LET plog27 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value41).cnt))] IN
                                                                                                                                                                            LET log28 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                              LET value54 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                                IF ((value54).cmd) = (LogConcat)
                                                                                                                                                                                   THEN /\ plog' = [plog27 EXCEPT ![i] = ((plog27)[i]) \o ((value54).entries)]
                                                                                                                                                                                        /\ log' = [log28 EXCEPT ![i] = ((log28)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                  "Failure of assertion at line 1629, column 43.")
                                                                                                                                                                                        /\ LET result36 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result36)[1]]
                                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result36)[2]]
                                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                             /\ \/ /\ LET value612 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value612}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                        /\ state' = state3
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                \/ /\ LET yielded_fd113 == (fd)[j] IN
                                                                                                                                                                                                        /\ yielded_fd113
                                                                                                                                                                                                        /\ state' = state3
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                                   ELSE /\ IF ((value54).cmd) = (LogPop)
                                                                                                                                                                                              THEN /\ plog' = [plog27 EXCEPT ![i] = SubSeq((plog27)[i], 1, (Len((plog27)[i])) - ((value54).cnt))]
                                                                                                                                                                                                   /\ log' = [log28 EXCEPT ![i] = ((log28)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                             "Failure of assertion at line 1654, column 45.")
                                                                                                                                                                                                   /\ LET result37 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result37)[1]]
                                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result37)[2]]
                                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                        /\ \/ /\ LET value613 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value613}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                   /\ state' = state3
                                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           \/ /\ LET yielded_fd114 == (fd)[j] IN
                                                                                                                                                                                                                   /\ yielded_fd114
                                                                                                                                                                                                                   /\ state' = state3
                                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                                              ELSE /\ log' = [log28 EXCEPT ![i] = ((log28)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                             "Failure of assertion at line 1677, column 45.")
                                                                                                                                                                                                   /\ LET result38 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result38)[1]]
                                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result38)[2]]
                                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                        /\ \/ /\ LET value614 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value614}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                   /\ plog' = plog27
                                                                                                                                                                                                                   /\ state' = state3
                                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           \/ /\ LET yielded_fd115 == (fd)[j] IN
                                                                                                                                                                                                                   /\ yielded_fd115
                                                                                                                                                                                                                   /\ plog' = plog27
                                                                                                                                                                                                                   /\ state' = state3
                                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                  ELSE /\ LET log29 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                            LET value55 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                              IF ((value55).cmd) = (LogConcat)
                                                                                                                                                                                 THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value55).entries)]
                                                                                                                                                                                      /\ log' = [log29 EXCEPT ![i] = ((log29)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                "Failure of assertion at line 1711, column 43.")
                                                                                                                                                                                      /\ LET result39 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result39)[1]]
                                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result39)[2]]
                                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                           /\ \/ /\ LET value615 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value615}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                      /\ state' = state3
                                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              \/ /\ LET yielded_fd116 == (fd)[j] IN
                                                                                                                                                                                                      /\ yielded_fd116
                                                                                                                                                                                                      /\ state' = state3
                                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                                 ELSE /\ IF ((value55).cmd) = (LogPop)
                                                                                                                                                                                            THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value55).cnt))]
                                                                                                                                                                                                 /\ log' = [log29 EXCEPT ![i] = ((log29)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                           "Failure of assertion at line 1736, column 45.")
                                                                                                                                                                                                 /\ LET result40 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result40)[1]]
                                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result40)[2]]
                                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                      /\ \/ /\ LET value616 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value616}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                 /\ state' = state3
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         \/ /\ LET yielded_fd117 == (fd)[j] IN
                                                                                                                                                                                                                 /\ yielded_fd117
                                                                                                                                                                                                                 /\ state' = state3
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                                            ELSE /\ log' = [log29 EXCEPT ![i] = ((log29)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                           "Failure of assertion at line 1759, column 45.")
                                                                                                                                                                                                 /\ LET result41 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result41)[1]]
                                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result41)[2]]
                                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                      /\ \/ /\ LET value617 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value617}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                 /\ state' = state3
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         \/ /\ LET yielded_fd118 == (fd)[j] IN
                                                                                                                                                                                                                 /\ yielded_fd118
                                                                                                                                                                                                                 /\ state' = state3
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                                                 /\ plog' = plog
                                                                                                             ELSE /\ IF (((m[self]).mterm) = ((currentTerm')[i])) /\ (((state3)[i]) = (Candidate))
                                                                                                                        THEN /\ state' = [state3 EXCEPT ![i] = Follower]
                                                                                                                             /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                                   THEN /\ \/ /\ LET value32 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value32}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                   /\ leader' = leader3
                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                           \/ /\ LET yielded_fd02 == (fd)[j] IN
                                                                                                                                                   /\ yielded_fd02
                                                                                                                                                   /\ leader' = leader3
                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                              /\ UNCHANGED network
                                                                                                                                        /\ UNCHANGED << commitIndex, 
                                                                                                                                                        log, 
                                                                                                                                                        plog, 
                                                                                                                                                        sm, 
                                                                                                                                                        smDomain >>
                                                                                                                                   ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                                                  "Failure of assertion at line 1809, column 31.")
                                                                                                                                        /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                             LET value42 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                               IF ((value42).cmd) = (LogConcat)
                                                                                                                                                  THEN /\ LET plog28 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value42).entries)] IN
                                                                                                                                                            LET log30 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                              LET value56 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                IF ((value56).cmd) = (LogConcat)
                                                                                                                                                                   THEN /\ plog' = [plog28 EXCEPT ![i] = ((plog28)[i]) \o ((value56).entries)]
                                                                                                                                                                        /\ log' = [log30 EXCEPT ![i] = ((log30)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                  "Failure of assertion at line 1823, column 39.")
                                                                                                                                                                        /\ LET result42 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result42)[1]]
                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result42)[2]]
                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                             /\ \/ /\ LET value618 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value618}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                        /\ leader' = leader3
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                \/ /\ LET yielded_fd119 == (fd)[j] IN
                                                                                                                                                                                        /\ yielded_fd119
                                                                                                                                                                                        /\ leader' = leader3
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                   ELSE /\ IF ((value56).cmd) = (LogPop)
                                                                                                                                                                              THEN /\ plog' = [plog28 EXCEPT ![i] = SubSeq((plog28)[i], 1, (Len((plog28)[i])) - ((value56).cnt))]
                                                                                                                                                                                   /\ log' = [log30 EXCEPT ![i] = ((log30)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                             "Failure of assertion at line 1848, column 41.")
                                                                                                                                                                                   /\ LET result43 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result43)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result43)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value619 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value619}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ leader' = leader3
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd120 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd120
                                                                                                                                                                                                   /\ leader' = leader3
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                              ELSE /\ log' = [log30 EXCEPT ![i] = ((log30)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                             "Failure of assertion at line 1871, column 41.")
                                                                                                                                                                                   /\ LET result44 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result44)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result44)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value620 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value620}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ plog' = plog28
                                                                                                                                                                                                   /\ leader' = leader3
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd121 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd121
                                                                                                                                                                                                   /\ plog' = plog28
                                                                                                                                                                                                   /\ leader' = leader3
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                  ELSE /\ IF ((value42).cmd) = (LogPop)
                                                                                                                                                             THEN /\ LET plog29 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value42).cnt))] IN
                                                                                                                                                                       LET log31 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                         LET value57 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                           IF ((value57).cmd) = (LogConcat)
                                                                                                                                                                              THEN /\ plog' = [plog29 EXCEPT ![i] = ((plog29)[i]) \o ((value57).entries)]
                                                                                                                                                                                   /\ log' = [log31 EXCEPT ![i] = ((log31)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                             "Failure of assertion at line 1907, column 41.")
                                                                                                                                                                                   /\ LET result45 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result45)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result45)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value621 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value621}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ leader' = leader3
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd122 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd122
                                                                                                                                                                                                   /\ leader' = leader3
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                              ELSE /\ IF ((value57).cmd) = (LogPop)
                                                                                                                                                                                         THEN /\ plog' = [plog29 EXCEPT ![i] = SubSeq((plog29)[i], 1, (Len((plog29)[i])) - ((value57).cnt))]
                                                                                                                                                                                              /\ log' = [log31 EXCEPT ![i] = ((log31)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                              /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                        "Failure of assertion at line 1932, column 43.")
                                                                                                                                                                                              /\ LET result46 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                   /\ sm' = [sm EXCEPT ![i] = (result46)[1]]
                                                                                                                                                                                                   /\ smDomain' = [smDomain EXCEPT ![i] = (result46)[2]]
                                                                                                                                                                                                   /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                   /\ \/ /\ LET value622 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                                                                                                              /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value622}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                              /\ leader' = leader3
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      \/ /\ LET yielded_fd123 == (fd)[j] IN
                                                                                                                                                                                                              /\ yielded_fd123
                                                                                                                                                                                                              /\ leader' = leader3
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         /\ UNCHANGED network
                                                                                                                                                                                         ELSE /\ log' = [log31 EXCEPT ![i] = ((log31)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                              /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                        "Failure of assertion at line 1955, column 43.")
                                                                                                                                                                                              /\ LET result47 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                   /\ sm' = [sm EXCEPT ![i] = (result47)[1]]
                                                                                                                                                                                                   /\ smDomain' = [smDomain EXCEPT ![i] = (result47)[2]]
                                                                                                                                                                                                   /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                   /\ \/ /\ LET value623 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                                                                                                              /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value623}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                              /\ plog' = plog29
                                                                                                                                                                                                              /\ leader' = leader3
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      \/ /\ LET yielded_fd124 == (fd)[j] IN
                                                                                                                                                                                                              /\ yielded_fd124
                                                                                                                                                                                                              /\ plog' = plog29
                                                                                                                                                                                                              /\ leader' = leader3
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         /\ UNCHANGED network
                                                                                                                                                             ELSE /\ LET log32 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                       LET value58 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                         IF ((value58).cmd) = (LogConcat)
                                                                                                                                                                            THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value58).entries)]
                                                                                                                                                                                 /\ log' = [log32 EXCEPT ![i] = ((log32)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 1989, column 41.")
                                                                                                                                                                                 /\ LET result48 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result48)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result48)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value624 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value624}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ leader' = leader3
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd125 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd125
                                                                                                                                                                                                 /\ leader' = leader3
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ IF ((value58).cmd) = (LogPop)
                                                                                                                                                                                       THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value58).cnt))]
                                                                                                                                                                                            /\ log' = [log32 EXCEPT ![i] = ((log32)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                      "Failure of assertion at line 2014, column 43.")
                                                                                                                                                                                            /\ LET result49 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result49)[1]]
                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result49)[2]]
                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                 /\ \/ /\ LET value625 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value625}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                            /\ leader' = leader3
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                    \/ /\ LET yielded_fd126 == (fd)[j] IN
                                                                                                                                                                                                            /\ yielded_fd126
                                                                                                                                                                                                            /\ leader' = leader3
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                       ELSE /\ log' = [log32 EXCEPT ![i] = ((log32)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                      "Failure of assertion at line 2037, column 43.")
                                                                                                                                                                                            /\ LET result50 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result50)[1]]
                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result50)[2]]
                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                 /\ \/ /\ LET value626 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value626}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                            /\ leader' = leader3
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                    \/ /\ LET yielded_fd127 == (fd)[j] IN
                                                                                                                                                                                                            /\ yielded_fd127
                                                                                                                                                                                                            /\ leader' = leader3
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                            /\ plog' = plog
                                                                                                                        ELSE /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state3)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                                   THEN /\ \/ /\ LET value33 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value33}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                   /\ leader' = leader3
                                                                                                                                                   /\ state' = state3
                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                           \/ /\ LET yielded_fd03 == (fd)[j] IN
                                                                                                                                                   /\ yielded_fd03
                                                                                                                                                   /\ leader' = leader3
                                                                                                                                                   /\ state' = state3
                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                              /\ UNCHANGED network
                                                                                                                                        /\ UNCHANGED << commitIndex, 
                                                                                                                                                        log, 
                                                                                                                                                        plog, 
                                                                                                                                                        sm, 
                                                                                                                                                        smDomain >>
                                                                                                                                   ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state3)[i]) = (Follower))) /\ (logOK), 
                                                                                                                                                  "Failure of assertion at line 2085, column 31.")
                                                                                                                                        /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                             LET value43 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                               IF ((value43).cmd) = (LogConcat)
                                                                                                                                                  THEN /\ LET plog30 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value43).entries)] IN
                                                                                                                                                            LET log33 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                              LET value59 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                IF ((value59).cmd) = (LogConcat)
                                                                                                                                                                   THEN /\ plog' = [plog30 EXCEPT ![i] = ((plog30)[i]) \o ((value59).entries)]
                                                                                                                                                                        /\ log' = [log33 EXCEPT ![i] = ((log33)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                  "Failure of assertion at line 2099, column 39.")
                                                                                                                                                                        /\ LET result51 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result51)[1]]
                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result51)[2]]
                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                             /\ \/ /\ LET value627 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value627}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                        /\ leader' = leader3
                                                                                                                                                                                        /\ state' = state3
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                \/ /\ LET yielded_fd128 == (fd)[j] IN
                                                                                                                                                                                        /\ yielded_fd128
                                                                                                                                                                                        /\ leader' = leader3
                                                                                                                                                                                        /\ state' = state3
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                   ELSE /\ IF ((value59).cmd) = (LogPop)
                                                                                                                                                                              THEN /\ plog' = [plog30 EXCEPT ![i] = SubSeq((plog30)[i], 1, (Len((plog30)[i])) - ((value59).cnt))]
                                                                                                                                                                                   /\ log' = [log33 EXCEPT ![i] = ((log33)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                             "Failure of assertion at line 2126, column 41.")
                                                                                                                                                                                   /\ LET result52 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result52)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result52)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value628 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value628}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ leader' = leader3
                                                                                                                                                                                                   /\ state' = state3
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd129 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd129
                                                                                                                                                                                                   /\ leader' = leader3
                                                                                                                                                                                                   /\ state' = state3
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                              ELSE /\ log' = [log33 EXCEPT ![i] = ((log33)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                             "Failure of assertion at line 2151, column 41.")
                                                                                                                                                                                   /\ LET result53 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result53)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result53)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value629 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value629}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ plog' = plog30
                                                                                                                                                                                                   /\ leader' = leader3
                                                                                                                                                                                                   /\ state' = state3
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd130 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd130
                                                                                                                                                                                                   /\ plog' = plog30
                                                                                                                                                                                                   /\ leader' = leader3
                                                                                                                                                                                                   /\ state' = state3
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                  ELSE /\ IF ((value43).cmd) = (LogPop)
                                                                                                                                                             THEN /\ LET plog31 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value43).cnt))] IN
                                                                                                                                                                       LET log34 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                         LET value510 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                           IF ((value510).cmd) = (LogConcat)
                                                                                                                                                                              THEN /\ plog' = [plog31 EXCEPT ![i] = ((plog31)[i]) \o ((value510).entries)]
                                                                                                                                                                                   /\ log' = [log34 EXCEPT ![i] = ((log34)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                             "Failure of assertion at line 2189, column 41.")
                                                                                                                                                                                   /\ LET result54 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result54)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result54)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value630 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value630}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ leader' = leader3
                                                                                                                                                                                                   /\ state' = state3
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd131 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd131
                                                                                                                                                                                                   /\ leader' = leader3
                                                                                                                                                                                                   /\ state' = state3
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                              ELSE /\ IF ((value510).cmd) = (LogPop)
                                                                                                                                                                                         THEN /\ plog' = [plog31 EXCEPT ![i] = SubSeq((plog31)[i], 1, (Len((plog31)[i])) - ((value510).cnt))]
                                                                                                                                                                                              /\ log' = [log34 EXCEPT ![i] = ((log34)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                              /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                        "Failure of assertion at line 2216, column 43.")
                                                                                                                                                                                              /\ LET result55 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                   /\ sm' = [sm EXCEPT ![i] = (result55)[1]]
                                                                                                                                                                                                   /\ smDomain' = [smDomain EXCEPT ![i] = (result55)[2]]
                                                                                                                                                                                                   /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                   /\ \/ /\ LET value631 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                                                                                                              /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value631}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                              /\ leader' = leader3
                                                                                                                                                                                                              /\ state' = state3
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      \/ /\ LET yielded_fd132 == (fd)[j] IN
                                                                                                                                                                                                              /\ yielded_fd132
                                                                                                                                                                                                              /\ leader' = leader3
                                                                                                                                                                                                              /\ state' = state3
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         /\ UNCHANGED network
                                                                                                                                                                                         ELSE /\ log' = [log34 EXCEPT ![i] = ((log34)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                              /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                        "Failure of assertion at line 2241, column 43.")
                                                                                                                                                                                              /\ LET result56 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                   /\ sm' = [sm EXCEPT ![i] = (result56)[1]]
                                                                                                                                                                                                   /\ smDomain' = [smDomain EXCEPT ![i] = (result56)[2]]
                                                                                                                                                                                                   /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                   /\ \/ /\ LET value632 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                                                                                                              /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value632}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                              /\ plog' = plog31
                                                                                                                                                                                                              /\ leader' = leader3
                                                                                                                                                                                                              /\ state' = state3
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      \/ /\ LET yielded_fd133 == (fd)[j] IN
                                                                                                                                                                                                              /\ yielded_fd133
                                                                                                                                                                                                              /\ plog' = plog31
                                                                                                                                                                                                              /\ leader' = leader3
                                                                                                                                                                                                              /\ state' = state3
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         /\ UNCHANGED network
                                                                                                                                                             ELSE /\ LET log35 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                       LET value511 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                         IF ((value511).cmd) = (LogConcat)
                                                                                                                                                                            THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value511).entries)]
                                                                                                                                                                                 /\ log' = [log35 EXCEPT ![i] = ((log35)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 2277, column 41.")
                                                                                                                                                                                 /\ LET result57 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result57)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result57)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value633 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value633}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ leader' = leader3
                                                                                                                                                                                                 /\ state' = state3
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd134 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd134
                                                                                                                                                                                                 /\ leader' = leader3
                                                                                                                                                                                                 /\ state' = state3
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ IF ((value511).cmd) = (LogPop)
                                                                                                                                                                                       THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value511).cnt))]
                                                                                                                                                                                            /\ log' = [log35 EXCEPT ![i] = ((log35)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                      "Failure of assertion at line 2304, column 43.")
                                                                                                                                                                                            /\ LET result58 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result58)[1]]
                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result58)[2]]
                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                 /\ \/ /\ LET value634 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value634}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                            /\ leader' = leader3
                                                                                                                                                                                                            /\ state' = state3
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                    \/ /\ LET yielded_fd135 == (fd)[j] IN
                                                                                                                                                                                                            /\ yielded_fd135
                                                                                                                                                                                                            /\ leader' = leader3
                                                                                                                                                                                                            /\ state' = state3
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                       ELSE /\ log' = [log35 EXCEPT ![i] = ((log35)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                      "Failure of assertion at line 2329, column 43.")
                                                                                                                                                                                            /\ LET result59 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result59)[1]]
                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result59)[2]]
                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                 /\ \/ /\ LET value635 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value635}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                            /\ leader' = leader3
                                                                                                                                                                                                            /\ state' = state3
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                    \/ /\ LET yielded_fd136 == (fd)[j] IN
                                                                                                                                                                                                            /\ yielded_fd136
                                                                                                                                                                                                            /\ leader' = leader3
                                                                                                                                                                                                            /\ state' = state3
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                            /\ plog' = plog
                                                                                  ELSE /\ LET i == self IN
                                                                                            LET j == (m[self]).msource IN
                                                                                              LET logOK == (((m[self]).mprevLogIndex) = (0)) \/ (((((m[self]).mprevLogIndex) > (0)) /\ (((m[self]).mprevLogIndex) <= (Len((log)[i])))) /\ (((m[self]).mprevLogTerm) = ((((log)[i])[(m[self]).mprevLogIndex]).term))) IN
                                                                                                /\ Assert(((m[self]).mterm) <= ((currentTerm)[i]), 
                                                                                                          "Failure of assertion at line 2369, column 23.")
                                                                                                /\ IF ((m[self]).mterm) = ((currentTerm)[i])
                                                                                                      THEN /\ leader' = [leader EXCEPT ![i] = (m[self]).msource]
                                                                                                           /\ LET value21 == LeaderTimeoutReset IN
                                                                                                                /\ Assert(FALSE, 
                                                                                                                          "Failure of assertion at line 2373, column 27.")
                                                                                                                /\ IF (((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))
                                                                                                                      THEN /\ state' = [state EXCEPT ![i] = Follower]
                                                                                                                           /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                                 THEN /\ \/ /\ LET value34 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value34}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                         \/ /\ LET yielded_fd04 == (fd)[j] IN
                                                                                                                                                 /\ yielded_fd04
                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                            /\ UNCHANGED network
                                                                                                                                      /\ UNCHANGED << commitIndex, 
                                                                                                                                                      log, 
                                                                                                                                                      plog, 
                                                                                                                                                      sm, 
                                                                                                                                                      smDomain >>
                                                                                                                                 ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                                                "Failure of assertion at line 2391, column 31.")
                                                                                                                                      /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                           LET value44 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                             IF ((value44).cmd) = (LogConcat)
                                                                                                                                                THEN /\ LET plog32 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value44).entries)] IN
                                                                                                                                                          LET log36 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                            LET value512 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                              IF ((value512).cmd) = (LogConcat)
                                                                                                                                                                 THEN /\ plog' = [plog32 EXCEPT ![i] = ((plog32)[i]) \o ((value512).entries)]
                                                                                                                                                                      /\ log' = [log36 EXCEPT ![i] = ((log36)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                "Failure of assertion at line 2405, column 39.")
                                                                                                                                                                      /\ LET result60 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result60)[1]]
                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result60)[2]]
                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                           /\ \/ /\ LET value636 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value636}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              \/ /\ LET yielded_fd137 == (fd)[j] IN
                                                                                                                                                                                      /\ yielded_fd137
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                 ELSE /\ IF ((value512).cmd) = (LogPop)
                                                                                                                                                                            THEN /\ plog' = [plog32 EXCEPT ![i] = SubSeq((plog32)[i], 1, (Len((plog32)[i])) - ((value512).cnt))]
                                                                                                                                                                                 /\ log' = [log36 EXCEPT ![i] = ((log36)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 2428, column 41.")
                                                                                                                                                                                 /\ LET result61 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result61)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result61)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value637 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value637}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd138 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd138
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ log' = [log36 EXCEPT ![i] = ((log36)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 2449, column 41.")
                                                                                                                                                                                 /\ LET result62 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result62)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result62)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value638 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value638}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ plog' = plog32
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd139 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd139
                                                                                                                                                                                                 /\ plog' = plog32
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                ELSE /\ IF ((value44).cmd) = (LogPop)
                                                                                                                                                           THEN /\ LET plog33 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value44).cnt))] IN
                                                                                                                                                                     LET log37 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                       LET value513 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                         IF ((value513).cmd) = (LogConcat)
                                                                                                                                                                            THEN /\ plog' = [plog33 EXCEPT ![i] = ((plog33)[i]) \o ((value513).entries)]
                                                                                                                                                                                 /\ log' = [log37 EXCEPT ![i] = ((log37)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 2483, column 41.")
                                                                                                                                                                                 /\ LET result63 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result63)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result63)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value639 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value639}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd140 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd140
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ IF ((value513).cmd) = (LogPop)
                                                                                                                                                                                       THEN /\ plog' = [plog33 EXCEPT ![i] = SubSeq((plog33)[i], 1, (Len((plog33)[i])) - ((value513).cnt))]
                                                                                                                                                                                            /\ log' = [log37 EXCEPT ![i] = ((log37)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                      "Failure of assertion at line 2506, column 43.")
                                                                                                                                                                                            /\ LET result64 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result64)[1]]
                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result64)[2]]
                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                 /\ \/ /\ LET value640 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value640}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                    \/ /\ LET yielded_fd141 == (fd)[j] IN
                                                                                                                                                                                                            /\ yielded_fd141
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                       ELSE /\ log' = [log37 EXCEPT ![i] = ((log37)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                      "Failure of assertion at line 2527, column 43.")
                                                                                                                                                                                            /\ LET result65 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result65)[1]]
                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result65)[2]]
                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                 /\ \/ /\ LET value641 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value641}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                            /\ plog' = plog33
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                    \/ /\ LET yielded_fd142 == (fd)[j] IN
                                                                                                                                                                                                            /\ yielded_fd142
                                                                                                                                                                                                            /\ plog' = plog33
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                           ELSE /\ LET log38 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                     LET value514 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                       IF ((value514).cmd) = (LogConcat)
                                                                                                                                                                          THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value514).entries)]
                                                                                                                                                                               /\ log' = [log38 EXCEPT ![i] = ((log38)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                         "Failure of assertion at line 2559, column 41.")
                                                                                                                                                                               /\ LET result66 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result66)[1]]
                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result66)[2]]
                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                    /\ \/ /\ LET value642 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value642}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       \/ /\ LET yielded_fd143 == (fd)[j] IN
                                                                                                                                                                                               /\ yielded_fd143
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                          ELSE /\ IF ((value514).cmd) = (LogPop)
                                                                                                                                                                                     THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value514).cnt))]
                                                                                                                                                                                          /\ log' = [log38 EXCEPT ![i] = ((log38)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                          /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                    "Failure of assertion at line 2582, column 43.")
                                                                                                                                                                                          /\ LET result67 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result67)[1]]
                                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result67)[2]]
                                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                               /\ \/ /\ LET value643 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value643}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  \/ /\ LET yielded_fd144 == (fd)[j] IN
                                                                                                                                                                                                          /\ yielded_fd144
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                                     ELSE /\ log' = [log38 EXCEPT ![i] = ((log38)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                          /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                    "Failure of assertion at line 2603, column 43.")
                                                                                                                                                                                          /\ LET result68 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result68)[1]]
                                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result68)[2]]
                                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                               /\ \/ /\ LET value644 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value644}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  \/ /\ LET yielded_fd145 == (fd)[j] IN
                                                                                                                                                                                                          /\ yielded_fd145
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                                          /\ plog' = plog
                                                                                                                      ELSE /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                                 THEN /\ \/ /\ LET value35 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value35}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                         \/ /\ LET yielded_fd05 == (fd)[j] IN
                                                                                                                                                 /\ yielded_fd05
                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                            /\ UNCHANGED network
                                                                                                                                      /\ UNCHANGED << commitIndex, 
                                                                                                                                                      log, 
                                                                                                                                                      plog, 
                                                                                                                                                      sm, 
                                                                                                                                                      smDomain >>
                                                                                                                                 ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK), 
                                                                                                                                                "Failure of assertion at line 2645, column 31.")
                                                                                                                                      /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                           LET value45 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                             IF ((value45).cmd) = (LogConcat)
                                                                                                                                                THEN /\ LET plog34 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value45).entries)] IN
                                                                                                                                                          LET log39 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                            LET value515 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                              IF ((value515).cmd) = (LogConcat)
                                                                                                                                                                 THEN /\ plog' = [plog34 EXCEPT ![i] = ((plog34)[i]) \o ((value515).entries)]
                                                                                                                                                                      /\ log' = [log39 EXCEPT ![i] = ((log39)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                "Failure of assertion at line 2659, column 39.")
                                                                                                                                                                      /\ LET result69 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result69)[1]]
                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result69)[2]]
                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                           /\ \/ /\ LET value645 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value645}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              \/ /\ LET yielded_fd146 == (fd)[j] IN
                                                                                                                                                                                      /\ yielded_fd146
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                 ELSE /\ IF ((value515).cmd) = (LogPop)
                                                                                                                                                                            THEN /\ plog' = [plog34 EXCEPT ![i] = SubSeq((plog34)[i], 1, (Len((plog34)[i])) - ((value515).cnt))]
                                                                                                                                                                                 /\ log' = [log39 EXCEPT ![i] = ((log39)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 2682, column 41.")
                                                                                                                                                                                 /\ LET result70 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result70)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result70)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value646 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value646}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd147 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd147
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ log' = [log39 EXCEPT ![i] = ((log39)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 2703, column 41.")
                                                                                                                                                                                 /\ LET result71 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result71)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result71)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value647 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value647}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ plog' = plog34
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd148 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd148
                                                                                                                                                                                                 /\ plog' = plog34
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                ELSE /\ IF ((value45).cmd) = (LogPop)
                                                                                                                                                           THEN /\ LET plog35 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value45).cnt))] IN
                                                                                                                                                                     LET log40 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                       LET value516 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                         IF ((value516).cmd) = (LogConcat)
                                                                                                                                                                            THEN /\ plog' = [plog35 EXCEPT ![i] = ((plog35)[i]) \o ((value516).entries)]
                                                                                                                                                                                 /\ log' = [log40 EXCEPT ![i] = ((log40)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 2737, column 41.")
                                                                                                                                                                                 /\ LET result72 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result72)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result72)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value648 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value648}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd149 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd149
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ IF ((value516).cmd) = (LogPop)
                                                                                                                                                                                       THEN /\ plog' = [plog35 EXCEPT ![i] = SubSeq((plog35)[i], 1, (Len((plog35)[i])) - ((value516).cnt))]
                                                                                                                                                                                            /\ log' = [log40 EXCEPT ![i] = ((log40)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                      "Failure of assertion at line 2760, column 43.")
                                                                                                                                                                                            /\ LET result73 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result73)[1]]
                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result73)[2]]
                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                 /\ \/ /\ LET value649 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value649}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                    \/ /\ LET yielded_fd150 == (fd)[j] IN
                                                                                                                                                                                                            /\ yielded_fd150
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                       ELSE /\ log' = [log40 EXCEPT ![i] = ((log40)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                      "Failure of assertion at line 2781, column 43.")
                                                                                                                                                                                            /\ LET result74 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result74)[1]]
                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result74)[2]]
                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                 /\ \/ /\ LET value650 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value650}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                            /\ plog' = plog35
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                    \/ /\ LET yielded_fd151 == (fd)[j] IN
                                                                                                                                                                                                            /\ yielded_fd151
                                                                                                                                                                                                            /\ plog' = plog35
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                           ELSE /\ LET log41 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                     LET value517 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                       IF ((value517).cmd) = (LogConcat)
                                                                                                                                                                          THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value517).entries)]
                                                                                                                                                                               /\ log' = [log41 EXCEPT ![i] = ((log41)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                         "Failure of assertion at line 2813, column 41.")
                                                                                                                                                                               /\ LET result75 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result75)[1]]
                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result75)[2]]
                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                    /\ \/ /\ LET value651 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value651}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       \/ /\ LET yielded_fd152 == (fd)[j] IN
                                                                                                                                                                                               /\ yielded_fd152
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                          ELSE /\ IF ((value517).cmd) = (LogPop)
                                                                                                                                                                                     THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value517).cnt))]
                                                                                                                                                                                          /\ log' = [log41 EXCEPT ![i] = ((log41)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                          /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                    "Failure of assertion at line 2836, column 43.")
                                                                                                                                                                                          /\ LET result76 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result76)[1]]
                                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result76)[2]]
                                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                               /\ \/ /\ LET value652 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value652}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  \/ /\ LET yielded_fd153 == (fd)[j] IN
                                                                                                                                                                                                          /\ yielded_fd153
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                                     ELSE /\ log' = [log41 EXCEPT ![i] = ((log41)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                          /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                    "Failure of assertion at line 2857, column 43.")
                                                                                                                                                                                          /\ LET result77 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result77)[1]]
                                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result77)[2]]
                                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                               /\ \/ /\ LET value653 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value653}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  \/ /\ LET yielded_fd154 == (fd)[j] IN
                                                                                                                                                                                                          /\ yielded_fd154
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                                          /\ plog' = plog
                                                                                                                           /\ state' = state
                                                                                                      ELSE /\ IF (((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))
                                                                                                                 THEN /\ state' = [state EXCEPT ![i] = Follower]
                                                                                                                      /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                            THEN /\ \/ /\ LET value36 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value36}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                    \/ /\ LET yielded_fd06 == (fd)[j] IN
                                                                                                                                            /\ yielded_fd06
                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                       /\ UNCHANGED network
                                                                                                                                 /\ UNCHANGED << commitIndex, 
                                                                                                                                                 log, 
                                                                                                                                                 plog, 
                                                                                                                                                 sm, 
                                                                                                                                                 smDomain >>
                                                                                                                            ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                                           "Failure of assertion at line 2903, column 29.")
                                                                                                                                 /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                      LET value46 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                        IF ((value46).cmd) = (LogConcat)
                                                                                                                                           THEN /\ LET plog36 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value46).entries)] IN
                                                                                                                                                     LET log42 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                       LET value518 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                         IF ((value518).cmd) = (LogConcat)
                                                                                                                                                            THEN /\ plog' = [plog36 EXCEPT ![i] = ((plog36)[i]) \o ((value518).entries)]
                                                                                                                                                                 /\ log' = [log42 EXCEPT ![i] = ((log42)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                           "Failure of assertion at line 2917, column 37.")
                                                                                                                                                                 /\ LET result78 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result78)[1]]
                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result78)[2]]
                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                      /\ \/ /\ LET value654 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value654}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                         \/ /\ LET yielded_fd155 == (fd)[j] IN
                                                                                                                                                                                 /\ yielded_fd155
                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                            ELSE /\ IF ((value518).cmd) = (LogPop)
                                                                                                                                                                       THEN /\ plog' = [plog36 EXCEPT ![i] = SubSeq((plog36)[i], 1, (Len((plog36)[i])) - ((value518).cnt))]
                                                                                                                                                                            /\ log' = [log42 EXCEPT ![i] = ((log42)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                      "Failure of assertion at line 2940, column 39.")
                                                                                                                                                                            /\ LET result79 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result79)[1]]
                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result79)[2]]
                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                 /\ \/ /\ LET value655 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value655}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    \/ /\ LET yielded_fd156 == (fd)[j] IN
                                                                                                                                                                                            /\ yielded_fd156
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                       ELSE /\ log' = [log42 EXCEPT ![i] = ((log42)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                      "Failure of assertion at line 2961, column 39.")
                                                                                                                                                                            /\ LET result80 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result80)[1]]
                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result80)[2]]
                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                 /\ \/ /\ LET value656 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value656}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                            /\ plog' = plog36
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    \/ /\ LET yielded_fd157 == (fd)[j] IN
                                                                                                                                                                                            /\ yielded_fd157
                                                                                                                                                                                            /\ plog' = plog36
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                           ELSE /\ IF ((value46).cmd) = (LogPop)
                                                                                                                                                      THEN /\ LET plog37 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value46).cnt))] IN
                                                                                                                                                                LET log43 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                  LET value519 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                    IF ((value519).cmd) = (LogConcat)
                                                                                                                                                                       THEN /\ plog' = [plog37 EXCEPT ![i] = ((plog37)[i]) \o ((value519).entries)]
                                                                                                                                                                            /\ log' = [log43 EXCEPT ![i] = ((log43)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                      "Failure of assertion at line 2995, column 39.")
                                                                                                                                                                            /\ LET result81 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result81)[1]]
                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result81)[2]]
                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                 /\ \/ /\ LET value657 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value657}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    \/ /\ LET yielded_fd158 == (fd)[j] IN
                                                                                                                                                                                            /\ yielded_fd158
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                       ELSE /\ IF ((value519).cmd) = (LogPop)
                                                                                                                                                                                  THEN /\ plog' = [plog37 EXCEPT ![i] = SubSeq((plog37)[i], 1, (Len((plog37)[i])) - ((value519).cnt))]
                                                                                                                                                                                       /\ log' = [log43 EXCEPT ![i] = ((log43)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                       /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                 "Failure of assertion at line 3018, column 41.")
                                                                                                                                                                                       /\ LET result82 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result82)[1]]
                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result82)[2]]
                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                            /\ \/ /\ LET value658 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                       /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value658}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               \/ /\ LET yielded_fd159 == (fd)[j] IN
                                                                                                                                                                                                       /\ yielded_fd159
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                                  ELSE /\ log' = [log43 EXCEPT ![i] = ((log43)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                       /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                 "Failure of assertion at line 3039, column 41.")
                                                                                                                                                                                       /\ LET result83 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result83)[1]]
                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result83)[2]]
                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                            /\ \/ /\ LET value659 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                       /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value659}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                       /\ plog' = plog37
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               \/ /\ LET yielded_fd160 == (fd)[j] IN
                                                                                                                                                                                                       /\ yielded_fd160
                                                                                                                                                                                                       /\ plog' = plog37
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                      ELSE /\ LET log44 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                LET value520 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                  IF ((value520).cmd) = (LogConcat)
                                                                                                                                                                     THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value520).entries)]
                                                                                                                                                                          /\ log' = [log44 EXCEPT ![i] = ((log44)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                          /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                    "Failure of assertion at line 3071, column 39.")
                                                                                                                                                                          /\ LET result84 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result84)[1]]
                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result84)[2]]
                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                               /\ \/ /\ LET value660 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value660}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  \/ /\ LET yielded_fd161 == (fd)[j] IN
                                                                                                                                                                                          /\ yielded_fd161
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                     ELSE /\ IF ((value520).cmd) = (LogPop)
                                                                                                                                                                                THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value520).cnt))]
                                                                                                                                                                                     /\ log' = [log44 EXCEPT ![i] = ((log44)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                     /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                               "Failure of assertion at line 3094, column 41.")
                                                                                                                                                                                     /\ LET result85 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result85)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result85)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value661 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value661}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd162 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd162
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                ELSE /\ log' = [log44 EXCEPT ![i] = ((log44)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                     /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                               "Failure of assertion at line 3115, column 41.")
                                                                                                                                                                                     /\ LET result86 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result86)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result86)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value662 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value662}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd163 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd163
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                     /\ plog' = plog
                                                                                                                 ELSE /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                            THEN /\ \/ /\ LET value37 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value37}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                    \/ /\ LET yielded_fd07 == (fd)[j] IN
                                                                                                                                            /\ yielded_fd07
                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                       /\ UNCHANGED network
                                                                                                                                 /\ UNCHANGED << commitIndex, 
                                                                                                                                                 log, 
                                                                                                                                                 plog, 
                                                                                                                                                 sm, 
                                                                                                                                                 smDomain >>
                                                                                                                            ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK), 
                                                                                                                                           "Failure of assertion at line 3157, column 29.")
                                                                                                                                 /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                      LET value47 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                        IF ((value47).cmd) = (LogConcat)
                                                                                                                                           THEN /\ LET plog38 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value47).entries)] IN
                                                                                                                                                     LET log45 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                       LET value521 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                         IF ((value521).cmd) = (LogConcat)
                                                                                                                                                            THEN /\ plog' = [plog38 EXCEPT ![i] = ((plog38)[i]) \o ((value521).entries)]
                                                                                                                                                                 /\ log' = [log45 EXCEPT ![i] = ((log45)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                           "Failure of assertion at line 3171, column 37.")
                                                                                                                                                                 /\ LET result87 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result87)[1]]
                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result87)[2]]
                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                      /\ \/ /\ LET value663 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value663}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                         \/ /\ LET yielded_fd164 == (fd)[j] IN
                                                                                                                                                                                 /\ yielded_fd164
                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                            ELSE /\ IF ((value521).cmd) = (LogPop)
                                                                                                                                                                       THEN /\ plog' = [plog38 EXCEPT ![i] = SubSeq((plog38)[i], 1, (Len((plog38)[i])) - ((value521).cnt))]
                                                                                                                                                                            /\ log' = [log45 EXCEPT ![i] = ((log45)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                      "Failure of assertion at line 3194, column 39.")
                                                                                                                                                                            /\ LET result88 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result88)[1]]
                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result88)[2]]
                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                 /\ \/ /\ LET value664 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value664}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    \/ /\ LET yielded_fd165 == (fd)[j] IN
                                                                                                                                                                                            /\ yielded_fd165
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                       ELSE /\ log' = [log45 EXCEPT ![i] = ((log45)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                      "Failure of assertion at line 3215, column 39.")
                                                                                                                                                                            /\ LET result89 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result89)[1]]
                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result89)[2]]
                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                 /\ \/ /\ LET value665 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value665}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                            /\ plog' = plog38
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    \/ /\ LET yielded_fd166 == (fd)[j] IN
                                                                                                                                                                                            /\ yielded_fd166
                                                                                                                                                                                            /\ plog' = plog38
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                           ELSE /\ IF ((value47).cmd) = (LogPop)
                                                                                                                                                      THEN /\ LET plog39 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value47).cnt))] IN
                                                                                                                                                                LET log46 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                  LET value522 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                    IF ((value522).cmd) = (LogConcat)
                                                                                                                                                                       THEN /\ plog' = [plog39 EXCEPT ![i] = ((plog39)[i]) \o ((value522).entries)]
                                                                                                                                                                            /\ log' = [log46 EXCEPT ![i] = ((log46)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                      "Failure of assertion at line 3249, column 39.")
                                                                                                                                                                            /\ LET result90 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result90)[1]]
                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result90)[2]]
                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                 /\ \/ /\ LET value666 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value666}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    \/ /\ LET yielded_fd167 == (fd)[j] IN
                                                                                                                                                                                            /\ yielded_fd167
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                       ELSE /\ IF ((value522).cmd) = (LogPop)
                                                                                                                                                                                  THEN /\ plog' = [plog39 EXCEPT ![i] = SubSeq((plog39)[i], 1, (Len((plog39)[i])) - ((value522).cnt))]
                                                                                                                                                                                       /\ log' = [log46 EXCEPT ![i] = ((log46)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                       /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                 "Failure of assertion at line 3272, column 41.")
                                                                                                                                                                                       /\ LET result91 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result91)[1]]
                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result91)[2]]
                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                            /\ \/ /\ LET value667 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                       /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value667}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               \/ /\ LET yielded_fd168 == (fd)[j] IN
                                                                                                                                                                                                       /\ yielded_fd168
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                                  ELSE /\ log' = [log46 EXCEPT ![i] = ((log46)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                       /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                 "Failure of assertion at line 3293, column 41.")
                                                                                                                                                                                       /\ LET result92 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result92)[1]]
                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result92)[2]]
                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                            /\ \/ /\ LET value668 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                       /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value668}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                       /\ plog' = plog39
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               \/ /\ LET yielded_fd169 == (fd)[j] IN
                                                                                                                                                                                                       /\ yielded_fd169
                                                                                                                                                                                                       /\ plog' = plog39
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                      ELSE /\ LET log47 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                LET value523 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                  IF ((value523).cmd) = (LogConcat)
                                                                                                                                                                     THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value523).entries)]
                                                                                                                                                                          /\ log' = [log47 EXCEPT ![i] = ((log47)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                          /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                    "Failure of assertion at line 3325, column 39.")
                                                                                                                                                                          /\ LET result93 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result93)[1]]
                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result93)[2]]
                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                               /\ \/ /\ LET value669 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value669}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  \/ /\ LET yielded_fd170 == (fd)[j] IN
                                                                                                                                                                                          /\ yielded_fd170
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                     ELSE /\ IF ((value523).cmd) = (LogPop)
                                                                                                                                                                                THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value523).cnt))]
                                                                                                                                                                                     /\ log' = [log47 EXCEPT ![i] = ((log47)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                     /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                               "Failure of assertion at line 3348, column 41.")
                                                                                                                                                                                     /\ LET result94 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result94)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result94)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value670 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value670}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd171 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd171
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                ELSE /\ log' = [log47 EXCEPT ![i] = ((log47)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                     /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                               "Failure of assertion at line 3369, column 41.")
                                                                                                                                                                                     /\ LET result95 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result95)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result95)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value671 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value671}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd172 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd172
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                     /\ plog' = plog
                                                                                                                      /\ state' = state
                                                                                                           /\ UNCHANGED leader
                                                                                       /\ UNCHANGED << currentTerm, 
                                                                                                       votedFor >>
                                                                            /\ UNCHANGED << nextIndex, 
                                                                                            matchIndex, 
                                                                                            appendEntriesCh >>
                                                                       ELSE /\ IF ((m[self]).mtype) = (AppendEntriesResponse)
                                                                                  THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                                                             THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                                                  /\ state' = [state EXCEPT ![self] = Follower]
                                                                                                  /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                                                                  /\ leader' = [leader EXCEPT ![self] = Nil]
                                                                                                  /\ IF ((m[self]).mterm) < ((currentTerm')[self])
                                                                                                        THEN /\ TRUE
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             /\ UNCHANGED << nextIndex, 
                                                                                                                             matchIndex >>
                                                                                                        ELSE /\ LET i == self IN
                                                                                                                  LET j == (m[self]).msource IN
                                                                                                                    /\ Assert(((m[self]).mterm) = ((currentTerm')[i]), 
                                                                                                                              "Failure of assertion at line 3414, column 27.")
                                                                                                                    /\ IF (m[self]).msuccess
                                                                                                                          THEN /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m[self]).mmatchIndex) + (1)]]
                                                                                                                               /\ matchIndex' = [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m[self]).mmatchIndex]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                          ELSE /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                               /\ UNCHANGED matchIndex
                                                                                             ELSE /\ IF ((m[self]).mterm) < ((currentTerm)[self])
                                                                                                        THEN /\ TRUE
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             /\ UNCHANGED << nextIndex, 
                                                                                                                             matchIndex >>
                                                                                                        ELSE /\ LET i == self IN
                                                                                                                  LET j == (m[self]).msource IN
                                                                                                                    /\ Assert(((m[self]).mterm) = ((currentTerm)[i]), 
                                                                                                                              "Failure of assertion at line 3434, column 27.")
                                                                                                                    /\ IF (m[self]).msuccess
                                                                                                                          THEN /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m[self]).mmatchIndex) + (1)]]
                                                                                                                               /\ matchIndex' = [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m[self]).mmatchIndex]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                          ELSE /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                               /\ UNCHANGED matchIndex
                                                                                                  /\ UNCHANGED << state, 
                                                                                                                  currentTerm, 
                                                                                                                  votedFor, 
                                                                                                                  leader >>
                                                                                       /\ UNCHANGED << network, 
                                                                                                       log, 
                                                                                                       plog, 
                                                                                                       appendEntriesCh >>
                                                                                  ELSE /\ IF (((m[self]).mtype) = (ClientPutRequest)) \/ (((m[self]).mtype) = (ClientGetRequest))
                                                                                             THEN /\ IF ((state)[self]) = (Leader)
                                                                                                        THEN /\ LET entry == [term |-> (currentTerm)[self], cmd |-> (m[self]).mcmd, client |-> (m[self]).msource] IN
                                                                                                                  /\ log' = [log EXCEPT ![self] = Append((log)[self], entry)]
                                                                                                                  /\ LET value70 == [cmd |-> LogConcat, entries |-> <<entry>>] IN
                                                                                                                       IF ((value70).cmd) = (LogConcat)
                                                                                                                          THEN /\ plog' = [plog EXCEPT ![self] = ((plog)[self]) \o ((value70).entries)]
                                                                                                                               /\ LET value80 == TRUE IN
                                                                                                                                    /\ appendEntriesCh' = [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value80)]
                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                          ELSE /\ IF ((value70).cmd) = (LogPop)
                                                                                                                                     THEN /\ plog' = [plog EXCEPT ![self] = SubSeq((plog)[self], 1, (Len((plog)[self])) - ((value70).cnt))]
                                                                                                                                          /\ LET value81 == TRUE IN
                                                                                                                                               /\ appendEntriesCh' = [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value81)]
                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                     ELSE /\ LET value82 == TRUE IN
                                                                                                                                               /\ appendEntriesCh' = [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value82)]
                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                          /\ plog' = plog
                                                                                                             /\ UNCHANGED network
                                                                                                        ELSE /\ LET i == self IN
                                                                                                                  LET j == (m[self]).msource IN
                                                                                                                    LET respType == IF (((m[self]).mcmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse IN
                                                                                                                      LET value90 == [mtype |-> respType, msuccess |-> FALSE, mresponse |-> [idx |-> ((m[self]).mcmd).idx, key |-> ((m[self]).mcmd).key], mleaderHint |-> (leader)[i], msource |-> i, mdest |-> j] IN
                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value90}), enabled |-> ((network)[j]).enabled]]
                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             /\ UNCHANGED << log, 
                                                                                                                             plog, 
                                                                                                                             appendEntriesCh >>
                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                  /\ UNCHANGED << network, 
                                                                                                                  log, 
                                                                                                                  plog, 
                                                                                                                  appendEntriesCh >>
                                                                                       /\ UNCHANGED << state, 
                                                                                                       currentTerm, 
                                                                                                       nextIndex, 
                                                                                                       matchIndex, 
                                                                                                       votedFor, 
                                                                                                       leader >>
                                                                            /\ UNCHANGED << commitIndex, 
                                                                                            sm, 
                                                                                            smDomain >>
                                                                 /\ UNCHANGED << votesResponded, 
                                                                                 votesGranted, 
                                                                                 becomeLeaderCh >>
                                      ELSE /\ IF ((m[self]).mtype) = (RequestVoteRequest)
                                                 THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                            THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                 /\ state' = [state EXCEPT ![self] = Follower]
                                                                 /\ LET votedFor4 == [votedFor EXCEPT ![self] = Nil] IN
                                                                      /\ leader' = [leader EXCEPT ![self] = Nil]
                                                                      /\ LET i == self IN
                                                                           LET j == (m[self]).msource IN
                                                                             LET logOK == (((m[self]).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m[self]).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m[self]).mlastLogIndex) >= (Len((log)[i])))) IN
                                                                               LET grant == ((((m[self]).mterm) = ((currentTerm')[i])) /\ (logOK)) /\ (((votedFor4)[self]) \in ({Nil, j})) IN
                                                                                 /\ Assert(((m[self]).mterm) <= ((currentTerm')[i]), 
                                                                                           "Failure of assertion at line 3507, column 21.")
                                                                                 /\ IF grant
                                                                                       THEN /\ votedFor' = [votedFor4 EXCEPT ![i] = j]
                                                                                            /\ \/ /\ LET value04 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm')[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                                       /\ ((network)[j]).enabled
                                                                                                       /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value04}), enabled |-> ((network)[j]).enabled]]
                                                                                                       /\ IF Debug
                                                                                                             THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                               \/ /\ LET yielded_fd20 == (fd)[j] IN
                                                                                                       /\ yielded_fd20
                                                                                                       /\ IF Debug
                                                                                                             THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                  /\ UNCHANGED network
                                                                                       ELSE /\ \/ /\ LET value05 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm')[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                                       /\ ((network)[j]).enabled
                                                                                                       /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value05}), enabled |-> ((network)[j]).enabled]]
                                                                                                       /\ IF Debug
                                                                                                             THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                                  /\ votedFor' = votedFor4
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ votedFor' = votedFor4
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                               \/ /\ LET yielded_fd21 == (fd)[j] IN
                                                                                                       /\ yielded_fd21
                                                                                                       /\ IF Debug
                                                                                                             THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                                  /\ votedFor' = votedFor4
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ votedFor' = votedFor4
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                  /\ UNCHANGED network
                                                            ELSE /\ LET i == self IN
                                                                      LET j == (m[self]).msource IN
                                                                        LET logOK == (((m[self]).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m[self]).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m[self]).mlastLogIndex) >= (Len((log)[i])))) IN
                                                                          LET grant == ((((m[self]).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor)[self]) \in ({Nil, j})) IN
                                                                            /\ Assert(((m[self]).mterm) <= ((currentTerm)[i]), 
                                                                                      "Failure of assertion at line 3571, column 19.")
                                                                            /\ IF grant
                                                                                  THEN /\ votedFor' = [votedFor EXCEPT ![i] = j]
                                                                                       /\ \/ /\ LET value06 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                                  /\ ((network)[j]).enabled
                                                                                                  /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value06}), enabled |-> ((network)[j]).enabled]]
                                                                                                  /\ IF Debug
                                                                                                        THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                          \/ /\ LET yielded_fd22 == (fd)[j] IN
                                                                                                  /\ yielded_fd22
                                                                                                  /\ IF Debug
                                                                                                        THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                             /\ UNCHANGED network
                                                                                  ELSE /\ \/ /\ LET value07 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                                  /\ ((network)[j]).enabled
                                                                                                  /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value07}), enabled |-> ((network)[j]).enabled]]
                                                                                                  /\ IF Debug
                                                                                                        THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                          \/ /\ LET yielded_fd23 == (fd)[j] IN
                                                                                                  /\ yielded_fd23
                                                                                                  /\ IF Debug
                                                                                                        THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                             /\ UNCHANGED network
                                                                                       /\ UNCHANGED votedFor
                                                                 /\ UNCHANGED << state, 
                                                                                 currentTerm, 
                                                                                 leader >>
                                                      /\ UNCHANGED << commitIndex, 
                                                                      nextIndex, 
                                                                      matchIndex, 
                                                                      log, 
                                                                      plog, 
                                                                      votesResponded, 
                                                                      votesGranted, 
                                                                      sm, 
                                                                      smDomain, 
                                                                      appendEntriesCh, 
                                                                      becomeLeaderCh >>
                                                 ELSE /\ IF ((m[self]).mtype) = (RequestVoteResponse)
                                                            THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                                       THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                            /\ state' = [state EXCEPT ![self] = Follower]
                                                                            /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                                            /\ leader' = [leader EXCEPT ![self] = Nil]
                                                                            /\ IF ((m[self]).mterm) < ((currentTerm')[self])
                                                                                  THEN /\ TRUE
                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                       /\ UNCHANGED << votesResponded, 
                                                                                                       votesGranted, 
                                                                                                       becomeLeaderCh >>
                                                                                  ELSE /\ LET i == self IN
                                                                                            LET j == (m[self]).msource IN
                                                                                              /\ Assert(((m[self]).mterm) = ((currentTerm')[i]), 
                                                                                                        "Failure of assertion at line 3639, column 23.")
                                                                                              /\ votesResponded' = [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})]
                                                                                              /\ IF (m[self]).mvoteGranted
                                                                                                    THEN /\ votesGranted' = [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})]
                                                                                                         /\ IF (((state')[i]) = (Candidate)) /\ (isQuorum((votesGranted')[i]))
                                                                                                               THEN /\ LET value110 == TRUE IN
                                                                                                                         /\ becomeLeaderCh' = [becomeLeaderCh EXCEPT ![i] = Append((becomeLeaderCh)[i], value110)]
                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                               ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                    /\ UNCHANGED becomeLeaderCh
                                                                                                    ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                         /\ UNCHANGED << votesGranted, 
                                                                                                                         becomeLeaderCh >>
                                                                       ELSE /\ IF ((m[self]).mterm) < ((currentTerm)[self])
                                                                                  THEN /\ TRUE
                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                       /\ UNCHANGED << votesResponded, 
                                                                                                       votesGranted, 
                                                                                                       becomeLeaderCh >>
                                                                                  ELSE /\ LET i == self IN
                                                                                            LET j == (m[self]).msource IN
                                                                                              /\ Assert(((m[self]).mterm) = ((currentTerm)[i]), 
                                                                                                        "Failure of assertion at line 3665, column 23.")
                                                                                              /\ votesResponded' = [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})]
                                                                                              /\ IF (m[self]).mvoteGranted
                                                                                                    THEN /\ votesGranted' = [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})]
                                                                                                         /\ IF (((state)[i]) = (Candidate)) /\ (isQuorum((votesGranted')[i]))
                                                                                                               THEN /\ LET value111 == TRUE IN
                                                                                                                         /\ becomeLeaderCh' = [becomeLeaderCh EXCEPT ![i] = Append((becomeLeaderCh)[i], value111)]
                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                               ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                    /\ UNCHANGED becomeLeaderCh
                                                                                                    ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                         /\ UNCHANGED << votesGranted, 
                                                                                                                         becomeLeaderCh >>
                                                                            /\ UNCHANGED << state, 
                                                                                            currentTerm, 
                                                                                            votedFor, 
                                                                                            leader >>
                                                                 /\ UNCHANGED << network, 
                                                                                 commitIndex, 
                                                                                 nextIndex, 
                                                                                 matchIndex, 
                                                                                 log, 
                                                                                 plog, 
                                                                                 sm, 
                                                                                 smDomain, 
                                                                                 appendEntriesCh >>
                                                            ELSE /\ IF ((m[self]).mtype) = (AppendEntriesRequest)
                                                                       THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                                                  THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                                       /\ LET state4 == [state EXCEPT ![self] = Follower] IN
                                                                                            /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                                                            /\ LET leader4 == [leader EXCEPT ![self] = Nil] IN
                                                                                                 LET i == self IN
                                                                                                   LET j == (m[self]).msource IN
                                                                                                     LET logOK == (((m[self]).mprevLogIndex) = (0)) \/ (((((m[self]).mprevLogIndex) > (0)) /\ (((m[self]).mprevLogIndex) <= (Len((log)[i])))) /\ (((m[self]).mprevLogTerm) = ((((log)[i])[(m[self]).mprevLogIndex]).term))) IN
                                                                                                       /\ Assert(((m[self]).mterm) <= ((currentTerm')[i]), 
                                                                                                                 "Failure of assertion at line 3695, column 25.")
                                                                                                       /\ IF ((m[self]).mterm) = ((currentTerm')[i])
                                                                                                             THEN /\ leader' = [leader4 EXCEPT ![i] = (m[self]).msource]
                                                                                                                  /\ LET value22 == LeaderTimeoutReset IN
                                                                                                                       /\ Assert(FALSE, 
                                                                                                                                 "Failure of assertion at line 3699, column 29.")
                                                                                                                       /\ IF (((m[self]).mterm) = ((currentTerm')[i])) /\ (((state4)[i]) = (Candidate))
                                                                                                                             THEN /\ state' = [state4 EXCEPT ![i] = Follower]
                                                                                                                                  /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                                        THEN /\ \/ /\ LET value38 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value38}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                \/ /\ LET yielded_fd08 == (fd)[j] IN
                                                                                                                                                        /\ yielded_fd08
                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                             /\ UNCHANGED << commitIndex, 
                                                                                                                                                             log, 
                                                                                                                                                             plog, 
                                                                                                                                                             sm, 
                                                                                                                                                             smDomain >>
                                                                                                                                        ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                                                       "Failure of assertion at line 3717, column 33.")
                                                                                                                                             /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                                  LET value48 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                                    IF ((value48).cmd) = (LogConcat)
                                                                                                                                                       THEN /\ LET plog40 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value48).entries)] IN
                                                                                                                                                                 LET log48 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                   LET value524 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                     IF ((value524).cmd) = (LogConcat)
                                                                                                                                                                        THEN /\ plog' = [plog40 EXCEPT ![i] = ((plog40)[i]) \o ((value524).entries)]
                                                                                                                                                                             /\ log' = [log48 EXCEPT ![i] = ((log48)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                             /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                       "Failure of assertion at line 3731, column 41.")
                                                                                                                                                                             /\ LET result96 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result96)[1]]
                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result96)[2]]
                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                  /\ \/ /\ LET value672 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                             /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value672}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     \/ /\ LET yielded_fd173 == (fd)[j] IN
                                                                                                                                                                                             /\ yielded_fd173
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                        ELSE /\ IF ((value524).cmd) = (LogPop)
                                                                                                                                                                                   THEN /\ plog' = [plog40 EXCEPT ![i] = SubSeq((plog40)[i], 1, (Len((plog40)[i])) - ((value524).cnt))]
                                                                                                                                                                                        /\ log' = [log48 EXCEPT ![i] = ((log48)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                  "Failure of assertion at line 3754, column 43.")
                                                                                                                                                                                        /\ LET result97 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result97)[1]]
                                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result97)[2]]
                                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                             /\ \/ /\ LET value673 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value673}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                \/ /\ LET yielded_fd174 == (fd)[j] IN
                                                                                                                                                                                                        /\ yielded_fd174
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                                   ELSE /\ log' = [log48 EXCEPT ![i] = ((log48)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                  "Failure of assertion at line 3775, column 43.")
                                                                                                                                                                                        /\ LET result98 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result98)[1]]
                                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result98)[2]]
                                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                             /\ \/ /\ LET value674 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value674}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                        /\ plog' = plog40
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                \/ /\ LET yielded_fd175 == (fd)[j] IN
                                                                                                                                                                                                        /\ yielded_fd175
                                                                                                                                                                                                        /\ plog' = plog40
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                       ELSE /\ IF ((value48).cmd) = (LogPop)
                                                                                                                                                                  THEN /\ LET plog41 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value48).cnt))] IN
                                                                                                                                                                            LET log49 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                              LET value525 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                                IF ((value525).cmd) = (LogConcat)
                                                                                                                                                                                   THEN /\ plog' = [plog41 EXCEPT ![i] = ((plog41)[i]) \o ((value525).entries)]
                                                                                                                                                                                        /\ log' = [log49 EXCEPT ![i] = ((log49)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                  "Failure of assertion at line 3809, column 43.")
                                                                                                                                                                                        /\ LET result99 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result99)[1]]
                                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result99)[2]]
                                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                             /\ \/ /\ LET value675 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value675}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                \/ /\ LET yielded_fd176 == (fd)[j] IN
                                                                                                                                                                                                        /\ yielded_fd176
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                                   ELSE /\ IF ((value525).cmd) = (LogPop)
                                                                                                                                                                                              THEN /\ plog' = [plog41 EXCEPT ![i] = SubSeq((plog41)[i], 1, (Len((plog41)[i])) - ((value525).cnt))]
                                                                                                                                                                                                   /\ log' = [log49 EXCEPT ![i] = ((log49)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                             "Failure of assertion at line 3832, column 45.")
                                                                                                                                                                                                   /\ LET result100 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result100)[1]]
                                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result100)[2]]
                                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                        /\ \/ /\ LET value676 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value676}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           \/ /\ LET yielded_fd177 == (fd)[j] IN
                                                                                                                                                                                                                   /\ yielded_fd177
                                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                                              ELSE /\ log' = [log49 EXCEPT ![i] = ((log49)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                             "Failure of assertion at line 3853, column 45.")
                                                                                                                                                                                                   /\ LET result101 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result101)[1]]
                                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result101)[2]]
                                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                        /\ \/ /\ LET value677 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value677}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                   /\ plog' = plog41
                                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           \/ /\ LET yielded_fd178 == (fd)[j] IN
                                                                                                                                                                                                                   /\ yielded_fd178
                                                                                                                                                                                                                   /\ plog' = plog41
                                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                  ELSE /\ LET log50 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                            LET value526 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                              IF ((value526).cmd) = (LogConcat)
                                                                                                                                                                                 THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value526).entries)]
                                                                                                                                                                                      /\ log' = [log50 EXCEPT ![i] = ((log50)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                "Failure of assertion at line 3885, column 43.")
                                                                                                                                                                                      /\ LET result102 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result102)[1]]
                                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result102)[2]]
                                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                           /\ \/ /\ LET value678 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value678}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              \/ /\ LET yielded_fd179 == (fd)[j] IN
                                                                                                                                                                                                      /\ yielded_fd179
                                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                                 ELSE /\ IF ((value526).cmd) = (LogPop)
                                                                                                                                                                                            THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value526).cnt))]
                                                                                                                                                                                                 /\ log' = [log50 EXCEPT ![i] = ((log50)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                           "Failure of assertion at line 3908, column 45.")
                                                                                                                                                                                                 /\ LET result103 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result103)[1]]
                                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result103)[2]]
                                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                      /\ \/ /\ LET value679 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value679}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         \/ /\ LET yielded_fd180 == (fd)[j] IN
                                                                                                                                                                                                                 /\ yielded_fd180
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                                            ELSE /\ log' = [log50 EXCEPT ![i] = ((log50)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                           "Failure of assertion at line 3929, column 45.")
                                                                                                                                                                                                 /\ LET result104 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result104)[1]]
                                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result104)[2]]
                                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                      /\ \/ /\ LET value680 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value680}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         \/ /\ LET yielded_fd181 == (fd)[j] IN
                                                                                                                                                                                                                 /\ yielded_fd181
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                                                 /\ plog' = plog
                                                                                                                             ELSE /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state4)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                                        THEN /\ \/ /\ LET value39 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value39}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                        /\ state' = state4
                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                \/ /\ LET yielded_fd09 == (fd)[j] IN
                                                                                                                                                        /\ yielded_fd09
                                                                                                                                                        /\ state' = state4
                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                             /\ UNCHANGED << commitIndex, 
                                                                                                                                                             log, 
                                                                                                                                                             plog, 
                                                                                                                                                             sm, 
                                                                                                                                                             smDomain >>
                                                                                                                                        ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state4)[i]) = (Follower))) /\ (logOK), 
                                                                                                                                                       "Failure of assertion at line 3973, column 33.")
                                                                                                                                             /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                                  LET value49 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                                    IF ((value49).cmd) = (LogConcat)
                                                                                                                                                       THEN /\ LET plog42 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value49).entries)] IN
                                                                                                                                                                 LET log51 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                   LET value527 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                     IF ((value527).cmd) = (LogConcat)
                                                                                                                                                                        THEN /\ plog' = [plog42 EXCEPT ![i] = ((plog42)[i]) \o ((value527).entries)]
                                                                                                                                                                             /\ log' = [log51 EXCEPT ![i] = ((log51)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                             /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                       "Failure of assertion at line 3987, column 41.")
                                                                                                                                                                             /\ LET result105 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result105)[1]]
                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result105)[2]]
                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                  /\ \/ /\ LET value681 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                             /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value681}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                             /\ state' = state4
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     \/ /\ LET yielded_fd182 == (fd)[j] IN
                                                                                                                                                                                             /\ yielded_fd182
                                                                                                                                                                                             /\ state' = state4
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                        ELSE /\ IF ((value527).cmd) = (LogPop)
                                                                                                                                                                                   THEN /\ plog' = [plog42 EXCEPT ![i] = SubSeq((plog42)[i], 1, (Len((plog42)[i])) - ((value527).cnt))]
                                                                                                                                                                                        /\ log' = [log51 EXCEPT ![i] = ((log51)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                  "Failure of assertion at line 4012, column 43.")
                                                                                                                                                                                        /\ LET result106 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result106)[1]]
                                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result106)[2]]
                                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                             /\ \/ /\ LET value682 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value682}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                        /\ state' = state4
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                \/ /\ LET yielded_fd183 == (fd)[j] IN
                                                                                                                                                                                                        /\ yielded_fd183
                                                                                                                                                                                                        /\ state' = state4
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                                   ELSE /\ log' = [log51 EXCEPT ![i] = ((log51)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                  "Failure of assertion at line 4035, column 43.")
                                                                                                                                                                                        /\ LET result107 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result107)[1]]
                                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result107)[2]]
                                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                             /\ \/ /\ LET value683 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value683}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                        /\ plog' = plog42
                                                                                                                                                                                                        /\ state' = state4
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                \/ /\ LET yielded_fd184 == (fd)[j] IN
                                                                                                                                                                                                        /\ yielded_fd184
                                                                                                                                                                                                        /\ plog' = plog42
                                                                                                                                                                                                        /\ state' = state4
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                       ELSE /\ IF ((value49).cmd) = (LogPop)
                                                                                                                                                                  THEN /\ LET plog43 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value49).cnt))] IN
                                                                                                                                                                            LET log52 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                              LET value528 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                                IF ((value528).cmd) = (LogConcat)
                                                                                                                                                                                   THEN /\ plog' = [plog43 EXCEPT ![i] = ((plog43)[i]) \o ((value528).entries)]
                                                                                                                                                                                        /\ log' = [log52 EXCEPT ![i] = ((log52)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                  "Failure of assertion at line 4071, column 43.")
                                                                                                                                                                                        /\ LET result108 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result108)[1]]
                                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result108)[2]]
                                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                             /\ \/ /\ LET value684 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value684}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                        /\ state' = state4
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                \/ /\ LET yielded_fd185 == (fd)[j] IN
                                                                                                                                                                                                        /\ yielded_fd185
                                                                                                                                                                                                        /\ state' = state4
                                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                                   ELSE /\ IF ((value528).cmd) = (LogPop)
                                                                                                                                                                                              THEN /\ plog' = [plog43 EXCEPT ![i] = SubSeq((plog43)[i], 1, (Len((plog43)[i])) - ((value528).cnt))]
                                                                                                                                                                                                   /\ log' = [log52 EXCEPT ![i] = ((log52)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                             "Failure of assertion at line 4096, column 45.")
                                                                                                                                                                                                   /\ LET result109 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result109)[1]]
                                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result109)[2]]
                                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                        /\ \/ /\ LET value685 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value685}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                   /\ state' = state4
                                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           \/ /\ LET yielded_fd186 == (fd)[j] IN
                                                                                                                                                                                                                   /\ yielded_fd186
                                                                                                                                                                                                                   /\ state' = state4
                                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                                              ELSE /\ log' = [log52 EXCEPT ![i] = ((log52)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                             "Failure of assertion at line 4119, column 45.")
                                                                                                                                                                                                   /\ LET result110 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result110)[1]]
                                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result110)[2]]
                                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                        /\ \/ /\ LET value686 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value686}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                   /\ plog' = plog43
                                                                                                                                                                                                                   /\ state' = state4
                                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                           \/ /\ LET yielded_fd187 == (fd)[j] IN
                                                                                                                                                                                                                   /\ yielded_fd187
                                                                                                                                                                                                                   /\ plog' = plog43
                                                                                                                                                                                                                   /\ state' = state4
                                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                  ELSE /\ LET log53 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                            LET value529 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                              IF ((value529).cmd) = (LogConcat)
                                                                                                                                                                                 THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value529).entries)]
                                                                                                                                                                                      /\ log' = [log53 EXCEPT ![i] = ((log53)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                "Failure of assertion at line 4153, column 43.")
                                                                                                                                                                                      /\ LET result111 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result111)[1]]
                                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result111)[2]]
                                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                           /\ \/ /\ LET value687 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value687}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                      /\ state' = state4
                                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              \/ /\ LET yielded_fd188 == (fd)[j] IN
                                                                                                                                                                                                      /\ yielded_fd188
                                                                                                                                                                                                      /\ state' = state4
                                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                                 ELSE /\ IF ((value529).cmd) = (LogPop)
                                                                                                                                                                                            THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value529).cnt))]
                                                                                                                                                                                                 /\ log' = [log53 EXCEPT ![i] = ((log53)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                           "Failure of assertion at line 4178, column 45.")
                                                                                                                                                                                                 /\ LET result112 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result112)[1]]
                                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result112)[2]]
                                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                      /\ \/ /\ LET value688 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value688}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                 /\ state' = state4
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         \/ /\ LET yielded_fd189 == (fd)[j] IN
                                                                                                                                                                                                                 /\ yielded_fd189
                                                                                                                                                                                                                 /\ state' = state4
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                                            ELSE /\ log' = [log53 EXCEPT ![i] = ((log53)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                           "Failure of assertion at line 4201, column 45.")
                                                                                                                                                                                                 /\ LET result113 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result113)[1]]
                                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result113)[2]]
                                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                      /\ \/ /\ LET value689 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value689}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                                 /\ state' = state4
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         \/ /\ LET yielded_fd190 == (fd)[j] IN
                                                                                                                                                                                                                 /\ yielded_fd190
                                                                                                                                                                                                                 /\ state' = state4
                                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                                                 /\ plog' = plog
                                                                                                             ELSE /\ IF (((m[self]).mterm) = ((currentTerm')[i])) /\ (((state4)[i]) = (Candidate))
                                                                                                                        THEN /\ state' = [state4 EXCEPT ![i] = Follower]
                                                                                                                             /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                                   THEN /\ \/ /\ LET value310 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value310}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                   /\ leader' = leader4
                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                           \/ /\ LET yielded_fd010 == (fd)[j] IN
                                                                                                                                                   /\ yielded_fd010
                                                                                                                                                   /\ leader' = leader4
                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                              /\ UNCHANGED network
                                                                                                                                        /\ UNCHANGED << commitIndex, 
                                                                                                                                                        log, 
                                                                                                                                                        plog, 
                                                                                                                                                        sm, 
                                                                                                                                                        smDomain >>
                                                                                                                                   ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                                                  "Failure of assertion at line 4251, column 31.")
                                                                                                                                        /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                             LET value410 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                               IF ((value410).cmd) = (LogConcat)
                                                                                                                                                  THEN /\ LET plog44 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value410).entries)] IN
                                                                                                                                                            LET log54 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                              LET value530 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                IF ((value530).cmd) = (LogConcat)
                                                                                                                                                                   THEN /\ plog' = [plog44 EXCEPT ![i] = ((plog44)[i]) \o ((value530).entries)]
                                                                                                                                                                        /\ log' = [log54 EXCEPT ![i] = ((log54)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                  "Failure of assertion at line 4265, column 39.")
                                                                                                                                                                        /\ LET result114 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result114)[1]]
                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result114)[2]]
                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                             /\ \/ /\ LET value690 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value690}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                        /\ leader' = leader4
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                \/ /\ LET yielded_fd191 == (fd)[j] IN
                                                                                                                                                                                        /\ yielded_fd191
                                                                                                                                                                                        /\ leader' = leader4
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                   ELSE /\ IF ((value530).cmd) = (LogPop)
                                                                                                                                                                              THEN /\ plog' = [plog44 EXCEPT ![i] = SubSeq((plog44)[i], 1, (Len((plog44)[i])) - ((value530).cnt))]
                                                                                                                                                                                   /\ log' = [log54 EXCEPT ![i] = ((log54)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                             "Failure of assertion at line 4290, column 41.")
                                                                                                                                                                                   /\ LET result115 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result115)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result115)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value691 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value691}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ leader' = leader4
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd192 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd192
                                                                                                                                                                                                   /\ leader' = leader4
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                              ELSE /\ log' = [log54 EXCEPT ![i] = ((log54)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                             "Failure of assertion at line 4313, column 41.")
                                                                                                                                                                                   /\ LET result116 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result116)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result116)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value692 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value692}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ plog' = plog44
                                                                                                                                                                                                   /\ leader' = leader4
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd193 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd193
                                                                                                                                                                                                   /\ plog' = plog44
                                                                                                                                                                                                   /\ leader' = leader4
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                  ELSE /\ IF ((value410).cmd) = (LogPop)
                                                                                                                                                             THEN /\ LET plog45 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value410).cnt))] IN
                                                                                                                                                                       LET log55 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                         LET value531 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                           IF ((value531).cmd) = (LogConcat)
                                                                                                                                                                              THEN /\ plog' = [plog45 EXCEPT ![i] = ((plog45)[i]) \o ((value531).entries)]
                                                                                                                                                                                   /\ log' = [log55 EXCEPT ![i] = ((log55)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                             "Failure of assertion at line 4349, column 41.")
                                                                                                                                                                                   /\ LET result117 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result117)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result117)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value693 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value693}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ leader' = leader4
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd194 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd194
                                                                                                                                                                                                   /\ leader' = leader4
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                              ELSE /\ IF ((value531).cmd) = (LogPop)
                                                                                                                                                                                         THEN /\ plog' = [plog45 EXCEPT ![i] = SubSeq((plog45)[i], 1, (Len((plog45)[i])) - ((value531).cnt))]
                                                                                                                                                                                              /\ log' = [log55 EXCEPT ![i] = ((log55)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                              /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                        "Failure of assertion at line 4374, column 43.")
                                                                                                                                                                                              /\ LET result118 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                   /\ sm' = [sm EXCEPT ![i] = (result118)[1]]
                                                                                                                                                                                                   /\ smDomain' = [smDomain EXCEPT ![i] = (result118)[2]]
                                                                                                                                                                                                   /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                   /\ \/ /\ LET value694 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                                                                                                              /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value694}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                              /\ leader' = leader4
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      \/ /\ LET yielded_fd195 == (fd)[j] IN
                                                                                                                                                                                                              /\ yielded_fd195
                                                                                                                                                                                                              /\ leader' = leader4
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         /\ UNCHANGED network
                                                                                                                                                                                         ELSE /\ log' = [log55 EXCEPT ![i] = ((log55)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                              /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                        "Failure of assertion at line 4397, column 43.")
                                                                                                                                                                                              /\ LET result119 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                   /\ sm' = [sm EXCEPT ![i] = (result119)[1]]
                                                                                                                                                                                                   /\ smDomain' = [smDomain EXCEPT ![i] = (result119)[2]]
                                                                                                                                                                                                   /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                   /\ \/ /\ LET value695 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                                                                                                              /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value695}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                              /\ plog' = plog45
                                                                                                                                                                                                              /\ leader' = leader4
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      \/ /\ LET yielded_fd196 == (fd)[j] IN
                                                                                                                                                                                                              /\ yielded_fd196
                                                                                                                                                                                                              /\ plog' = plog45
                                                                                                                                                                                                              /\ leader' = leader4
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         /\ UNCHANGED network
                                                                                                                                                             ELSE /\ LET log56 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                       LET value532 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                         IF ((value532).cmd) = (LogConcat)
                                                                                                                                                                            THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value532).entries)]
                                                                                                                                                                                 /\ log' = [log56 EXCEPT ![i] = ((log56)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 4431, column 41.")
                                                                                                                                                                                 /\ LET result120 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result120)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result120)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value696 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value696}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ leader' = leader4
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd197 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd197
                                                                                                                                                                                                 /\ leader' = leader4
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ IF ((value532).cmd) = (LogPop)
                                                                                                                                                                                       THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value532).cnt))]
                                                                                                                                                                                            /\ log' = [log56 EXCEPT ![i] = ((log56)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                      "Failure of assertion at line 4456, column 43.")
                                                                                                                                                                                            /\ LET result121 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result121)[1]]
                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result121)[2]]
                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                 /\ \/ /\ LET value697 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value697}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                            /\ leader' = leader4
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                    \/ /\ LET yielded_fd198 == (fd)[j] IN
                                                                                                                                                                                                            /\ yielded_fd198
                                                                                                                                                                                                            /\ leader' = leader4
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                       ELSE /\ log' = [log56 EXCEPT ![i] = ((log56)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                      "Failure of assertion at line 4479, column 43.")
                                                                                                                                                                                            /\ LET result122 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result122)[1]]
                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result122)[2]]
                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                 /\ \/ /\ LET value698 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value698}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                            /\ leader' = leader4
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                    \/ /\ LET yielded_fd199 == (fd)[j] IN
                                                                                                                                                                                                            /\ yielded_fd199
                                                                                                                                                                                                            /\ leader' = leader4
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                            /\ plog' = plog
                                                                                                                        ELSE /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state4)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                                   THEN /\ \/ /\ LET value311 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value311}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                   /\ leader' = leader4
                                                                                                                                                   /\ state' = state4
                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                           \/ /\ LET yielded_fd011 == (fd)[j] IN
                                                                                                                                                   /\ yielded_fd011
                                                                                                                                                   /\ leader' = leader4
                                                                                                                                                   /\ state' = state4
                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                              /\ UNCHANGED network
                                                                                                                                        /\ UNCHANGED << commitIndex, 
                                                                                                                                                        log, 
                                                                                                                                                        plog, 
                                                                                                                                                        sm, 
                                                                                                                                                        smDomain >>
                                                                                                                                   ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state4)[i]) = (Follower))) /\ (logOK), 
                                                                                                                                                  "Failure of assertion at line 4527, column 31.")
                                                                                                                                        /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                             LET value411 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                               IF ((value411).cmd) = (LogConcat)
                                                                                                                                                  THEN /\ LET plog46 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value411).entries)] IN
                                                                                                                                                            LET log57 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                              LET value533 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                IF ((value533).cmd) = (LogConcat)
                                                                                                                                                                   THEN /\ plog' = [plog46 EXCEPT ![i] = ((plog46)[i]) \o ((value533).entries)]
                                                                                                                                                                        /\ log' = [log57 EXCEPT ![i] = ((log57)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                  "Failure of assertion at line 4541, column 39.")
                                                                                                                                                                        /\ LET result123 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result123)[1]]
                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result123)[2]]
                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                             /\ \/ /\ LET value699 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value699}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                        /\ leader' = leader4
                                                                                                                                                                                        /\ state' = state4
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                \/ /\ LET yielded_fd1100 == (fd)[j] IN
                                                                                                                                                                                        /\ yielded_fd1100
                                                                                                                                                                                        /\ leader' = leader4
                                                                                                                                                                                        /\ state' = state4
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                   ELSE /\ IF ((value533).cmd) = (LogPop)
                                                                                                                                                                              THEN /\ plog' = [plog46 EXCEPT ![i] = SubSeq((plog46)[i], 1, (Len((plog46)[i])) - ((value533).cnt))]
                                                                                                                                                                                   /\ log' = [log57 EXCEPT ![i] = ((log57)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                             "Failure of assertion at line 4568, column 41.")
                                                                                                                                                                                   /\ LET result124 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result124)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result124)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value6100 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6100}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ leader' = leader4
                                                                                                                                                                                                   /\ state' = state4
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd1101 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd1101
                                                                                                                                                                                                   /\ leader' = leader4
                                                                                                                                                                                                   /\ state' = state4
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                              ELSE /\ log' = [log57 EXCEPT ![i] = ((log57)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                             "Failure of assertion at line 4593, column 41.")
                                                                                                                                                                                   /\ LET result125 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result125)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result125)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value6101 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6101}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ plog' = plog46
                                                                                                                                                                                                   /\ leader' = leader4
                                                                                                                                                                                                   /\ state' = state4
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd1102 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd1102
                                                                                                                                                                                                   /\ plog' = plog46
                                                                                                                                                                                                   /\ leader' = leader4
                                                                                                                                                                                                   /\ state' = state4
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                  ELSE /\ IF ((value411).cmd) = (LogPop)
                                                                                                                                                             THEN /\ LET plog47 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value411).cnt))] IN
                                                                                                                                                                       LET log58 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                         LET value534 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                           IF ((value534).cmd) = (LogConcat)
                                                                                                                                                                              THEN /\ plog' = [plog47 EXCEPT ![i] = ((plog47)[i]) \o ((value534).entries)]
                                                                                                                                                                                   /\ log' = [log58 EXCEPT ![i] = ((log58)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                   /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                             "Failure of assertion at line 4631, column 41.")
                                                                                                                                                                                   /\ LET result126 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                        /\ sm' = [sm EXCEPT ![i] = (result126)[1]]
                                                                                                                                                                                        /\ smDomain' = [smDomain EXCEPT ![i] = (result126)[2]]
                                                                                                                                                                                        /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                        /\ \/ /\ LET value6102 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                   /\ ((network)[j]).enabled
                                                                                                                                                                                                   /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                   /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6102}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                   /\ leader' = leader4
                                                                                                                                                                                                   /\ state' = state4
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                           \/ /\ LET yielded_fd1103 == (fd)[j] IN
                                                                                                                                                                                                   /\ yielded_fd1103
                                                                                                                                                                                                   /\ leader' = leader4
                                                                                                                                                                                                   /\ state' = state4
                                                                                                                                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              /\ UNCHANGED network
                                                                                                                                                                              ELSE /\ IF ((value534).cmd) = (LogPop)
                                                                                                                                                                                         THEN /\ plog' = [plog47 EXCEPT ![i] = SubSeq((plog47)[i], 1, (Len((plog47)[i])) - ((value534).cnt))]
                                                                                                                                                                                              /\ log' = [log58 EXCEPT ![i] = ((log58)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                              /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                        "Failure of assertion at line 4658, column 43.")
                                                                                                                                                                                              /\ LET result127 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                   /\ sm' = [sm EXCEPT ![i] = (result127)[1]]
                                                                                                                                                                                                   /\ smDomain' = [smDomain EXCEPT ![i] = (result127)[2]]
                                                                                                                                                                                                   /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                   /\ \/ /\ LET value6103 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                                                                                                              /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6103}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                              /\ leader' = leader4
                                                                                                                                                                                                              /\ state' = state4
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      \/ /\ LET yielded_fd1104 == (fd)[j] IN
                                                                                                                                                                                                              /\ yielded_fd1104
                                                                                                                                                                                                              /\ leader' = leader4
                                                                                                                                                                                                              /\ state' = state4
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         /\ UNCHANGED network
                                                                                                                                                                                         ELSE /\ log' = [log58 EXCEPT ![i] = ((log58)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                              /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                        "Failure of assertion at line 4683, column 43.")
                                                                                                                                                                                              /\ LET result128 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                   /\ sm' = [sm EXCEPT ![i] = (result128)[1]]
                                                                                                                                                                                                   /\ smDomain' = [smDomain EXCEPT ![i] = (result128)[2]]
                                                                                                                                                                                                   /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                   /\ \/ /\ LET value6104 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                              /\ ((network)[j]).enabled
                                                                                                                                                                                                              /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                              /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6104}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                              /\ plog' = plog47
                                                                                                                                                                                                              /\ leader' = leader4
                                                                                                                                                                                                              /\ state' = state4
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                      \/ /\ LET yielded_fd1105 == (fd)[j] IN
                                                                                                                                                                                                              /\ yielded_fd1105
                                                                                                                                                                                                              /\ plog' = plog47
                                                                                                                                                                                                              /\ leader' = leader4
                                                                                                                                                                                                              /\ state' = state4
                                                                                                                                                                                                              /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                         /\ UNCHANGED network
                                                                                                                                                             ELSE /\ LET log59 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                       LET value535 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                         IF ((value535).cmd) = (LogConcat)
                                                                                                                                                                            THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value535).entries)]
                                                                                                                                                                                 /\ log' = [log59 EXCEPT ![i] = ((log59)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 4719, column 41.")
                                                                                                                                                                                 /\ LET result129 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result129)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result129)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value6105 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6105}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ leader' = leader4
                                                                                                                                                                                                 /\ state' = state4
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd1106 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd1106
                                                                                                                                                                                                 /\ leader' = leader4
                                                                                                                                                                                                 /\ state' = state4
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ IF ((value535).cmd) = (LogPop)
                                                                                                                                                                                       THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value535).cnt))]
                                                                                                                                                                                            /\ log' = [log59 EXCEPT ![i] = ((log59)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                      "Failure of assertion at line 4746, column 43.")
                                                                                                                                                                                            /\ LET result130 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result130)[1]]
                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result130)[2]]
                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                 /\ \/ /\ LET value6106 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6106}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                            /\ leader' = leader4
                                                                                                                                                                                                            /\ state' = state4
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                    \/ /\ LET yielded_fd1107 == (fd)[j] IN
                                                                                                                                                                                                            /\ yielded_fd1107
                                                                                                                                                                                                            /\ leader' = leader4
                                                                                                                                                                                                            /\ state' = state4
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                       ELSE /\ log' = [log59 EXCEPT ![i] = ((log59)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                      "Failure of assertion at line 4771, column 43.")
                                                                                                                                                                                            /\ LET result131 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result131)[1]]
                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result131)[2]]
                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                 /\ \/ /\ LET value6107 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6107}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                            /\ leader' = leader4
                                                                                                                                                                                                            /\ state' = state4
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                    \/ /\ LET yielded_fd1108 == (fd)[j] IN
                                                                                                                                                                                                            /\ yielded_fd1108
                                                                                                                                                                                                            /\ leader' = leader4
                                                                                                                                                                                                            /\ state' = state4
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                            /\ plog' = plog
                                                                                  ELSE /\ LET i == self IN
                                                                                            LET j == (m[self]).msource IN
                                                                                              LET logOK == (((m[self]).mprevLogIndex) = (0)) \/ (((((m[self]).mprevLogIndex) > (0)) /\ (((m[self]).mprevLogIndex) <= (Len((log)[i])))) /\ (((m[self]).mprevLogTerm) = ((((log)[i])[(m[self]).mprevLogIndex]).term))) IN
                                                                                                /\ Assert(((m[self]).mterm) <= ((currentTerm)[i]), 
                                                                                                          "Failure of assertion at line 4811, column 23.")
                                                                                                /\ IF ((m[self]).mterm) = ((currentTerm)[i])
                                                                                                      THEN /\ leader' = [leader EXCEPT ![i] = (m[self]).msource]
                                                                                                           /\ LET value23 == LeaderTimeoutReset IN
                                                                                                                /\ Assert(FALSE, 
                                                                                                                          "Failure of assertion at line 4815, column 27.")
                                                                                                                /\ IF (((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))
                                                                                                                      THEN /\ state' = [state EXCEPT ![i] = Follower]
                                                                                                                           /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                                 THEN /\ \/ /\ LET value312 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value312}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                         \/ /\ LET yielded_fd012 == (fd)[j] IN
                                                                                                                                                 /\ yielded_fd012
                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                            /\ UNCHANGED network
                                                                                                                                      /\ UNCHANGED << commitIndex, 
                                                                                                                                                      log, 
                                                                                                                                                      plog, 
                                                                                                                                                      sm, 
                                                                                                                                                      smDomain >>
                                                                                                                                 ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                                                "Failure of assertion at line 4833, column 31.")
                                                                                                                                      /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                           LET value412 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                             IF ((value412).cmd) = (LogConcat)
                                                                                                                                                THEN /\ LET plog48 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value412).entries)] IN
                                                                                                                                                          LET log60 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                            LET value536 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                              IF ((value536).cmd) = (LogConcat)
                                                                                                                                                                 THEN /\ plog' = [plog48 EXCEPT ![i] = ((plog48)[i]) \o ((value536).entries)]
                                                                                                                                                                      /\ log' = [log60 EXCEPT ![i] = ((log60)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                "Failure of assertion at line 4847, column 39.")
                                                                                                                                                                      /\ LET result132 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result132)[1]]
                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result132)[2]]
                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                           /\ \/ /\ LET value6108 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6108}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              \/ /\ LET yielded_fd1109 == (fd)[j] IN
                                                                                                                                                                                      /\ yielded_fd1109
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                 ELSE /\ IF ((value536).cmd) = (LogPop)
                                                                                                                                                                            THEN /\ plog' = [plog48 EXCEPT ![i] = SubSeq((plog48)[i], 1, (Len((plog48)[i])) - ((value536).cnt))]
                                                                                                                                                                                 /\ log' = [log60 EXCEPT ![i] = ((log60)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 4870, column 41.")
                                                                                                                                                                                 /\ LET result133 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result133)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result133)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value6109 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6109}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd1110 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd1110
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ log' = [log60 EXCEPT ![i] = ((log60)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 4891, column 41.")
                                                                                                                                                                                 /\ LET result134 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result134)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result134)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value6110 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6110}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ plog' = plog48
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd1111 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd1111
                                                                                                                                                                                                 /\ plog' = plog48
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                ELSE /\ IF ((value412).cmd) = (LogPop)
                                                                                                                                                           THEN /\ LET plog49 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value412).cnt))] IN
                                                                                                                                                                     LET log61 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                       LET value537 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                         IF ((value537).cmd) = (LogConcat)
                                                                                                                                                                            THEN /\ plog' = [plog49 EXCEPT ![i] = ((plog49)[i]) \o ((value537).entries)]
                                                                                                                                                                                 /\ log' = [log61 EXCEPT ![i] = ((log61)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 4925, column 41.")
                                                                                                                                                                                 /\ LET result135 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result135)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result135)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value6111 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6111}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd1112 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd1112
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ IF ((value537).cmd) = (LogPop)
                                                                                                                                                                                       THEN /\ plog' = [plog49 EXCEPT ![i] = SubSeq((plog49)[i], 1, (Len((plog49)[i])) - ((value537).cnt))]
                                                                                                                                                                                            /\ log' = [log61 EXCEPT ![i] = ((log61)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                      "Failure of assertion at line 4948, column 43.")
                                                                                                                                                                                            /\ LET result136 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result136)[1]]
                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result136)[2]]
                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                 /\ \/ /\ LET value6112 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6112}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                    \/ /\ LET yielded_fd1113 == (fd)[j] IN
                                                                                                                                                                                                            /\ yielded_fd1113
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                       ELSE /\ log' = [log61 EXCEPT ![i] = ((log61)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                      "Failure of assertion at line 4969, column 43.")
                                                                                                                                                                                            /\ LET result137 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result137)[1]]
                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result137)[2]]
                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                 /\ \/ /\ LET value6113 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6113}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                            /\ plog' = plog49
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                    \/ /\ LET yielded_fd1114 == (fd)[j] IN
                                                                                                                                                                                                            /\ yielded_fd1114
                                                                                                                                                                                                            /\ plog' = plog49
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                           ELSE /\ LET log62 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                     LET value538 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                       IF ((value538).cmd) = (LogConcat)
                                                                                                                                                                          THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value538).entries)]
                                                                                                                                                                               /\ log' = [log62 EXCEPT ![i] = ((log62)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                         "Failure of assertion at line 5001, column 41.")
                                                                                                                                                                               /\ LET result138 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result138)[1]]
                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result138)[2]]
                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                    /\ \/ /\ LET value6114 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6114}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       \/ /\ LET yielded_fd1115 == (fd)[j] IN
                                                                                                                                                                                               /\ yielded_fd1115
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                          ELSE /\ IF ((value538).cmd) = (LogPop)
                                                                                                                                                                                     THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value538).cnt))]
                                                                                                                                                                                          /\ log' = [log62 EXCEPT ![i] = ((log62)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                          /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                    "Failure of assertion at line 5024, column 43.")
                                                                                                                                                                                          /\ LET result139 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result139)[1]]
                                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result139)[2]]
                                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                               /\ \/ /\ LET value6115 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6115}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  \/ /\ LET yielded_fd1116 == (fd)[j] IN
                                                                                                                                                                                                          /\ yielded_fd1116
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                                     ELSE /\ log' = [log62 EXCEPT ![i] = ((log62)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                          /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                    "Failure of assertion at line 5045, column 43.")
                                                                                                                                                                                          /\ LET result140 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result140)[1]]
                                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result140)[2]]
                                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                               /\ \/ /\ LET value6116 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6116}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  \/ /\ LET yielded_fd1117 == (fd)[j] IN
                                                                                                                                                                                                          /\ yielded_fd1117
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                                          /\ plog' = plog
                                                                                                                      ELSE /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                                 THEN /\ \/ /\ LET value313 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value313}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                         \/ /\ LET yielded_fd013 == (fd)[j] IN
                                                                                                                                                 /\ yielded_fd013
                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                            /\ UNCHANGED network
                                                                                                                                      /\ UNCHANGED << commitIndex, 
                                                                                                                                                      log, 
                                                                                                                                                      plog, 
                                                                                                                                                      sm, 
                                                                                                                                                      smDomain >>
                                                                                                                                 ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK), 
                                                                                                                                                "Failure of assertion at line 5087, column 31.")
                                                                                                                                      /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                           LET value413 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                             IF ((value413).cmd) = (LogConcat)
                                                                                                                                                THEN /\ LET plog50 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value413).entries)] IN
                                                                                                                                                          LET log63 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                            LET value539 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                              IF ((value539).cmd) = (LogConcat)
                                                                                                                                                                 THEN /\ plog' = [plog50 EXCEPT ![i] = ((plog50)[i]) \o ((value539).entries)]
                                                                                                                                                                      /\ log' = [log63 EXCEPT ![i] = ((log63)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                "Failure of assertion at line 5101, column 39.")
                                                                                                                                                                      /\ LET result141 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result141)[1]]
                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result141)[2]]
                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                           /\ \/ /\ LET value6117 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6117}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              \/ /\ LET yielded_fd1118 == (fd)[j] IN
                                                                                                                                                                                      /\ yielded_fd1118
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                 ELSE /\ IF ((value539).cmd) = (LogPop)
                                                                                                                                                                            THEN /\ plog' = [plog50 EXCEPT ![i] = SubSeq((plog50)[i], 1, (Len((plog50)[i])) - ((value539).cnt))]
                                                                                                                                                                                 /\ log' = [log63 EXCEPT ![i] = ((log63)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 5124, column 41.")
                                                                                                                                                                                 /\ LET result142 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result142)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result142)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value6118 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6118}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd1119 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd1119
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ log' = [log63 EXCEPT ![i] = ((log63)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 5145, column 41.")
                                                                                                                                                                                 /\ LET result143 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result143)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result143)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value6119 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6119}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ plog' = plog50
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd1120 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd1120
                                                                                                                                                                                                 /\ plog' = plog50
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                ELSE /\ IF ((value413).cmd) = (LogPop)
                                                                                                                                                           THEN /\ LET plog51 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value413).cnt))] IN
                                                                                                                                                                     LET log64 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                       LET value540 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                         IF ((value540).cmd) = (LogConcat)
                                                                                                                                                                            THEN /\ plog' = [plog51 EXCEPT ![i] = ((plog51)[i]) \o ((value540).entries)]
                                                                                                                                                                                 /\ log' = [log64 EXCEPT ![i] = ((log64)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 5179, column 41.")
                                                                                                                                                                                 /\ LET result144 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result144)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result144)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value6120 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6120}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd1121 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd1121
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ IF ((value540).cmd) = (LogPop)
                                                                                                                                                                                       THEN /\ plog' = [plog51 EXCEPT ![i] = SubSeq((plog51)[i], 1, (Len((plog51)[i])) - ((value540).cnt))]
                                                                                                                                                                                            /\ log' = [log64 EXCEPT ![i] = ((log64)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                      "Failure of assertion at line 5202, column 43.")
                                                                                                                                                                                            /\ LET result145 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result145)[1]]
                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result145)[2]]
                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                 /\ \/ /\ LET value6121 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6121}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                    \/ /\ LET yielded_fd1122 == (fd)[j] IN
                                                                                                                                                                                                            /\ yielded_fd1122
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                                       ELSE /\ log' = [log64 EXCEPT ![i] = ((log64)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                      "Failure of assertion at line 5223, column 43.")
                                                                                                                                                                                            /\ LET result146 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result146)[1]]
                                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result146)[2]]
                                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                                 /\ \/ /\ LET value6122 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6122}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                            /\ plog' = plog51
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                    \/ /\ LET yielded_fd1123 == (fd)[j] IN
                                                                                                                                                                                                            /\ yielded_fd1123
                                                                                                                                                                                                            /\ plog' = plog51
                                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                           ELSE /\ LET log65 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                     LET value541 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                       IF ((value541).cmd) = (LogConcat)
                                                                                                                                                                          THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value541).entries)]
                                                                                                                                                                               /\ log' = [log65 EXCEPT ![i] = ((log65)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                         "Failure of assertion at line 5255, column 41.")
                                                                                                                                                                               /\ LET result147 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result147)[1]]
                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result147)[2]]
                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                    /\ \/ /\ LET value6123 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6123}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       \/ /\ LET yielded_fd1124 == (fd)[j] IN
                                                                                                                                                                                               /\ yielded_fd1124
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                          ELSE /\ IF ((value541).cmd) = (LogPop)
                                                                                                                                                                                     THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value541).cnt))]
                                                                                                                                                                                          /\ log' = [log65 EXCEPT ![i] = ((log65)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                          /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                    "Failure of assertion at line 5278, column 43.")
                                                                                                                                                                                          /\ LET result148 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result148)[1]]
                                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result148)[2]]
                                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                               /\ \/ /\ LET value6124 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6124}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  \/ /\ LET yielded_fd1125 == (fd)[j] IN
                                                                                                                                                                                                          /\ yielded_fd1125
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                                     ELSE /\ log' = [log65 EXCEPT ![i] = ((log65)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                          /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                    "Failure of assertion at line 5299, column 43.")
                                                                                                                                                                                          /\ LET result149 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result149)[1]]
                                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result149)[2]]
                                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                               /\ \/ /\ LET value6125 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6125}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  \/ /\ LET yielded_fd1126 == (fd)[j] IN
                                                                                                                                                                                                          /\ yielded_fd1126
                                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                                          /\ plog' = plog
                                                                                                                           /\ state' = state
                                                                                                      ELSE /\ IF (((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))
                                                                                                                 THEN /\ state' = [state EXCEPT ![i] = Follower]
                                                                                                                      /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                            THEN /\ \/ /\ LET value314 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value314}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                    \/ /\ LET yielded_fd014 == (fd)[j] IN
                                                                                                                                            /\ yielded_fd014
                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                       /\ UNCHANGED network
                                                                                                                                 /\ UNCHANGED << commitIndex, 
                                                                                                                                                 log, 
                                                                                                                                                 plog, 
                                                                                                                                                 sm, 
                                                                                                                                                 smDomain >>
                                                                                                                            ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                                           "Failure of assertion at line 5345, column 29.")
                                                                                                                                 /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                      LET value414 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                        IF ((value414).cmd) = (LogConcat)
                                                                                                                                           THEN /\ LET plog52 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value414).entries)] IN
                                                                                                                                                     LET log66 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                       LET value542 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                         IF ((value542).cmd) = (LogConcat)
                                                                                                                                                            THEN /\ plog' = [plog52 EXCEPT ![i] = ((plog52)[i]) \o ((value542).entries)]
                                                                                                                                                                 /\ log' = [log66 EXCEPT ![i] = ((log66)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                           "Failure of assertion at line 5359, column 37.")
                                                                                                                                                                 /\ LET result150 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result150)[1]]
                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result150)[2]]
                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                      /\ \/ /\ LET value6126 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6126}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                         \/ /\ LET yielded_fd1127 == (fd)[j] IN
                                                                                                                                                                                 /\ yielded_fd1127
                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                            ELSE /\ IF ((value542).cmd) = (LogPop)
                                                                                                                                                                       THEN /\ plog' = [plog52 EXCEPT ![i] = SubSeq((plog52)[i], 1, (Len((plog52)[i])) - ((value542).cnt))]
                                                                                                                                                                            /\ log' = [log66 EXCEPT ![i] = ((log66)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                      "Failure of assertion at line 5382, column 39.")
                                                                                                                                                                            /\ LET result151 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result151)[1]]
                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result151)[2]]
                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                 /\ \/ /\ LET value6127 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6127}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    \/ /\ LET yielded_fd1128 == (fd)[j] IN
                                                                                                                                                                                            /\ yielded_fd1128
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                       ELSE /\ log' = [log66 EXCEPT ![i] = ((log66)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                      "Failure of assertion at line 5403, column 39.")
                                                                                                                                                                            /\ LET result152 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result152)[1]]
                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result152)[2]]
                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                 /\ \/ /\ LET value6128 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6128}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                            /\ plog' = plog52
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    \/ /\ LET yielded_fd1129 == (fd)[j] IN
                                                                                                                                                                                            /\ yielded_fd1129
                                                                                                                                                                                            /\ plog' = plog52
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                           ELSE /\ IF ((value414).cmd) = (LogPop)
                                                                                                                                                      THEN /\ LET plog53 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value414).cnt))] IN
                                                                                                                                                                LET log67 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                  LET value543 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                    IF ((value543).cmd) = (LogConcat)
                                                                                                                                                                       THEN /\ plog' = [plog53 EXCEPT ![i] = ((plog53)[i]) \o ((value543).entries)]
                                                                                                                                                                            /\ log' = [log67 EXCEPT ![i] = ((log67)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                      "Failure of assertion at line 5437, column 39.")
                                                                                                                                                                            /\ LET result153 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result153)[1]]
                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result153)[2]]
                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                 /\ \/ /\ LET value6129 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6129}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    \/ /\ LET yielded_fd1130 == (fd)[j] IN
                                                                                                                                                                                            /\ yielded_fd1130
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                       ELSE /\ IF ((value543).cmd) = (LogPop)
                                                                                                                                                                                  THEN /\ plog' = [plog53 EXCEPT ![i] = SubSeq((plog53)[i], 1, (Len((plog53)[i])) - ((value543).cnt))]
                                                                                                                                                                                       /\ log' = [log67 EXCEPT ![i] = ((log67)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                       /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                 "Failure of assertion at line 5460, column 41.")
                                                                                                                                                                                       /\ LET result154 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result154)[1]]
                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result154)[2]]
                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                            /\ \/ /\ LET value6130 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                       /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6130}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               \/ /\ LET yielded_fd1131 == (fd)[j] IN
                                                                                                                                                                                                       /\ yielded_fd1131
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                                  ELSE /\ log' = [log67 EXCEPT ![i] = ((log67)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                       /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                 "Failure of assertion at line 5481, column 41.")
                                                                                                                                                                                       /\ LET result155 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result155)[1]]
                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result155)[2]]
                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                            /\ \/ /\ LET value6131 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                       /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6131}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                       /\ plog' = plog53
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               \/ /\ LET yielded_fd1132 == (fd)[j] IN
                                                                                                                                                                                                       /\ yielded_fd1132
                                                                                                                                                                                                       /\ plog' = plog53
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                      ELSE /\ LET log68 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                LET value544 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                  IF ((value544).cmd) = (LogConcat)
                                                                                                                                                                     THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value544).entries)]
                                                                                                                                                                          /\ log' = [log68 EXCEPT ![i] = ((log68)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                          /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                    "Failure of assertion at line 5513, column 39.")
                                                                                                                                                                          /\ LET result156 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result156)[1]]
                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result156)[2]]
                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                               /\ \/ /\ LET value6132 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6132}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  \/ /\ LET yielded_fd1133 == (fd)[j] IN
                                                                                                                                                                                          /\ yielded_fd1133
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                     ELSE /\ IF ((value544).cmd) = (LogPop)
                                                                                                                                                                                THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value544).cnt))]
                                                                                                                                                                                     /\ log' = [log68 EXCEPT ![i] = ((log68)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                     /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                               "Failure of assertion at line 5536, column 41.")
                                                                                                                                                                                     /\ LET result157 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result157)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result157)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value6133 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6133}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd1134 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd1134
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                ELSE /\ log' = [log68 EXCEPT ![i] = ((log68)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                     /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                               "Failure of assertion at line 5557, column 41.")
                                                                                                                                                                                     /\ LET result158 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result158)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result158)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value6134 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6134}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd1135 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd1135
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                     /\ plog' = plog
                                                                                                                 ELSE /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                            THEN /\ \/ /\ LET value315 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value315}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                    \/ /\ LET yielded_fd015 == (fd)[j] IN
                                                                                                                                            /\ yielded_fd015
                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                       /\ UNCHANGED network
                                                                                                                                 /\ UNCHANGED << commitIndex, 
                                                                                                                                                 log, 
                                                                                                                                                 plog, 
                                                                                                                                                 sm, 
                                                                                                                                                 smDomain >>
                                                                                                                            ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK), 
                                                                                                                                           "Failure of assertion at line 5599, column 29.")
                                                                                                                                 /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                      LET value415 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                        IF ((value415).cmd) = (LogConcat)
                                                                                                                                           THEN /\ LET plog54 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value415).entries)] IN
                                                                                                                                                     LET log69 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                       LET value545 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                         IF ((value545).cmd) = (LogConcat)
                                                                                                                                                            THEN /\ plog' = [plog54 EXCEPT ![i] = ((plog54)[i]) \o ((value545).entries)]
                                                                                                                                                                 /\ log' = [log69 EXCEPT ![i] = ((log69)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                           "Failure of assertion at line 5613, column 37.")
                                                                                                                                                                 /\ LET result159 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result159)[1]]
                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result159)[2]]
                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                      /\ \/ /\ LET value6135 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6135}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                         \/ /\ LET yielded_fd1136 == (fd)[j] IN
                                                                                                                                                                                 /\ yielded_fd1136
                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                            ELSE /\ IF ((value545).cmd) = (LogPop)
                                                                                                                                                                       THEN /\ plog' = [plog54 EXCEPT ![i] = SubSeq((plog54)[i], 1, (Len((plog54)[i])) - ((value545).cnt))]
                                                                                                                                                                            /\ log' = [log69 EXCEPT ![i] = ((log69)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                      "Failure of assertion at line 5636, column 39.")
                                                                                                                                                                            /\ LET result160 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result160)[1]]
                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result160)[2]]
                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                 /\ \/ /\ LET value6136 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6136}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    \/ /\ LET yielded_fd1137 == (fd)[j] IN
                                                                                                                                                                                            /\ yielded_fd1137
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                       ELSE /\ log' = [log69 EXCEPT ![i] = ((log69)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                      "Failure of assertion at line 5657, column 39.")
                                                                                                                                                                            /\ LET result161 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result161)[1]]
                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result161)[2]]
                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                 /\ \/ /\ LET value6137 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6137}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                            /\ plog' = plog54
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    \/ /\ LET yielded_fd1138 == (fd)[j] IN
                                                                                                                                                                                            /\ yielded_fd1138
                                                                                                                                                                                            /\ plog' = plog54
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                           ELSE /\ IF ((value415).cmd) = (LogPop)
                                                                                                                                                      THEN /\ LET plog55 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value415).cnt))] IN
                                                                                                                                                                LET log70 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                  LET value546 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                    IF ((value546).cmd) = (LogConcat)
                                                                                                                                                                       THEN /\ plog' = [plog55 EXCEPT ![i] = ((plog55)[i]) \o ((value546).entries)]
                                                                                                                                                                            /\ log' = [log70 EXCEPT ![i] = ((log70)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                            /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                      "Failure of assertion at line 5691, column 39.")
                                                                                                                                                                            /\ LET result162 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                 /\ sm' = [sm EXCEPT ![i] = (result162)[1]]
                                                                                                                                                                                 /\ smDomain' = [smDomain EXCEPT ![i] = (result162)[2]]
                                                                                                                                                                                 /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                 /\ \/ /\ LET value6138 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                            /\ ((network)[j]).enabled
                                                                                                                                                                                            /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                            /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6138}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    \/ /\ LET yielded_fd1139 == (fd)[j] IN
                                                                                                                                                                                            /\ yielded_fd1139
                                                                                                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       /\ UNCHANGED network
                                                                                                                                                                       ELSE /\ IF ((value546).cmd) = (LogPop)
                                                                                                                                                                                  THEN /\ plog' = [plog55 EXCEPT ![i] = SubSeq((plog55)[i], 1, (Len((plog55)[i])) - ((value546).cnt))]
                                                                                                                                                                                       /\ log' = [log70 EXCEPT ![i] = ((log70)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                       /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                 "Failure of assertion at line 5714, column 41.")
                                                                                                                                                                                       /\ LET result163 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result163)[1]]
                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result163)[2]]
                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                            /\ \/ /\ LET value6139 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                       /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6139}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               \/ /\ LET yielded_fd1140 == (fd)[j] IN
                                                                                                                                                                                                       /\ yielded_fd1140
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                                                  ELSE /\ log' = [log70 EXCEPT ![i] = ((log70)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                       /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                 "Failure of assertion at line 5735, column 41.")
                                                                                                                                                                                       /\ LET result164 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                            /\ sm' = [sm EXCEPT ![i] = (result164)[1]]
                                                                                                                                                                                            /\ smDomain' = [smDomain EXCEPT ![i] = (result164)[2]]
                                                                                                                                                                                            /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                            /\ \/ /\ LET value6140 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                       /\ ((network)[j]).enabled
                                                                                                                                                                                                       /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                       /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6140}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                       /\ plog' = plog55
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               \/ /\ LET yielded_fd1141 == (fd)[j] IN
                                                                                                                                                                                                       /\ yielded_fd1141
                                                                                                                                                                                                       /\ plog' = plog55
                                                                                                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                  /\ UNCHANGED network
                                                                                                                                                      ELSE /\ LET log71 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                LET value547 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                  IF ((value547).cmd) = (LogConcat)
                                                                                                                                                                     THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value547).entries)]
                                                                                                                                                                          /\ log' = [log71 EXCEPT ![i] = ((log71)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                          /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                    "Failure of assertion at line 5767, column 39.")
                                                                                                                                                                          /\ LET result165 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result165)[1]]
                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result165)[2]]
                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                               /\ \/ /\ LET value6141 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6141}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  \/ /\ LET yielded_fd1142 == (fd)[j] IN
                                                                                                                                                                                          /\ yielded_fd1142
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                     ELSE /\ IF ((value547).cmd) = (LogPop)
                                                                                                                                                                                THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value547).cnt))]
                                                                                                                                                                                     /\ log' = [log71 EXCEPT ![i] = ((log71)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                     /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                               "Failure of assertion at line 5790, column 41.")
                                                                                                                                                                                     /\ LET result166 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result166)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result166)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value6142 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6142}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd1143 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd1143
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                ELSE /\ log' = [log71 EXCEPT ![i] = ((log71)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                     /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                               "Failure of assertion at line 5811, column 41.")
                                                                                                                                                                                     /\ LET result167 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                          /\ sm' = [sm EXCEPT ![i] = (result167)[1]]
                                                                                                                                                                                          /\ smDomain' = [smDomain EXCEPT ![i] = (result167)[2]]
                                                                                                                                                                                          /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                          /\ \/ /\ LET value6143 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                     /\ ((network)[j]).enabled
                                                                                                                                                                                                     /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6143}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                             \/ /\ LET yielded_fd1144 == (fd)[j] IN
                                                                                                                                                                                                     /\ yielded_fd1144
                                                                                                                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                /\ UNCHANGED network
                                                                                                                                                                                     /\ plog' = plog
                                                                                                                      /\ state' = state
                                                                                                           /\ UNCHANGED leader
                                                                                       /\ UNCHANGED << currentTerm, 
                                                                                                       votedFor >>
                                                                            /\ UNCHANGED << nextIndex, 
                                                                                            matchIndex, 
                                                                                            appendEntriesCh >>
                                                                       ELSE /\ IF ((m[self]).mtype) = (AppendEntriesResponse)
                                                                                  THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                                                             THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                                                  /\ state' = [state EXCEPT ![self] = Follower]
                                                                                                  /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                                                                  /\ leader' = [leader EXCEPT ![self] = Nil]
                                                                                                  /\ IF ((m[self]).mterm) < ((currentTerm')[self])
                                                                                                        THEN /\ TRUE
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             /\ UNCHANGED << nextIndex, 
                                                                                                                             matchIndex >>
                                                                                                        ELSE /\ LET i == self IN
                                                                                                                  LET j == (m[self]).msource IN
                                                                                                                    /\ Assert(((m[self]).mterm) = ((currentTerm')[i]), 
                                                                                                                              "Failure of assertion at line 5856, column 27.")
                                                                                                                    /\ IF (m[self]).msuccess
                                                                                                                          THEN /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m[self]).mmatchIndex) + (1)]]
                                                                                                                               /\ matchIndex' = [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m[self]).mmatchIndex]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                          ELSE /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                               /\ UNCHANGED matchIndex
                                                                                             ELSE /\ IF ((m[self]).mterm) < ((currentTerm)[self])
                                                                                                        THEN /\ TRUE
                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             /\ UNCHANGED << nextIndex, 
                                                                                                                             matchIndex >>
                                                                                                        ELSE /\ LET i == self IN
                                                                                                                  LET j == (m[self]).msource IN
                                                                                                                    /\ Assert(((m[self]).mterm) = ((currentTerm)[i]), 
                                                                                                                              "Failure of assertion at line 5876, column 27.")
                                                                                                                    /\ IF (m[self]).msuccess
                                                                                                                          THEN /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m[self]).mmatchIndex) + (1)]]
                                                                                                                               /\ matchIndex' = [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m[self]).mmatchIndex]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                          ELSE /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                               /\ UNCHANGED matchIndex
                                                                                                  /\ UNCHANGED << state, 
                                                                                                                  currentTerm, 
                                                                                                                  votedFor, 
                                                                                                                  leader >>
                                                                                       /\ UNCHANGED << network, 
                                                                                                       log, 
                                                                                                       plog, 
                                                                                                       appendEntriesCh >>
                                                                                  ELSE /\ IF (((m[self]).mtype) = (ClientPutRequest)) \/ (((m[self]).mtype) = (ClientGetRequest))
                                                                                             THEN /\ IF ((state)[self]) = (Leader)
                                                                                                        THEN /\ LET entry == [term |-> (currentTerm)[self], cmd |-> (m[self]).mcmd, client |-> (m[self]).msource] IN
                                                                                                                  /\ log' = [log EXCEPT ![self] = Append((log)[self], entry)]
                                                                                                                  /\ LET value71 == [cmd |-> LogConcat, entries |-> <<entry>>] IN
                                                                                                                       IF ((value71).cmd) = (LogConcat)
                                                                                                                          THEN /\ plog' = [plog EXCEPT ![self] = ((plog)[self]) \o ((value71).entries)]
                                                                                                                               /\ LET value83 == TRUE IN
                                                                                                                                    /\ appendEntriesCh' = [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value83)]
                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                          ELSE /\ IF ((value71).cmd) = (LogPop)
                                                                                                                                     THEN /\ plog' = [plog EXCEPT ![self] = SubSeq((plog)[self], 1, (Len((plog)[self])) - ((value71).cnt))]
                                                                                                                                          /\ LET value84 == TRUE IN
                                                                                                                                               /\ appendEntriesCh' = [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value84)]
                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                     ELSE /\ LET value85 == TRUE IN
                                                                                                                                               /\ appendEntriesCh' = [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value85)]
                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                          /\ plog' = plog
                                                                                                             /\ UNCHANGED network
                                                                                                        ELSE /\ LET i == self IN
                                                                                                                  LET j == (m[self]).msource IN
                                                                                                                    LET respType == IF (((m[self]).mcmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse IN
                                                                                                                      LET value91 == [mtype |-> respType, msuccess |-> FALSE, mresponse |-> [idx |-> ((m[self]).mcmd).idx, key |-> ((m[self]).mcmd).key], mleaderHint |-> (leader)[i], msource |-> i, mdest |-> j] IN
                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value91}), enabled |-> ((network)[j]).enabled]]
                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             /\ UNCHANGED << log, 
                                                                                                                             plog, 
                                                                                                                             appendEntriesCh >>
                                                                                             ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                  /\ UNCHANGED << network, 
                                                                                                                  log, 
                                                                                                                  plog, 
                                                                                                                  appendEntriesCh >>
                                                                                       /\ UNCHANGED << state, 
                                                                                                       currentTerm, 
                                                                                                       nextIndex, 
                                                                                                       matchIndex, 
                                                                                                       votedFor, 
                                                                                                       leader >>
                                                                            /\ UNCHANGED << commitIndex, 
                                                                                            sm, 
                                                                                            smDomain >>
                                                                 /\ UNCHANGED << votesResponded, 
                                                                                 votesGranted, 
                                                                                 becomeLeaderCh >>
                         ELSE /\ IF ((m[self]).mtype) = (RequestVoteRequest)
                                    THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                               THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                    /\ state' = [state EXCEPT ![self] = Follower]
                                                    /\ LET votedFor5 == [votedFor EXCEPT ![self] = Nil] IN
                                                         /\ leader' = [leader EXCEPT ![self] = Nil]
                                                         /\ LET i == self IN
                                                              LET j == (m[self]).msource IN
                                                                LET logOK == (((m[self]).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m[self]).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m[self]).mlastLogIndex) >= (Len((log)[i])))) IN
                                                                  LET grant == ((((m[self]).mterm) = ((currentTerm')[i])) /\ (logOK)) /\ (((votedFor5)[self]) \in ({Nil, j})) IN
                                                                    /\ Assert(((m[self]).mterm) <= ((currentTerm')[i]), 
                                                                              "Failure of assertion at line 5951, column 17.")
                                                                    /\ IF grant
                                                                          THEN /\ votedFor' = [votedFor5 EXCEPT ![i] = j]
                                                                               /\ \/ /\ LET value08 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm')[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                          /\ ((network)[j]).enabled
                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value08}), enabled |-> ((network)[j]).enabled]]
                                                                                          /\ IF Debug
                                                                                                THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                  \/ /\ LET yielded_fd24 == (fd)[j] IN
                                                                                          /\ yielded_fd24
                                                                                          /\ IF Debug
                                                                                                THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                     /\ UNCHANGED network
                                                                          ELSE /\ \/ /\ LET value09 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm')[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                          /\ ((network)[j]).enabled
                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value09}), enabled |-> ((network)[j]).enabled]]
                                                                                          /\ IF Debug
                                                                                                THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                     /\ votedFor' = votedFor5
                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                ELSE /\ votedFor' = votedFor5
                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                  \/ /\ LET yielded_fd25 == (fd)[j] IN
                                                                                          /\ yielded_fd25
                                                                                          /\ IF Debug
                                                                                                THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm')[i], grant>>)
                                                                                                     /\ votedFor' = votedFor5
                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                ELSE /\ votedFor' = votedFor5
                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                     /\ UNCHANGED network
                                               ELSE /\ LET i == self IN
                                                         LET j == (m[self]).msource IN
                                                           LET logOK == (((m[self]).mlastLogTerm) > (LastTerm((log)[i]))) \/ ((((m[self]).mlastLogTerm) = (LastTerm((log)[i]))) /\ (((m[self]).mlastLogIndex) >= (Len((log)[i])))) IN
                                                             LET grant == ((((m[self]).mterm) = ((currentTerm)[i])) /\ (logOK)) /\ (((votedFor)[self]) \in ({Nil, j})) IN
                                                               /\ Assert(((m[self]).mterm) <= ((currentTerm)[i]), 
                                                                         "Failure of assertion at line 6015, column 15.")
                                                               /\ IF grant
                                                                     THEN /\ votedFor' = [votedFor EXCEPT ![i] = j]
                                                                          /\ \/ /\ LET value010 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                     /\ ((network)[j]).enabled
                                                                                     /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value010}), enabled |-> ((network)[j]).enabled]]
                                                                                     /\ IF Debug
                                                                                           THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                             \/ /\ LET yielded_fd26 == (fd)[j] IN
                                                                                     /\ yielded_fd26
                                                                                     /\ IF Debug
                                                                                           THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                /\ UNCHANGED network
                                                                     ELSE /\ \/ /\ LET value011 == [mtype |-> RequestVoteResponse, mterm |-> (currentTerm)[i], mvoteGranted |-> grant, msource |-> i, mdest |-> j] IN
                                                                                     /\ ((network)[j]).enabled
                                                                                     /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                     /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value011}), enabled |-> ((network)[j]).enabled]]
                                                                                     /\ IF Debug
                                                                                           THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                             \/ /\ LET yielded_fd27 == (fd)[j] IN
                                                                                     /\ yielded_fd27
                                                                                     /\ IF Debug
                                                                                           THEN /\ PrintT(<<"HandleRequestVoteRequest", i, j, (currentTerm)[i], grant>>)
                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                /\ UNCHANGED network
                                                                          /\ UNCHANGED votedFor
                                                    /\ UNCHANGED << state, 
                                                                    currentTerm, 
                                                                    leader >>
                                         /\ UNCHANGED << commitIndex, 
                                                         nextIndex, matchIndex, 
                                                         log, plog, 
                                                         votesResponded, 
                                                         votesGranted, sm, 
                                                         smDomain, 
                                                         appendEntriesCh, 
                                                         becomeLeaderCh >>
                                    ELSE /\ IF ((m[self]).mtype) = (RequestVoteResponse)
                                               THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                          THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                               /\ state' = [state EXCEPT ![self] = Follower]
                                                               /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                               /\ leader' = [leader EXCEPT ![self] = Nil]
                                                               /\ IF ((m[self]).mterm) < ((currentTerm')[self])
                                                                     THEN /\ TRUE
                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                          /\ UNCHANGED << votesResponded, 
                                                                                          votesGranted, 
                                                                                          becomeLeaderCh >>
                                                                     ELSE /\ LET i == self IN
                                                                               LET j == (m[self]).msource IN
                                                                                 /\ Assert(((m[self]).mterm) = ((currentTerm')[i]), 
                                                                                           "Failure of assertion at line 6083, column 19.")
                                                                                 /\ votesResponded' = [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})]
                                                                                 /\ IF (m[self]).mvoteGranted
                                                                                       THEN /\ votesGranted' = [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})]
                                                                                            /\ IF (((state')[i]) = (Candidate)) /\ (isQuorum((votesGranted')[i]))
                                                                                                  THEN /\ LET value112 == TRUE IN
                                                                                                            /\ becomeLeaderCh' = [becomeLeaderCh EXCEPT ![i] = Append((becomeLeaderCh)[i], value112)]
                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                  ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                       /\ UNCHANGED becomeLeaderCh
                                                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                            /\ UNCHANGED << votesGranted, 
                                                                                                            becomeLeaderCh >>
                                                          ELSE /\ IF ((m[self]).mterm) < ((currentTerm)[self])
                                                                     THEN /\ TRUE
                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                          /\ UNCHANGED << votesResponded, 
                                                                                          votesGranted, 
                                                                                          becomeLeaderCh >>
                                                                     ELSE /\ LET i == self IN
                                                                               LET j == (m[self]).msource IN
                                                                                 /\ Assert(((m[self]).mterm) = ((currentTerm)[i]), 
                                                                                           "Failure of assertion at line 6109, column 19.")
                                                                                 /\ votesResponded' = [votesResponded EXCEPT ![i] = ((votesResponded)[i]) \union ({j})]
                                                                                 /\ IF (m[self]).mvoteGranted
                                                                                       THEN /\ votesGranted' = [votesGranted EXCEPT ![i] = ((votesGranted)[i]) \union ({j})]
                                                                                            /\ IF (((state)[i]) = (Candidate)) /\ (isQuorum((votesGranted')[i]))
                                                                                                  THEN /\ LET value113 == TRUE IN
                                                                                                            /\ becomeLeaderCh' = [becomeLeaderCh EXCEPT ![i] = Append((becomeLeaderCh)[i], value113)]
                                                                                                            /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                  ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                       /\ UNCHANGED becomeLeaderCh
                                                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                            /\ UNCHANGED << votesGranted, 
                                                                                                            becomeLeaderCh >>
                                                               /\ UNCHANGED << state, 
                                                                               currentTerm, 
                                                                               votedFor, 
                                                                               leader >>
                                                    /\ UNCHANGED << network, 
                                                                    commitIndex, 
                                                                    nextIndex, 
                                                                    matchIndex, 
                                                                    log, plog, 
                                                                    sm, 
                                                                    smDomain, 
                                                                    appendEntriesCh >>
                                               ELSE /\ IF ((m[self]).mtype) = (AppendEntriesRequest)
                                                          THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                                     THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                          /\ LET state5 == [state EXCEPT ![self] = Follower] IN
                                                                               /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                                               /\ LET leader5 == [leader EXCEPT ![self] = Nil] IN
                                                                                    LET i == self IN
                                                                                      LET j == (m[self]).msource IN
                                                                                        LET logOK == (((m[self]).mprevLogIndex) = (0)) \/ (((((m[self]).mprevLogIndex) > (0)) /\ (((m[self]).mprevLogIndex) <= (Len((log)[i])))) /\ (((m[self]).mprevLogTerm) = ((((log)[i])[(m[self]).mprevLogIndex]).term))) IN
                                                                                          /\ Assert(((m[self]).mterm) <= ((currentTerm')[i]), 
                                                                                                    "Failure of assertion at line 6139, column 21.")
                                                                                          /\ IF ((m[self]).mterm) = ((currentTerm')[i])
                                                                                                THEN /\ leader' = [leader5 EXCEPT ![i] = (m[self]).msource]
                                                                                                     /\ LET value24 == LeaderTimeoutReset IN
                                                                                                          /\ Assert(FALSE, 
                                                                                                                    "Failure of assertion at line 6143, column 25.")
                                                                                                          /\ IF (((m[self]).mterm) = ((currentTerm')[i])) /\ (((state5)[i]) = (Candidate))
                                                                                                                THEN /\ state' = [state5 EXCEPT ![i] = Follower]
                                                                                                                     /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                           THEN /\ \/ /\ LET value316 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                           /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value316}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                   \/ /\ LET yielded_fd016 == (fd)[j] IN
                                                                                                                                           /\ yielded_fd016
                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                      /\ UNCHANGED network
                                                                                                                                /\ UNCHANGED << commitIndex, 
                                                                                                                                                log, 
                                                                                                                                                plog, 
                                                                                                                                                sm, 
                                                                                                                                                smDomain >>
                                                                                                                           ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                                          "Failure of assertion at line 6161, column 29.")
                                                                                                                                /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                     LET value416 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                       IF ((value416).cmd) = (LogConcat)
                                                                                                                                          THEN /\ LET plog56 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value416).entries)] IN
                                                                                                                                                    LET log72 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                      LET value548 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                        IF ((value548).cmd) = (LogConcat)
                                                                                                                                                           THEN /\ plog' = [plog56 EXCEPT ![i] = ((plog56)[i]) \o ((value548).entries)]
                                                                                                                                                                /\ log' = [log72 EXCEPT ![i] = ((log72)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                          "Failure of assertion at line 6175, column 37.")
                                                                                                                                                                /\ LET result168 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                     /\ sm' = [sm EXCEPT ![i] = (result168)[1]]
                                                                                                                                                                     /\ smDomain' = [smDomain EXCEPT ![i] = (result168)[2]]
                                                                                                                                                                     /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                     /\ \/ /\ LET value6144 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                /\ ((network)[j]).enabled
                                                                                                                                                                                /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6144}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                        \/ /\ LET yielded_fd1145 == (fd)[j] IN
                                                                                                                                                                                /\ yielded_fd1145
                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                           /\ UNCHANGED network
                                                                                                                                                           ELSE /\ IF ((value548).cmd) = (LogPop)
                                                                                                                                                                      THEN /\ plog' = [plog56 EXCEPT ![i] = SubSeq((plog56)[i], 1, (Len((plog56)[i])) - ((value548).cnt))]
                                                                                                                                                                           /\ log' = [log72 EXCEPT ![i] = ((log72)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                           /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                     "Failure of assertion at line 6198, column 39.")
                                                                                                                                                                           /\ LET result169 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result169)[1]]
                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result169)[2]]
                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                /\ \/ /\ LET value6145 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                           /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6145}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   \/ /\ LET yielded_fd1146 == (fd)[j] IN
                                                                                                                                                                                           /\ yielded_fd1146
                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                      ELSE /\ log' = [log72 EXCEPT ![i] = ((log72)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                           /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                     "Failure of assertion at line 6219, column 39.")
                                                                                                                                                                           /\ LET result170 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result170)[1]]
                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result170)[2]]
                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                /\ \/ /\ LET value6146 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                           /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6146}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                           /\ plog' = plog56
                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   \/ /\ LET yielded_fd1147 == (fd)[j] IN
                                                                                                                                                                                           /\ yielded_fd1147
                                                                                                                                                                                           /\ plog' = plog56
                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                          ELSE /\ IF ((value416).cmd) = (LogPop)
                                                                                                                                                     THEN /\ LET plog57 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value416).cnt))] IN
                                                                                                                                                               LET log73 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                 LET value549 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                   IF ((value549).cmd) = (LogConcat)
                                                                                                                                                                      THEN /\ plog' = [plog57 EXCEPT ![i] = ((plog57)[i]) \o ((value549).entries)]
                                                                                                                                                                           /\ log' = [log73 EXCEPT ![i] = ((log73)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                           /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                     "Failure of assertion at line 6253, column 39.")
                                                                                                                                                                           /\ LET result171 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result171)[1]]
                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result171)[2]]
                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                /\ \/ /\ LET value6147 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                           /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6147}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   \/ /\ LET yielded_fd1148 == (fd)[j] IN
                                                                                                                                                                                           /\ yielded_fd1148
                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                      ELSE /\ IF ((value549).cmd) = (LogPop)
                                                                                                                                                                                 THEN /\ plog' = [plog57 EXCEPT ![i] = SubSeq((plog57)[i], 1, (Len((plog57)[i])) - ((value549).cnt))]
                                                                                                                                                                                      /\ log' = [log73 EXCEPT ![i] = ((log73)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                "Failure of assertion at line 6276, column 41.")
                                                                                                                                                                                      /\ LET result172 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result172)[1]]
                                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result172)[2]]
                                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                           /\ \/ /\ LET value6148 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6148}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              \/ /\ LET yielded_fd1149 == (fd)[j] IN
                                                                                                                                                                                                      /\ yielded_fd1149
                                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                                 ELSE /\ log' = [log73 EXCEPT ![i] = ((log73)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                "Failure of assertion at line 6297, column 41.")
                                                                                                                                                                                      /\ LET result173 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result173)[1]]
                                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result173)[2]]
                                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                           /\ \/ /\ LET value6149 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6149}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                      /\ plog' = plog57
                                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              \/ /\ LET yielded_fd1150 == (fd)[j] IN
                                                                                                                                                                                                      /\ yielded_fd1150
                                                                                                                                                                                                      /\ plog' = plog57
                                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                     ELSE /\ LET log74 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                               LET value550 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                 IF ((value550).cmd) = (LogConcat)
                                                                                                                                                                    THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value550).entries)]
                                                                                                                                                                         /\ log' = [log74 EXCEPT ![i] = ((log74)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                         /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                   "Failure of assertion at line 6329, column 39.")
                                                                                                                                                                         /\ LET result174 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                              /\ sm' = [sm EXCEPT ![i] = (result174)[1]]
                                                                                                                                                                              /\ smDomain' = [smDomain EXCEPT ![i] = (result174)[2]]
                                                                                                                                                                              /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                              /\ \/ /\ LET value6150 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                         /\ ((network)[j]).enabled
                                                                                                                                                                                         /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                         /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6150}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 \/ /\ LET yielded_fd1151 == (fd)[j] IN
                                                                                                                                                                                         /\ yielded_fd1151
                                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    /\ UNCHANGED network
                                                                                                                                                                    ELSE /\ IF ((value550).cmd) = (LogPop)
                                                                                                                                                                               THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value550).cnt))]
                                                                                                                                                                                    /\ log' = [log74 EXCEPT ![i] = ((log74)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                    /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                              "Failure of assertion at line 6352, column 41.")
                                                                                                                                                                                    /\ LET result175 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result175)[1]]
                                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result175)[2]]
                                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                         /\ \/ /\ LET value6151 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                                    /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6151}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            \/ /\ LET yielded_fd1152 == (fd)[j] IN
                                                                                                                                                                                                    /\ yielded_fd1152
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                                               ELSE /\ log' = [log74 EXCEPT ![i] = ((log74)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                    /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                              "Failure of assertion at line 6373, column 41.")
                                                                                                                                                                                    /\ LET result176 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result176)[1]]
                                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result176)[2]]
                                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                         /\ \/ /\ LET value6152 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                                    /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6152}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            \/ /\ LET yielded_fd1153 == (fd)[j] IN
                                                                                                                                                                                                    /\ yielded_fd1153
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                                                    /\ plog' = plog
                                                                                                                ELSE /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state5)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                           THEN /\ \/ /\ LET value317 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                           /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value317}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                           /\ state' = state5
                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                   \/ /\ LET yielded_fd017 == (fd)[j] IN
                                                                                                                                           /\ yielded_fd017
                                                                                                                                           /\ state' = state5
                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                      /\ UNCHANGED network
                                                                                                                                /\ UNCHANGED << commitIndex, 
                                                                                                                                                log, 
                                                                                                                                                plog, 
                                                                                                                                                sm, 
                                                                                                                                                smDomain >>
                                                                                                                           ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state5)[i]) = (Follower))) /\ (logOK), 
                                                                                                                                          "Failure of assertion at line 6417, column 29.")
                                                                                                                                /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                     LET value417 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                       IF ((value417).cmd) = (LogConcat)
                                                                                                                                          THEN /\ LET plog58 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value417).entries)] IN
                                                                                                                                                    LET log75 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                      LET value551 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                        IF ((value551).cmd) = (LogConcat)
                                                                                                                                                           THEN /\ plog' = [plog58 EXCEPT ![i] = ((plog58)[i]) \o ((value551).entries)]
                                                                                                                                                                /\ log' = [log75 EXCEPT ![i] = ((log75)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                          "Failure of assertion at line 6431, column 37.")
                                                                                                                                                                /\ LET result177 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                     /\ sm' = [sm EXCEPT ![i] = (result177)[1]]
                                                                                                                                                                     /\ smDomain' = [smDomain EXCEPT ![i] = (result177)[2]]
                                                                                                                                                                     /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                     /\ \/ /\ LET value6153 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                /\ ((network)[j]).enabled
                                                                                                                                                                                /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6153}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                /\ state' = state5
                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                        \/ /\ LET yielded_fd1154 == (fd)[j] IN
                                                                                                                                                                                /\ yielded_fd1154
                                                                                                                                                                                /\ state' = state5
                                                                                                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                           /\ UNCHANGED network
                                                                                                                                                           ELSE /\ IF ((value551).cmd) = (LogPop)
                                                                                                                                                                      THEN /\ plog' = [plog58 EXCEPT ![i] = SubSeq((plog58)[i], 1, (Len((plog58)[i])) - ((value551).cnt))]
                                                                                                                                                                           /\ log' = [log75 EXCEPT ![i] = ((log75)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                           /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                     "Failure of assertion at line 6456, column 39.")
                                                                                                                                                                           /\ LET result178 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result178)[1]]
                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result178)[2]]
                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                /\ \/ /\ LET value6154 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                           /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6154}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                           /\ state' = state5
                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   \/ /\ LET yielded_fd1155 == (fd)[j] IN
                                                                                                                                                                                           /\ yielded_fd1155
                                                                                                                                                                                           /\ state' = state5
                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                      ELSE /\ log' = [log75 EXCEPT ![i] = ((log75)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                           /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                     "Failure of assertion at line 6479, column 39.")
                                                                                                                                                                           /\ LET result179 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result179)[1]]
                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result179)[2]]
                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                /\ \/ /\ LET value6155 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                           /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6155}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                           /\ plog' = plog58
                                                                                                                                                                                           /\ state' = state5
                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   \/ /\ LET yielded_fd1156 == (fd)[j] IN
                                                                                                                                                                                           /\ yielded_fd1156
                                                                                                                                                                                           /\ plog' = plog58
                                                                                                                                                                                           /\ state' = state5
                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                          ELSE /\ IF ((value417).cmd) = (LogPop)
                                                                                                                                                     THEN /\ LET plog59 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value417).cnt))] IN
                                                                                                                                                               LET log76 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                                 LET value552 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                   IF ((value552).cmd) = (LogConcat)
                                                                                                                                                                      THEN /\ plog' = [plog59 EXCEPT ![i] = ((plog59)[i]) \o ((value552).entries)]
                                                                                                                                                                           /\ log' = [log76 EXCEPT ![i] = ((log76)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                           /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                     "Failure of assertion at line 6515, column 39.")
                                                                                                                                                                           /\ LET result180 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result180)[1]]
                                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result180)[2]]
                                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                /\ \/ /\ LET value6156 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                                           /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6156}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                           /\ state' = state5
                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   \/ /\ LET yielded_fd1157 == (fd)[j] IN
                                                                                                                                                                                           /\ yielded_fd1157
                                                                                                                                                                                           /\ state' = state5
                                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                                      ELSE /\ IF ((value552).cmd) = (LogPop)
                                                                                                                                                                                 THEN /\ plog' = [plog59 EXCEPT ![i] = SubSeq((plog59)[i], 1, (Len((plog59)[i])) - ((value552).cnt))]
                                                                                                                                                                                      /\ log' = [log76 EXCEPT ![i] = ((log76)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                "Failure of assertion at line 6540, column 41.")
                                                                                                                                                                                      /\ LET result181 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result181)[1]]
                                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result181)[2]]
                                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                           /\ \/ /\ LET value6157 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6157}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                      /\ state' = state5
                                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              \/ /\ LET yielded_fd1158 == (fd)[j] IN
                                                                                                                                                                                                      /\ yielded_fd1158
                                                                                                                                                                                                      /\ state' = state5
                                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                                 ELSE /\ log' = [log76 EXCEPT ![i] = ((log76)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                                "Failure of assertion at line 6563, column 41.")
                                                                                                                                                                                      /\ LET result182 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result182)[1]]
                                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result182)[2]]
                                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                           /\ \/ /\ LET value6158 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6158}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                      /\ plog' = plog59
                                                                                                                                                                                                      /\ state' = state5
                                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                              \/ /\ LET yielded_fd1159 == (fd)[j] IN
                                                                                                                                                                                                      /\ yielded_fd1159
                                                                                                                                                                                                      /\ plog' = plog59
                                                                                                                                                                                                      /\ state' = state5
                                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                     ELSE /\ LET log77 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                               LET value553 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                                 IF ((value553).cmd) = (LogConcat)
                                                                                                                                                                    THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value553).entries)]
                                                                                                                                                                         /\ log' = [log77 EXCEPT ![i] = ((log77)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                         /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                   "Failure of assertion at line 6597, column 39.")
                                                                                                                                                                         /\ LET result183 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                              /\ sm' = [sm EXCEPT ![i] = (result183)[1]]
                                                                                                                                                                              /\ smDomain' = [smDomain EXCEPT ![i] = (result183)[2]]
                                                                                                                                                                              /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                              /\ \/ /\ LET value6159 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                         /\ ((network)[j]).enabled
                                                                                                                                                                                         /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                         /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6159}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                         /\ state' = state5
                                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 \/ /\ LET yielded_fd1160 == (fd)[j] IN
                                                                                                                                                                                         /\ yielded_fd1160
                                                                                                                                                                                         /\ state' = state5
                                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                    /\ UNCHANGED network
                                                                                                                                                                    ELSE /\ IF ((value553).cmd) = (LogPop)
                                                                                                                                                                               THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value553).cnt))]
                                                                                                                                                                                    /\ log' = [log77 EXCEPT ![i] = ((log77)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                    /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                              "Failure of assertion at line 6622, column 41.")
                                                                                                                                                                                    /\ LET result184 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result184)[1]]
                                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result184)[2]]
                                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                         /\ \/ /\ LET value6160 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                                    /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6160}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                    /\ state' = state5
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            \/ /\ LET yielded_fd1161 == (fd)[j] IN
                                                                                                                                                                                                    /\ yielded_fd1161
                                                                                                                                                                                                    /\ state' = state5
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                                               ELSE /\ log' = [log77 EXCEPT ![i] = ((log77)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                    /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                              "Failure of assertion at line 6645, column 41.")
                                                                                                                                                                                    /\ LET result185 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result185)[1]]
                                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result185)[2]]
                                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                         /\ \/ /\ LET value6161 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                                    /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6161}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                    /\ state' = state5
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            \/ /\ LET yielded_fd1162 == (fd)[j] IN
                                                                                                                                                                                                    /\ yielded_fd1162
                                                                                                                                                                                                    /\ state' = state5
                                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                                                    /\ plog' = plog
                                                                                                ELSE /\ IF (((m[self]).mterm) = ((currentTerm')[i])) /\ (((state5)[i]) = (Candidate))
                                                                                                           THEN /\ state' = [state5 EXCEPT ![i] = Follower]
                                                                                                                /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                      THEN /\ \/ /\ LET value318 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value318}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                      /\ leader' = leader5
                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                              \/ /\ LET yielded_fd018 == (fd)[j] IN
                                                                                                                                      /\ yielded_fd018
                                                                                                                                      /\ leader' = leader5
                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                 /\ UNCHANGED network
                                                                                                                           /\ UNCHANGED << commitIndex, 
                                                                                                                                           log, 
                                                                                                                                           plog, 
                                                                                                                                           sm, 
                                                                                                                                           smDomain >>
                                                                                                                      ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                                     "Failure of assertion at line 6695, column 27.")
                                                                                                                           /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                LET value418 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                  IF ((value418).cmd) = (LogConcat)
                                                                                                                                     THEN /\ LET plog60 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value418).entries)] IN
                                                                                                                                               LET log78 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                 LET value554 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                   IF ((value554).cmd) = (LogConcat)
                                                                                                                                                      THEN /\ plog' = [plog60 EXCEPT ![i] = ((plog60)[i]) \o ((value554).entries)]
                                                                                                                                                           /\ log' = [log78 EXCEPT ![i] = ((log78)[i]) \o ((m[self]).mentries)]
                                                                                                                                                           /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                     "Failure of assertion at line 6709, column 35.")
                                                                                                                                                           /\ LET result186 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result186)[1]]
                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result186)[2]]
                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                /\ \/ /\ LET value6162 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                           /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6162}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                           /\ leader' = leader5
                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                   \/ /\ LET yielded_fd1163 == (fd)[j] IN
                                                                                                                                                                           /\ yielded_fd1163
                                                                                                                                                                           /\ leader' = leader5
                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                      ELSE /\ IF ((value554).cmd) = (LogPop)
                                                                                                                                                                 THEN /\ plog' = [plog60 EXCEPT ![i] = SubSeq((plog60)[i], 1, (Len((plog60)[i])) - ((value554).cnt))]
                                                                                                                                                                      /\ log' = [log78 EXCEPT ![i] = ((log78)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                "Failure of assertion at line 6734, column 37.")
                                                                                                                                                                      /\ LET result187 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result187)[1]]
                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result187)[2]]
                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                           /\ \/ /\ LET value6163 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6163}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                      /\ leader' = leader5
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              \/ /\ LET yielded_fd1164 == (fd)[j] IN
                                                                                                                                                                                      /\ yielded_fd1164
                                                                                                                                                                                      /\ leader' = leader5
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                 ELSE /\ log' = [log78 EXCEPT ![i] = ((log78)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                "Failure of assertion at line 6757, column 37.")
                                                                                                                                                                      /\ LET result188 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result188)[1]]
                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result188)[2]]
                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                           /\ \/ /\ LET value6164 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6164}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                      /\ plog' = plog60
                                                                                                                                                                                      /\ leader' = leader5
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              \/ /\ LET yielded_fd1165 == (fd)[j] IN
                                                                                                                                                                                      /\ yielded_fd1165
                                                                                                                                                                                      /\ plog' = plog60
                                                                                                                                                                                      /\ leader' = leader5
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                     ELSE /\ IF ((value418).cmd) = (LogPop)
                                                                                                                                                THEN /\ LET plog61 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value418).cnt))] IN
                                                                                                                                                          LET log79 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                            LET value555 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                              IF ((value555).cmd) = (LogConcat)
                                                                                                                                                                 THEN /\ plog' = [plog61 EXCEPT ![i] = ((plog61)[i]) \o ((value555).entries)]
                                                                                                                                                                      /\ log' = [log79 EXCEPT ![i] = ((log79)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                "Failure of assertion at line 6793, column 37.")
                                                                                                                                                                      /\ LET result189 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result189)[1]]
                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result189)[2]]
                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                           /\ \/ /\ LET value6165 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6165}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                      /\ leader' = leader5
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              \/ /\ LET yielded_fd1166 == (fd)[j] IN
                                                                                                                                                                                      /\ yielded_fd1166
                                                                                                                                                                                      /\ leader' = leader5
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                 ELSE /\ IF ((value555).cmd) = (LogPop)
                                                                                                                                                                            THEN /\ plog' = [plog61 EXCEPT ![i] = SubSeq((plog61)[i], 1, (Len((plog61)[i])) - ((value555).cnt))]
                                                                                                                                                                                 /\ log' = [log79 EXCEPT ![i] = ((log79)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 6818, column 39.")
                                                                                                                                                                                 /\ LET result190 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result190)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result190)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value6166 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6166}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ leader' = leader5
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd1167 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd1167
                                                                                                                                                                                                 /\ leader' = leader5
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ log' = [log79 EXCEPT ![i] = ((log79)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 6841, column 39.")
                                                                                                                                                                                 /\ LET result191 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result191)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result191)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value6167 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6167}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ plog' = plog61
                                                                                                                                                                                                 /\ leader' = leader5
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd1168 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd1168
                                                                                                                                                                                                 /\ plog' = plog61
                                                                                                                                                                                                 /\ leader' = leader5
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                ELSE /\ LET log80 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                          LET value556 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                            IF ((value556).cmd) = (LogConcat)
                                                                                                                                                               THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value556).entries)]
                                                                                                                                                                    /\ log' = [log80 EXCEPT ![i] = ((log80)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                    /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                              "Failure of assertion at line 6875, column 37.")
                                                                                                                                                                    /\ LET result192 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result192)[1]]
                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result192)[2]]
                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                         /\ \/ /\ LET value6168 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                    /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6168}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                    /\ leader' = leader5
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                            \/ /\ LET yielded_fd1169 == (fd)[j] IN
                                                                                                                                                                                    /\ yielded_fd1169
                                                                                                                                                                                    /\ leader' = leader5
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                               ELSE /\ IF ((value556).cmd) = (LogPop)
                                                                                                                                                                          THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value556).cnt))]
                                                                                                                                                                               /\ log' = [log80 EXCEPT ![i] = ((log80)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                         "Failure of assertion at line 6900, column 39.")
                                                                                                                                                                               /\ LET result193 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result193)[1]]
                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result193)[2]]
                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                    /\ \/ /\ LET value6169 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6169}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                               /\ leader' = leader5
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       \/ /\ LET yielded_fd1170 == (fd)[j] IN
                                                                                                                                                                                               /\ yielded_fd1170
                                                                                                                                                                                               /\ leader' = leader5
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                          ELSE /\ log' = [log80 EXCEPT ![i] = ((log80)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                         "Failure of assertion at line 6923, column 39.")
                                                                                                                                                                               /\ LET result194 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result194)[1]]
                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result194)[2]]
                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                    /\ \/ /\ LET value6170 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6170}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                               /\ leader' = leader5
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       \/ /\ LET yielded_fd1171 == (fd)[j] IN
                                                                                                                                                                                               /\ yielded_fd1171
                                                                                                                                                                                               /\ leader' = leader5
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                               /\ plog' = plog
                                                                                                           ELSE /\ IF (((m[self]).mterm) < ((currentTerm')[i])) \/ (((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state5)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                      THEN /\ \/ /\ LET value319 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value319}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                      /\ leader' = leader5
                                                                                                                                      /\ state' = state5
                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                              \/ /\ LET yielded_fd019 == (fd)[j] IN
                                                                                                                                      /\ yielded_fd019
                                                                                                                                      /\ leader' = leader5
                                                                                                                                      /\ state' = state5
                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                 /\ UNCHANGED network
                                                                                                                           /\ UNCHANGED << commitIndex, 
                                                                                                                                           log, 
                                                                                                                                           plog, 
                                                                                                                                           sm, 
                                                                                                                                           smDomain >>
                                                                                                                      ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm')[i])) /\ (((state5)[i]) = (Follower))) /\ (logOK), 
                                                                                                                                     "Failure of assertion at line 6971, column 27.")
                                                                                                                           /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                                LET value419 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                  IF ((value419).cmd) = (LogConcat)
                                                                                                                                     THEN /\ LET plog62 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value419).entries)] IN
                                                                                                                                               LET log81 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                 LET value557 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                   IF ((value557).cmd) = (LogConcat)
                                                                                                                                                      THEN /\ plog' = [plog62 EXCEPT ![i] = ((plog62)[i]) \o ((value557).entries)]
                                                                                                                                                           /\ log' = [log81 EXCEPT ![i] = ((log81)[i]) \o ((m[self]).mentries)]
                                                                                                                                                           /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                     "Failure of assertion at line 6985, column 35.")
                                                                                                                                                           /\ LET result195 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                /\ sm' = [sm EXCEPT ![i] = (result195)[1]]
                                                                                                                                                                /\ smDomain' = [smDomain EXCEPT ![i] = (result195)[2]]
                                                                                                                                                                /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                /\ \/ /\ LET value6171 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                           /\ ((network)[j]).enabled
                                                                                                                                                                           /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6171}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                           /\ leader' = leader5
                                                                                                                                                                           /\ state' = state5
                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                   \/ /\ LET yielded_fd1172 == (fd)[j] IN
                                                                                                                                                                           /\ yielded_fd1172
                                                                                                                                                                           /\ leader' = leader5
                                                                                                                                                                           /\ state' = state5
                                                                                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                      /\ UNCHANGED network
                                                                                                                                                      ELSE /\ IF ((value557).cmd) = (LogPop)
                                                                                                                                                                 THEN /\ plog' = [plog62 EXCEPT ![i] = SubSeq((plog62)[i], 1, (Len((plog62)[i])) - ((value557).cnt))]
                                                                                                                                                                      /\ log' = [log81 EXCEPT ![i] = ((log81)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                "Failure of assertion at line 7012, column 37.")
                                                                                                                                                                      /\ LET result196 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result196)[1]]
                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result196)[2]]
                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                           /\ \/ /\ LET value6172 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6172}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                      /\ leader' = leader5
                                                                                                                                                                                      /\ state' = state5
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              \/ /\ LET yielded_fd1173 == (fd)[j] IN
                                                                                                                                                                                      /\ yielded_fd1173
                                                                                                                                                                                      /\ leader' = leader5
                                                                                                                                                                                      /\ state' = state5
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                 ELSE /\ log' = [log81 EXCEPT ![i] = ((log81)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                "Failure of assertion at line 7037, column 37.")
                                                                                                                                                                      /\ LET result197 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result197)[1]]
                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result197)[2]]
                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                           /\ \/ /\ LET value6173 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6173}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                      /\ plog' = plog62
                                                                                                                                                                                      /\ leader' = leader5
                                                                                                                                                                                      /\ state' = state5
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              \/ /\ LET yielded_fd1174 == (fd)[j] IN
                                                                                                                                                                                      /\ yielded_fd1174
                                                                                                                                                                                      /\ plog' = plog62
                                                                                                                                                                                      /\ leader' = leader5
                                                                                                                                                                                      /\ state' = state5
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                     ELSE /\ IF ((value419).cmd) = (LogPop)
                                                                                                                                                THEN /\ LET plog63 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value419).cnt))] IN
                                                                                                                                                          LET log82 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                            LET value558 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                              IF ((value558).cmd) = (LogConcat)
                                                                                                                                                                 THEN /\ plog' = [plog63 EXCEPT ![i] = ((plog63)[i]) \o ((value558).entries)]
                                                                                                                                                                      /\ log' = [log82 EXCEPT ![i] = ((log82)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                      /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                "Failure of assertion at line 7075, column 37.")
                                                                                                                                                                      /\ LET result198 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                           /\ sm' = [sm EXCEPT ![i] = (result198)[1]]
                                                                                                                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = (result198)[2]]
                                                                                                                                                                           /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                           /\ \/ /\ LET value6174 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                      /\ ((network)[j]).enabled
                                                                                                                                                                                      /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                      /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6174}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                      /\ leader' = leader5
                                                                                                                                                                                      /\ state' = state5
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                              \/ /\ LET yielded_fd1175 == (fd)[j] IN
                                                                                                                                                                                      /\ yielded_fd1175
                                                                                                                                                                                      /\ leader' = leader5
                                                                                                                                                                                      /\ state' = state5
                                                                                                                                                                                      /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                 /\ UNCHANGED network
                                                                                                                                                                 ELSE /\ IF ((value558).cmd) = (LogPop)
                                                                                                                                                                            THEN /\ plog' = [plog63 EXCEPT ![i] = SubSeq((plog63)[i], 1, (Len((plog63)[i])) - ((value558).cnt))]
                                                                                                                                                                                 /\ log' = [log82 EXCEPT ![i] = ((log82)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 7102, column 39.")
                                                                                                                                                                                 /\ LET result199 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result199)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result199)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value6175 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6175}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ leader' = leader5
                                                                                                                                                                                                 /\ state' = state5
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd1176 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd1176
                                                                                                                                                                                                 /\ leader' = leader5
                                                                                                                                                                                                 /\ state' = state5
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                                            ELSE /\ log' = [log82 EXCEPT ![i] = ((log82)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                                 /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                           "Failure of assertion at line 7127, column 39.")
                                                                                                                                                                                 /\ LET result200 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                      /\ sm' = [sm EXCEPT ![i] = (result200)[1]]
                                                                                                                                                                                      /\ smDomain' = [smDomain EXCEPT ![i] = (result200)[2]]
                                                                                                                                                                                      /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                      /\ \/ /\ LET value6176 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                                 /\ ((network)[j]).enabled
                                                                                                                                                                                                 /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                                 /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6176}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                                 /\ plog' = plog63
                                                                                                                                                                                                 /\ leader' = leader5
                                                                                                                                                                                                 /\ state' = state5
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                         \/ /\ LET yielded_fd1177 == (fd)[j] IN
                                                                                                                                                                                                 /\ yielded_fd1177
                                                                                                                                                                                                 /\ plog' = plog63
                                                                                                                                                                                                 /\ leader' = leader5
                                                                                                                                                                                                 /\ state' = state5
                                                                                                                                                                                                 /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                            /\ UNCHANGED network
                                                                                                                                                ELSE /\ LET log83 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                          LET value559 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                            IF ((value559).cmd) = (LogConcat)
                                                                                                                                                               THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value559).entries)]
                                                                                                                                                                    /\ log' = [log83 EXCEPT ![i] = ((log83)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                    /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                              "Failure of assertion at line 7163, column 37.")
                                                                                                                                                                    /\ LET result201 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result201)[1]]
                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result201)[2]]
                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                         /\ \/ /\ LET value6177 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                    /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6177}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                    /\ leader' = leader5
                                                                                                                                                                                    /\ state' = state5
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                            \/ /\ LET yielded_fd1178 == (fd)[j] IN
                                                                                                                                                                                    /\ yielded_fd1178
                                                                                                                                                                                    /\ leader' = leader5
                                                                                                                                                                                    /\ state' = state5
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                               ELSE /\ IF ((value559).cmd) = (LogPop)
                                                                                                                                                                          THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value559).cnt))]
                                                                                                                                                                               /\ log' = [log83 EXCEPT ![i] = ((log83)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                         "Failure of assertion at line 7190, column 39.")
                                                                                                                                                                               /\ LET result202 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result202)[1]]
                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result202)[2]]
                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                    /\ \/ /\ LET value6178 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6178}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                               /\ leader' = leader5
                                                                                                                                                                                               /\ state' = state5
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       \/ /\ LET yielded_fd1179 == (fd)[j] IN
                                                                                                                                                                                               /\ yielded_fd1179
                                                                                                                                                                                               /\ leader' = leader5
                                                                                                                                                                                               /\ state' = state5
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                          ELSE /\ log' = [log83 EXCEPT ![i] = ((log83)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                         "Failure of assertion at line 7215, column 39.")
                                                                                                                                                                               /\ LET result203 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result203)[1]]
                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result203)[2]]
                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                    /\ \/ /\ LET value6179 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm')[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6179}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                               /\ leader' = leader5
                                                                                                                                                                                               /\ state' = state5
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       \/ /\ LET yielded_fd1180 == (fd)[j] IN
                                                                                                                                                                                               /\ yielded_fd1180
                                                                                                                                                                                               /\ leader' = leader5
                                                                                                                                                                                               /\ state' = state5
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                               /\ plog' = plog
                                                                     ELSE /\ LET i == self IN
                                                                               LET j == (m[self]).msource IN
                                                                                 LET logOK == (((m[self]).mprevLogIndex) = (0)) \/ (((((m[self]).mprevLogIndex) > (0)) /\ (((m[self]).mprevLogIndex) <= (Len((log)[i])))) /\ (((m[self]).mprevLogTerm) = ((((log)[i])[(m[self]).mprevLogIndex]).term))) IN
                                                                                   /\ Assert(((m[self]).mterm) <= ((currentTerm)[i]), 
                                                                                             "Failure of assertion at line 7255, column 19.")
                                                                                   /\ IF ((m[self]).mterm) = ((currentTerm)[i])
                                                                                         THEN /\ leader' = [leader EXCEPT ![i] = (m[self]).msource]
                                                                                              /\ LET value25 == LeaderTimeoutReset IN
                                                                                                   /\ Assert(FALSE, 
                                                                                                             "Failure of assertion at line 7259, column 23.")
                                                                                                   /\ IF (((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))
                                                                                                         THEN /\ state' = [state EXCEPT ![i] = Follower]
                                                                                                              /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                    THEN /\ \/ /\ LET value320 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                    /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value320}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                            \/ /\ LET yielded_fd020 == (fd)[j] IN
                                                                                                                                    /\ yielded_fd020
                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                               /\ UNCHANGED network
                                                                                                                         /\ UNCHANGED << commitIndex, 
                                                                                                                                         log, 
                                                                                                                                         plog, 
                                                                                                                                         sm, 
                                                                                                                                         smDomain >>
                                                                                                                    ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                                   "Failure of assertion at line 7277, column 27.")
                                                                                                                         /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                              LET value420 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                IF ((value420).cmd) = (LogConcat)
                                                                                                                                   THEN /\ LET plog64 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value420).entries)] IN
                                                                                                                                             LET log84 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                               LET value560 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                 IF ((value560).cmd) = (LogConcat)
                                                                                                                                                    THEN /\ plog' = [plog64 EXCEPT ![i] = ((plog64)[i]) \o ((value560).entries)]
                                                                                                                                                         /\ log' = [log84 EXCEPT ![i] = ((log84)[i]) \o ((m[self]).mentries)]
                                                                                                                                                         /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                   "Failure of assertion at line 7291, column 35.")
                                                                                                                                                         /\ LET result204 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                              /\ sm' = [sm EXCEPT ![i] = (result204)[1]]
                                                                                                                                                              /\ smDomain' = [smDomain EXCEPT ![i] = (result204)[2]]
                                                                                                                                                              /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                              /\ \/ /\ LET value6180 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                         /\ ((network)[j]).enabled
                                                                                                                                                                         /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                         /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6180}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                 \/ /\ LET yielded_fd1181 == (fd)[j] IN
                                                                                                                                                                         /\ yielded_fd1181
                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                    /\ UNCHANGED network
                                                                                                                                                    ELSE /\ IF ((value560).cmd) = (LogPop)
                                                                                                                                                               THEN /\ plog' = [plog64 EXCEPT ![i] = SubSeq((plog64)[i], 1, (Len((plog64)[i])) - ((value560).cnt))]
                                                                                                                                                                    /\ log' = [log84 EXCEPT ![i] = ((log84)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                    /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                              "Failure of assertion at line 7314, column 37.")
                                                                                                                                                                    /\ LET result205 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result205)[1]]
                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result205)[2]]
                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                         /\ \/ /\ LET value6181 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                    /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6181}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                            \/ /\ LET yielded_fd1182 == (fd)[j] IN
                                                                                                                                                                                    /\ yielded_fd1182
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                               ELSE /\ log' = [log84 EXCEPT ![i] = ((log84)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                    /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                              "Failure of assertion at line 7335, column 37.")
                                                                                                                                                                    /\ LET result206 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result206)[1]]
                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result206)[2]]
                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                         /\ \/ /\ LET value6182 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                    /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6182}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                    /\ plog' = plog64
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                            \/ /\ LET yielded_fd1183 == (fd)[j] IN
                                                                                                                                                                                    /\ yielded_fd1183
                                                                                                                                                                                    /\ plog' = plog64
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                   ELSE /\ IF ((value420).cmd) = (LogPop)
                                                                                                                                              THEN /\ LET plog65 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value420).cnt))] IN
                                                                                                                                                        LET log85 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                          LET value561 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                            IF ((value561).cmd) = (LogConcat)
                                                                                                                                                               THEN /\ plog' = [plog65 EXCEPT ![i] = ((plog65)[i]) \o ((value561).entries)]
                                                                                                                                                                    /\ log' = [log85 EXCEPT ![i] = ((log85)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                    /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                              "Failure of assertion at line 7369, column 37.")
                                                                                                                                                                    /\ LET result207 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result207)[1]]
                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result207)[2]]
                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                         /\ \/ /\ LET value6183 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                    /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6183}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                            \/ /\ LET yielded_fd1184 == (fd)[j] IN
                                                                                                                                                                                    /\ yielded_fd1184
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                               ELSE /\ IF ((value561).cmd) = (LogPop)
                                                                                                                                                                          THEN /\ plog' = [plog65 EXCEPT ![i] = SubSeq((plog65)[i], 1, (Len((plog65)[i])) - ((value561).cnt))]
                                                                                                                                                                               /\ log' = [log85 EXCEPT ![i] = ((log85)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                         "Failure of assertion at line 7392, column 39.")
                                                                                                                                                                               /\ LET result208 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result208)[1]]
                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result208)[2]]
                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                    /\ \/ /\ LET value6184 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6184}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       \/ /\ LET yielded_fd1185 == (fd)[j] IN
                                                                                                                                                                                               /\ yielded_fd1185
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                          ELSE /\ log' = [log85 EXCEPT ![i] = ((log85)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                         "Failure of assertion at line 7413, column 39.")
                                                                                                                                                                               /\ LET result209 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result209)[1]]
                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result209)[2]]
                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                    /\ \/ /\ LET value6185 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6185}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                               /\ plog' = plog65
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       \/ /\ LET yielded_fd1186 == (fd)[j] IN
                                                                                                                                                                                               /\ yielded_fd1186
                                                                                                                                                                                               /\ plog' = plog65
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                              ELSE /\ LET log86 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                        LET value562 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                          IF ((value562).cmd) = (LogConcat)
                                                                                                                                                             THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value562).entries)]
                                                                                                                                                                  /\ log' = [log86 EXCEPT ![i] = ((log86)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                  /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                            "Failure of assertion at line 7445, column 37.")
                                                                                                                                                                  /\ LET result210 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                       /\ sm' = [sm EXCEPT ![i] = (result210)[1]]
                                                                                                                                                                       /\ smDomain' = [smDomain EXCEPT ![i] = (result210)[2]]
                                                                                                                                                                       /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                       /\ \/ /\ LET value6186 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                  /\ ((network)[j]).enabled
                                                                                                                                                                                  /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6186}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                          \/ /\ LET yielded_fd1187 == (fd)[j] IN
                                                                                                                                                                                  /\ yielded_fd1187
                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                             /\ UNCHANGED network
                                                                                                                                                             ELSE /\ IF ((value562).cmd) = (LogPop)
                                                                                                                                                                        THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value562).cnt))]
                                                                                                                                                                             /\ log' = [log86 EXCEPT ![i] = ((log86)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                             /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                       "Failure of assertion at line 7468, column 39.")
                                                                                                                                                                             /\ LET result211 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result211)[1]]
                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result211)[2]]
                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                  /\ \/ /\ LET value6187 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                             /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6187}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     \/ /\ LET yielded_fd1188 == (fd)[j] IN
                                                                                                                                                                                             /\ yielded_fd1188
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                        ELSE /\ log' = [log86 EXCEPT ![i] = ((log86)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                             /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                       "Failure of assertion at line 7489, column 39.")
                                                                                                                                                                             /\ LET result212 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result212)[1]]
                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result212)[2]]
                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                  /\ \/ /\ LET value6188 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                             /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6188}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     \/ /\ LET yielded_fd1189 == (fd)[j] IN
                                                                                                                                                                                             /\ yielded_fd1189
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                             /\ plog' = plog
                                                                                                         ELSE /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                                    THEN /\ \/ /\ LET value321 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                    /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value321}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                            \/ /\ LET yielded_fd021 == (fd)[j] IN
                                                                                                                                    /\ yielded_fd021
                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                               /\ UNCHANGED network
                                                                                                                         /\ UNCHANGED << commitIndex, 
                                                                                                                                         log, 
                                                                                                                                         plog, 
                                                                                                                                         sm, 
                                                                                                                                         smDomain >>
                                                                                                                    ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK), 
                                                                                                                                   "Failure of assertion at line 7531, column 27.")
                                                                                                                         /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                              LET value421 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                                IF ((value421).cmd) = (LogConcat)
                                                                                                                                   THEN /\ LET plog66 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value421).entries)] IN
                                                                                                                                             LET log87 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                               LET value563 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                 IF ((value563).cmd) = (LogConcat)
                                                                                                                                                    THEN /\ plog' = [plog66 EXCEPT ![i] = ((plog66)[i]) \o ((value563).entries)]
                                                                                                                                                         /\ log' = [log87 EXCEPT ![i] = ((log87)[i]) \o ((m[self]).mentries)]
                                                                                                                                                         /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                   "Failure of assertion at line 7545, column 35.")
                                                                                                                                                         /\ LET result213 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                              /\ sm' = [sm EXCEPT ![i] = (result213)[1]]
                                                                                                                                                              /\ smDomain' = [smDomain EXCEPT ![i] = (result213)[2]]
                                                                                                                                                              /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                              /\ \/ /\ LET value6189 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                         /\ ((network)[j]).enabled
                                                                                                                                                                         /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                         /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6189}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                 \/ /\ LET yielded_fd1190 == (fd)[j] IN
                                                                                                                                                                         /\ yielded_fd1190
                                                                                                                                                                         /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                    /\ UNCHANGED network
                                                                                                                                                    ELSE /\ IF ((value563).cmd) = (LogPop)
                                                                                                                                                               THEN /\ plog' = [plog66 EXCEPT ![i] = SubSeq((plog66)[i], 1, (Len((plog66)[i])) - ((value563).cnt))]
                                                                                                                                                                    /\ log' = [log87 EXCEPT ![i] = ((log87)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                    /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                              "Failure of assertion at line 7568, column 37.")
                                                                                                                                                                    /\ LET result214 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result214)[1]]
                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result214)[2]]
                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                         /\ \/ /\ LET value6190 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                    /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6190}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                            \/ /\ LET yielded_fd1191 == (fd)[j] IN
                                                                                                                                                                                    /\ yielded_fd1191
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                               ELSE /\ log' = [log87 EXCEPT ![i] = ((log87)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                    /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                              "Failure of assertion at line 7589, column 37.")
                                                                                                                                                                    /\ LET result215 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result215)[1]]
                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result215)[2]]
                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                         /\ \/ /\ LET value6191 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                    /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6191}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                    /\ plog' = plog66
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                            \/ /\ LET yielded_fd1192 == (fd)[j] IN
                                                                                                                                                                                    /\ yielded_fd1192
                                                                                                                                                                                    /\ plog' = plog66
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                   ELSE /\ IF ((value421).cmd) = (LogPop)
                                                                                                                                              THEN /\ LET plog67 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value421).cnt))] IN
                                                                                                                                                        LET log88 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                          LET value564 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                            IF ((value564).cmd) = (LogConcat)
                                                                                                                                                               THEN /\ plog' = [plog67 EXCEPT ![i] = ((plog67)[i]) \o ((value564).entries)]
                                                                                                                                                                    /\ log' = [log88 EXCEPT ![i] = ((log88)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                    /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                              "Failure of assertion at line 7623, column 37.")
                                                                                                                                                                    /\ LET result216 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result216)[1]]
                                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result216)[2]]
                                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                         /\ \/ /\ LET value6192 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                                    /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6192}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                            \/ /\ LET yielded_fd1193 == (fd)[j] IN
                                                                                                                                                                                    /\ yielded_fd1193
                                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                                               ELSE /\ IF ((value564).cmd) = (LogPop)
                                                                                                                                                                          THEN /\ plog' = [plog67 EXCEPT ![i] = SubSeq((plog67)[i], 1, (Len((plog67)[i])) - ((value564).cnt))]
                                                                                                                                                                               /\ log' = [log88 EXCEPT ![i] = ((log88)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                         "Failure of assertion at line 7646, column 39.")
                                                                                                                                                                               /\ LET result217 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result217)[1]]
                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result217)[2]]
                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                    /\ \/ /\ LET value6193 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6193}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       \/ /\ LET yielded_fd1194 == (fd)[j] IN
                                                                                                                                                                                               /\ yielded_fd1194
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                                          ELSE /\ log' = [log88 EXCEPT ![i] = ((log88)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                         "Failure of assertion at line 7667, column 39.")
                                                                                                                                                                               /\ LET result218 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result218)[1]]
                                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result218)[2]]
                                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                    /\ \/ /\ LET value6194 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6194}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                               /\ plog' = plog67
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                       \/ /\ LET yielded_fd1195 == (fd)[j] IN
                                                                                                                                                                                               /\ yielded_fd1195
                                                                                                                                                                                               /\ plog' = plog67
                                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                              ELSE /\ LET log89 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                        LET value565 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                          IF ((value565).cmd) = (LogConcat)
                                                                                                                                                             THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value565).entries)]
                                                                                                                                                                  /\ log' = [log89 EXCEPT ![i] = ((log89)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                  /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                            "Failure of assertion at line 7699, column 37.")
                                                                                                                                                                  /\ LET result219 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                       /\ sm' = [sm EXCEPT ![i] = (result219)[1]]
                                                                                                                                                                       /\ smDomain' = [smDomain EXCEPT ![i] = (result219)[2]]
                                                                                                                                                                       /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                       /\ \/ /\ LET value6195 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                  /\ ((network)[j]).enabled
                                                                                                                                                                                  /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                  /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6195}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                          \/ /\ LET yielded_fd1196 == (fd)[j] IN
                                                                                                                                                                                  /\ yielded_fd1196
                                                                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                             /\ UNCHANGED network
                                                                                                                                                             ELSE /\ IF ((value565).cmd) = (LogPop)
                                                                                                                                                                        THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value565).cnt))]
                                                                                                                                                                             /\ log' = [log89 EXCEPT ![i] = ((log89)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                             /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                       "Failure of assertion at line 7722, column 39.")
                                                                                                                                                                             /\ LET result220 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result220)[1]]
                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result220)[2]]
                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                  /\ \/ /\ LET value6196 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                             /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6196}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     \/ /\ LET yielded_fd1197 == (fd)[j] IN
                                                                                                                                                                                             /\ yielded_fd1197
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                        ELSE /\ log' = [log89 EXCEPT ![i] = ((log89)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                             /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                       "Failure of assertion at line 7743, column 39.")
                                                                                                                                                                             /\ LET result221 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result221)[1]]
                                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result221)[2]]
                                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                                  /\ \/ /\ LET value6197 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                                             /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6197}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     \/ /\ LET yielded_fd1198 == (fd)[j] IN
                                                                                                                                                                                             /\ yielded_fd1198
                                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                                             /\ plog' = plog
                                                                                                              /\ state' = state
                                                                                         ELSE /\ IF (((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Candidate))
                                                                                                    THEN /\ state' = [state EXCEPT ![i] = Follower]
                                                                                                         /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                               THEN /\ \/ /\ LET value322 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value322}), enabled |-> ((network)[j]).enabled]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                       \/ /\ LET yielded_fd022 == (fd)[j] IN
                                                                                                                               /\ yielded_fd022
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                          /\ UNCHANGED network
                                                                                                                    /\ UNCHANGED << commitIndex, 
                                                                                                                                    log, 
                                                                                                                                    plog, 
                                                                                                                                    sm, 
                                                                                                                                    smDomain >>
                                                                                                               ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state')[i]) = (Follower))) /\ (logOK), 
                                                                                                                              "Failure of assertion at line 7789, column 25.")
                                                                                                                    /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                         LET value422 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                           IF ((value422).cmd) = (LogConcat)
                                                                                                                              THEN /\ LET plog68 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value422).entries)] IN
                                                                                                                                        LET log90 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                          LET value566 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                            IF ((value566).cmd) = (LogConcat)
                                                                                                                                               THEN /\ plog' = [plog68 EXCEPT ![i] = ((plog68)[i]) \o ((value566).entries)]
                                                                                                                                                    /\ log' = [log90 EXCEPT ![i] = ((log90)[i]) \o ((m[self]).mentries)]
                                                                                                                                                    /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                              "Failure of assertion at line 7803, column 33.")
                                                                                                                                                    /\ LET result222 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result222)[1]]
                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result222)[2]]
                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                         /\ \/ /\ LET value6198 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                    /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6198}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                            \/ /\ LET yielded_fd1199 == (fd)[j] IN
                                                                                                                                                                    /\ yielded_fd1199
                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                               ELSE /\ IF ((value566).cmd) = (LogPop)
                                                                                                                                                          THEN /\ plog' = [plog68 EXCEPT ![i] = SubSeq((plog68)[i], 1, (Len((plog68)[i])) - ((value566).cnt))]
                                                                                                                                                               /\ log' = [log90 EXCEPT ![i] = ((log90)[i]) \o ((m[self]).mentries)]
                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                         "Failure of assertion at line 7826, column 35.")
                                                                                                                                                               /\ LET result223 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result223)[1]]
                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result223)[2]]
                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                    /\ \/ /\ LET value6199 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6199}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                       \/ /\ LET yielded_fd1200 == (fd)[j] IN
                                                                                                                                                                               /\ yielded_fd1200
                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                          ELSE /\ log' = [log90 EXCEPT ![i] = ((log90)[i]) \o ((m[self]).mentries)]
                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                         "Failure of assertion at line 7847, column 35.")
                                                                                                                                                               /\ LET result224 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result224)[1]]
                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result224)[2]]
                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                    /\ \/ /\ LET value6200 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6200}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                               /\ plog' = plog68
                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                       \/ /\ LET yielded_fd1201 == (fd)[j] IN
                                                                                                                                                                               /\ yielded_fd1201
                                                                                                                                                                               /\ plog' = plog68
                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                              ELSE /\ IF ((value422).cmd) = (LogPop)
                                                                                                                                         THEN /\ LET plog69 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value422).cnt))] IN
                                                                                                                                                   LET log91 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                     LET value567 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                       IF ((value567).cmd) = (LogConcat)
                                                                                                                                                          THEN /\ plog' = [plog69 EXCEPT ![i] = ((plog69)[i]) \o ((value567).entries)]
                                                                                                                                                               /\ log' = [log91 EXCEPT ![i] = ((log91)[i]) \o ((m[self]).mentries)]
                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                         "Failure of assertion at line 7881, column 35.")
                                                                                                                                                               /\ LET result225 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result225)[1]]
                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result225)[2]]
                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                    /\ \/ /\ LET value6201 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6201}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                       \/ /\ LET yielded_fd1202 == (fd)[j] IN
                                                                                                                                                                               /\ yielded_fd1202
                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                          ELSE /\ IF ((value567).cmd) = (LogPop)
                                                                                                                                                                     THEN /\ plog' = [plog69 EXCEPT ![i] = SubSeq((plog69)[i], 1, (Len((plog69)[i])) - ((value567).cnt))]
                                                                                                                                                                          /\ log' = [log91 EXCEPT ![i] = ((log91)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                          /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                    "Failure of assertion at line 7904, column 37.")
                                                                                                                                                                          /\ LET result226 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result226)[1]]
                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result226)[2]]
                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                               /\ \/ /\ LET value6202 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6202}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  \/ /\ LET yielded_fd1203 == (fd)[j] IN
                                                                                                                                                                                          /\ yielded_fd1203
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                     ELSE /\ log' = [log91 EXCEPT ![i] = ((log91)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                          /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                    "Failure of assertion at line 7925, column 37.")
                                                                                                                                                                          /\ LET result227 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result227)[1]]
                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result227)[2]]
                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                               /\ \/ /\ LET value6203 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6203}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                          /\ plog' = plog69
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  \/ /\ LET yielded_fd1204 == (fd)[j] IN
                                                                                                                                                                                          /\ yielded_fd1204
                                                                                                                                                                                          /\ plog' = plog69
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                         ELSE /\ LET log92 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                   LET value568 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                     IF ((value568).cmd) = (LogConcat)
                                                                                                                                                        THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value568).entries)]
                                                                                                                                                             /\ log' = [log92 EXCEPT ![i] = ((log92)[i]) \o ((m[self]).mentries)]
                                                                                                                                                             /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                       "Failure of assertion at line 7957, column 35.")
                                                                                                                                                             /\ LET result228 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result228)[1]]
                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result228)[2]]
                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                  /\ \/ /\ LET value6204 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                             /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6204}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                     \/ /\ LET yielded_fd1205 == (fd)[j] IN
                                                                                                                                                                             /\ yielded_fd1205
                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                        ELSE /\ IF ((value568).cmd) = (LogPop)
                                                                                                                                                                   THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value568).cnt))]
                                                                                                                                                                        /\ log' = [log92 EXCEPT ![i] = ((log92)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                  "Failure of assertion at line 7980, column 37.")
                                                                                                                                                                        /\ LET result229 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result229)[1]]
                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result229)[2]]
                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                             /\ \/ /\ LET value6205 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6205}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                \/ /\ LET yielded_fd1206 == (fd)[j] IN
                                                                                                                                                                                        /\ yielded_fd1206
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                   ELSE /\ log' = [log92 EXCEPT ![i] = ((log92)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                  "Failure of assertion at line 8001, column 37.")
                                                                                                                                                                        /\ LET result230 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result230)[1]]
                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result230)[2]]
                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                             /\ \/ /\ LET value6206 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6206}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                \/ /\ LET yielded_fd1207 == (fd)[j] IN
                                                                                                                                                                                        /\ yielded_fd1207
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                        /\ plog' = plog
                                                                                                    ELSE /\ IF (((m[self]).mterm) < ((currentTerm)[i])) \/ (((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (~ (logOK)))
                                                                                                               THEN /\ \/ /\ LET value323 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> FALSE, mmatchIndex |-> 0, msource |-> i, mdest |-> j] IN
                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value323}), enabled |-> ((network)[j]).enabled]]
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                       \/ /\ LET yielded_fd023 == (fd)[j] IN
                                                                                                                               /\ yielded_fd023
                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                          /\ UNCHANGED network
                                                                                                                    /\ UNCHANGED << commitIndex, 
                                                                                                                                    log, 
                                                                                                                                    plog, 
                                                                                                                                    sm, 
                                                                                                                                    smDomain >>
                                                                                                               ELSE /\ Assert(((((m[self]).mterm) = ((currentTerm)[i])) /\ (((state)[i]) = (Follower))) /\ (logOK), 
                                                                                                                              "Failure of assertion at line 8043, column 25.")
                                                                                                                    /\ LET index == ((m[self]).mprevLogIndex) + (1) IN
                                                                                                                         LET value423 == [cmd |-> LogPop, cnt |-> (Len((log)[i])) - ((m[self]).mprevLogIndex)] IN
                                                                                                                           IF ((value423).cmd) = (LogConcat)
                                                                                                                              THEN /\ LET plog70 == [plog EXCEPT ![i] = ((plog)[i]) \o ((value423).entries)] IN
                                                                                                                                        LET log93 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                          LET value569 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                            IF ((value569).cmd) = (LogConcat)
                                                                                                                                               THEN /\ plog' = [plog70 EXCEPT ![i] = ((plog70)[i]) \o ((value569).entries)]
                                                                                                                                                    /\ log' = [log93 EXCEPT ![i] = ((log93)[i]) \o ((m[self]).mentries)]
                                                                                                                                                    /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                              "Failure of assertion at line 8057, column 33.")
                                                                                                                                                    /\ LET result231 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                         /\ sm' = [sm EXCEPT ![i] = (result231)[1]]
                                                                                                                                                         /\ smDomain' = [smDomain EXCEPT ![i] = (result231)[2]]
                                                                                                                                                         /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                         /\ \/ /\ LET value6207 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                    /\ ((network)[j]).enabled
                                                                                                                                                                    /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                    /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6207}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                            \/ /\ LET yielded_fd1208 == (fd)[j] IN
                                                                                                                                                                    /\ yielded_fd1208
                                                                                                                                                                    /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                               /\ UNCHANGED network
                                                                                                                                               ELSE /\ IF ((value569).cmd) = (LogPop)
                                                                                                                                                          THEN /\ plog' = [plog70 EXCEPT ![i] = SubSeq((plog70)[i], 1, (Len((plog70)[i])) - ((value569).cnt))]
                                                                                                                                                               /\ log' = [log93 EXCEPT ![i] = ((log93)[i]) \o ((m[self]).mentries)]
                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                         "Failure of assertion at line 8080, column 35.")
                                                                                                                                                               /\ LET result232 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result232)[1]]
                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result232)[2]]
                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                    /\ \/ /\ LET value6208 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6208}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                       \/ /\ LET yielded_fd1209 == (fd)[j] IN
                                                                                                                                                                               /\ yielded_fd1209
                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                          ELSE /\ log' = [log93 EXCEPT ![i] = ((log93)[i]) \o ((m[self]).mentries)]
                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                         "Failure of assertion at line 8101, column 35.")
                                                                                                                                                               /\ LET result233 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result233)[1]]
                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result233)[2]]
                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                    /\ \/ /\ LET value6209 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6209}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                               /\ plog' = plog70
                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                       \/ /\ LET yielded_fd1210 == (fd)[j] IN
                                                                                                                                                                               /\ yielded_fd1210
                                                                                                                                                                               /\ plog' = plog70
                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                              ELSE /\ IF ((value423).cmd) = (LogPop)
                                                                                                                                         THEN /\ LET plog71 == [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value423).cnt))] IN
                                                                                                                                                   LET log94 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                     LET value570 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                       IF ((value570).cmd) = (LogConcat)
                                                                                                                                                          THEN /\ plog' = [plog71 EXCEPT ![i] = ((plog71)[i]) \o ((value570).entries)]
                                                                                                                                                               /\ log' = [log94 EXCEPT ![i] = ((log94)[i]) \o ((m[self]).mentries)]
                                                                                                                                                               /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                         "Failure of assertion at line 8135, column 35.")
                                                                                                                                                               /\ LET result234 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                    /\ sm' = [sm EXCEPT ![i] = (result234)[1]]
                                                                                                                                                                    /\ smDomain' = [smDomain EXCEPT ![i] = (result234)[2]]
                                                                                                                                                                    /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                    /\ \/ /\ LET value6210 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                               /\ ((network)[j]).enabled
                                                                                                                                                                               /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                               /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6210}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                       \/ /\ LET yielded_fd1211 == (fd)[j] IN
                                                                                                                                                                               /\ yielded_fd1211
                                                                                                                                                                               /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                          /\ UNCHANGED network
                                                                                                                                                          ELSE /\ IF ((value570).cmd) = (LogPop)
                                                                                                                                                                     THEN /\ plog' = [plog71 EXCEPT ![i] = SubSeq((plog71)[i], 1, (Len((plog71)[i])) - ((value570).cnt))]
                                                                                                                                                                          /\ log' = [log94 EXCEPT ![i] = ((log94)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                          /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                    "Failure of assertion at line 8158, column 37.")
                                                                                                                                                                          /\ LET result235 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result235)[1]]
                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result235)[2]]
                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                               /\ \/ /\ LET value6211 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6211}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  \/ /\ LET yielded_fd1212 == (fd)[j] IN
                                                                                                                                                                                          /\ yielded_fd1212
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                                                     ELSE /\ log' = [log94 EXCEPT ![i] = ((log94)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                          /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                    "Failure of assertion at line 8179, column 37.")
                                                                                                                                                                          /\ LET result236 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                               /\ sm' = [sm EXCEPT ![i] = (result236)[1]]
                                                                                                                                                                               /\ smDomain' = [smDomain EXCEPT ![i] = (result236)[2]]
                                                                                                                                                                               /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                               /\ \/ /\ LET value6212 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                          /\ ((network)[j]).enabled
                                                                                                                                                                                          /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                          /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6212}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                          /\ plog' = plog71
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                  \/ /\ LET yielded_fd1213 == (fd)[j] IN
                                                                                                                                                                                          /\ yielded_fd1213
                                                                                                                                                                                          /\ plog' = plog71
                                                                                                                                                                                          /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                     /\ UNCHANGED network
                                                                                                                                         ELSE /\ LET log95 == [log EXCEPT ![i] = SubSeq((log)[i], 1, (m[self]).mprevLogIndex)] IN
                                                                                                                                                   LET value571 == [cmd |-> LogConcat, entries |-> (m[self]).mentries] IN
                                                                                                                                                     IF ((value571).cmd) = (LogConcat)
                                                                                                                                                        THEN /\ plog' = [plog EXCEPT ![i] = ((plog)[i]) \o ((value571).entries)]
                                                                                                                                                             /\ log' = [log95 EXCEPT ![i] = ((log95)[i]) \o ((m[self]).mentries)]
                                                                                                                                                             /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                       "Failure of assertion at line 8211, column 35.")
                                                                                                                                                             /\ LET result237 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                  /\ sm' = [sm EXCEPT ![i] = (result237)[1]]
                                                                                                                                                                  /\ smDomain' = [smDomain EXCEPT ![i] = (result237)[2]]
                                                                                                                                                                  /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                  /\ \/ /\ LET value6213 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                             /\ ((network)[j]).enabled
                                                                                                                                                                             /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                             /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6213}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                     \/ /\ LET yielded_fd1214 == (fd)[j] IN
                                                                                                                                                                             /\ yielded_fd1214
                                                                                                                                                                             /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                        /\ UNCHANGED network
                                                                                                                                                        ELSE /\ IF ((value571).cmd) = (LogPop)
                                                                                                                                                                   THEN /\ plog' = [plog EXCEPT ![i] = SubSeq((plog)[i], 1, (Len((plog)[i])) - ((value571).cnt))]
                                                                                                                                                                        /\ log' = [log95 EXCEPT ![i] = ((log95)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                  "Failure of assertion at line 8234, column 37.")
                                                                                                                                                                        /\ LET result238 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result238)[1]]
                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result238)[2]]
                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                             /\ \/ /\ LET value6214 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6214}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                \/ /\ LET yielded_fd1215 == (fd)[j] IN
                                                                                                                                                                                        /\ yielded_fd1215
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                   ELSE /\ log' = [log95 EXCEPT ![i] = ((log95)[i]) \o ((m[self]).mentries)]
                                                                                                                                                                        /\ Assert(((m[self]).mcommitIndex) <= (Len((log')[i])), 
                                                                                                                                                                                  "Failure of assertion at line 8255, column 37.")
                                                                                                                                                                        /\ LET result239 == ApplyLog((log')[i], ((commitIndex)[i]) + (1), (m[self]).mcommitIndex, (sm)[i], (smDomain)[i]) IN
                                                                                                                                                                             /\ sm' = [sm EXCEPT ![i] = (result239)[1]]
                                                                                                                                                                             /\ smDomain' = [smDomain EXCEPT ![i] = (result239)[2]]
                                                                                                                                                                             /\ commitIndex' = [commitIndex EXCEPT ![i] = Max({(commitIndex)[i], (m[self]).mcommitIndex})]
                                                                                                                                                                             /\ \/ /\ LET value6215 == [mtype |-> AppendEntriesResponse, mterm |-> (currentTerm)[i], msuccess |-> TRUE, mmatchIndex |-> ((m[self]).mprevLogIndex) + (Len((m[self]).mentries)), msource |-> i, mdest |-> j] IN
                                                                                                                                                                                        /\ ((network)[j]).enabled
                                                                                                                                                                                        /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                                                                                                        /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value6215}), enabled |-> ((network)[j]).enabled]]
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                \/ /\ LET yielded_fd1216 == (fd)[j] IN
                                                                                                                                                                                        /\ yielded_fd1216
                                                                                                                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                                                                                   /\ UNCHANGED network
                                                                                                                                                                        /\ plog' = plog
                                                                                                         /\ state' = state
                                                                                              /\ UNCHANGED leader
                                                                          /\ UNCHANGED << currentTerm, 
                                                                                          votedFor >>
                                                               /\ UNCHANGED << nextIndex, 
                                                                               matchIndex, 
                                                                               appendEntriesCh >>
                                                          ELSE /\ IF ((m[self]).mtype) = (AppendEntriesResponse)
                                                                     THEN /\ IF ((m[self]).mterm) > ((currentTerm)[self])
                                                                                THEN /\ currentTerm' = [currentTerm EXCEPT ![self] = (m[self]).mterm]
                                                                                     /\ state' = [state EXCEPT ![self] = Follower]
                                                                                     /\ votedFor' = [votedFor EXCEPT ![self] = Nil]
                                                                                     /\ leader' = [leader EXCEPT ![self] = Nil]
                                                                                     /\ IF ((m[self]).mterm) < ((currentTerm')[self])
                                                                                           THEN /\ TRUE
                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                /\ UNCHANGED << nextIndex, 
                                                                                                                matchIndex >>
                                                                                           ELSE /\ LET i == self IN
                                                                                                     LET j == (m[self]).msource IN
                                                                                                       /\ Assert(((m[self]).mterm) = ((currentTerm')[i]), 
                                                                                                                 "Failure of assertion at line 8300, column 23.")
                                                                                                       /\ IF (m[self]).msuccess
                                                                                                             THEN /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m[self]).mmatchIndex) + (1)]]
                                                                                                                  /\ matchIndex' = [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m[self]).mmatchIndex]]
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]]
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                  /\ UNCHANGED matchIndex
                                                                                ELSE /\ IF ((m[self]).mterm) < ((currentTerm)[self])
                                                                                           THEN /\ TRUE
                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                /\ UNCHANGED << nextIndex, 
                                                                                                                matchIndex >>
                                                                                           ELSE /\ LET i == self IN
                                                                                                     LET j == (m[self]).msource IN
                                                                                                       /\ Assert(((m[self]).mterm) = ((currentTerm)[i]), 
                                                                                                                 "Failure of assertion at line 8320, column 23.")
                                                                                                       /\ IF (m[self]).msuccess
                                                                                                             THEN /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = ((m[self]).mmatchIndex) + (1)]]
                                                                                                                  /\ matchIndex' = [matchIndex EXCEPT ![i] = [(matchIndex)[i] EXCEPT ![j] = (m[self]).mmatchIndex]]
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ nextIndex' = [nextIndex EXCEPT ![i] = [(nextIndex)[i] EXCEPT ![j] = Max({(((nextIndex)[i])[j]) - (1), 1})]]
                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                  /\ UNCHANGED matchIndex
                                                                                     /\ UNCHANGED << state, 
                                                                                                     currentTerm, 
                                                                                                     votedFor, 
                                                                                                     leader >>
                                                                          /\ UNCHANGED << network, 
                                                                                          log, 
                                                                                          plog, 
                                                                                          appendEntriesCh >>
                                                                     ELSE /\ IF (((m[self]).mtype) = (ClientPutRequest)) \/ (((m[self]).mtype) = (ClientGetRequest))
                                                                                THEN /\ IF ((state)[self]) = (Leader)
                                                                                           THEN /\ LET entry == [term |-> (currentTerm)[self], cmd |-> (m[self]).mcmd, client |-> (m[self]).msource] IN
                                                                                                     /\ log' = [log EXCEPT ![self] = Append((log)[self], entry)]
                                                                                                     /\ LET value72 == [cmd |-> LogConcat, entries |-> <<entry>>] IN
                                                                                                          IF ((value72).cmd) = (LogConcat)
                                                                                                             THEN /\ plog' = [plog EXCEPT ![self] = ((plog)[self]) \o ((value72).entries)]
                                                                                                                  /\ LET value86 == TRUE IN
                                                                                                                       /\ appendEntriesCh' = [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value86)]
                                                                                                                       /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                             ELSE /\ IF ((value72).cmd) = (LogPop)
                                                                                                                        THEN /\ plog' = [plog EXCEPT ![self] = SubSeq((plog)[self], 1, (Len((plog)[self])) - ((value72).cnt))]
                                                                                                                             /\ LET value87 == TRUE IN
                                                                                                                                  /\ appendEntriesCh' = [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value87)]
                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                        ELSE /\ LET value88 == TRUE IN
                                                                                                                                  /\ appendEntriesCh' = [appendEntriesCh EXCEPT ![self] = Append((appendEntriesCh)[self], value88)]
                                                                                                                                  /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                                             /\ plog' = plog
                                                                                                /\ UNCHANGED network
                                                                                           ELSE /\ LET i == self IN
                                                                                                     LET j == (m[self]).msource IN
                                                                                                       LET respType == IF (((m[self]).mcmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse IN
                                                                                                         LET value92 == [mtype |-> respType, msuccess |-> FALSE, mresponse |-> [idx |-> ((m[self]).mcmd).idx, key |-> ((m[self]).mcmd).key], mleaderHint |-> (leader)[i], msource |-> i, mdest |-> j] IN
                                                                                                           /\ ((network)[j]).enabled
                                                                                                           /\ (Cardinality(((network)[j]).queue)) < (BufferSize)
                                                                                                           /\ network' = [network EXCEPT ![j] = [queue |-> (((network)[j]).queue) \union ({value92}), enabled |-> ((network)[j]).enabled]]
                                                                                                           /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                                /\ UNCHANGED << log, 
                                                                                                                plog, 
                                                                                                                appendEntriesCh >>
                                                                                ELSE /\ pc' = [pc EXCEPT ![self] = "serverLoop"]
                                                                                     /\ UNCHANGED << network, 
                                                                                                     log, 
                                                                                                     plog, 
                                                                                                     appendEntriesCh >>
                                                                          /\ UNCHANGED << state, 
                                                                                          currentTerm, 
                                                                                          nextIndex, 
                                                                                          matchIndex, 
                                                                                          votedFor, 
                                                                                          leader >>
                                                               /\ UNCHANGED << commitIndex, 
                                                                               sm, 
                                                                               smDomain >>
                                                    /\ UNCHANGED << votesResponded, 
                                                                    votesGranted, 
                                                                    becomeLeaderCh >>
                   /\ UNCHANGED << fd, leaderTimeout, reqCh, respCh, 
                                   requestVoteSrvId, appendEntriesSrvId, 
                                   advanceCommitIndexSrvId, becomeLeaderSrvId, 
                                   crasherSrvId, idx, m, srvId, idx0, srvId0, 
                                   idx1, srvId1, newCommitIndex, srvId2, 
                                   srvId3, leader0, req, resp, reqIdx, timeout, 
                                   srvId4 >>

s0(self) == serverLoop(self) \/ handleMsg(self)

serverRequestVoteLoop(self) == /\ pc[self] = "serverRequestVoteLoop"
                               /\ IF TRUE
                                     THEN /\ IF ExploreFail
                                                THEN /\ LET yielded_network20 == ((network)[srvId0[self]]).enabled IN
                                                          IF ~ (yielded_network20)
                                                             THEN /\ FALSE
                                                                  /\ \/ /\ LET yielded_leaderTimeout1 == TRUE IN
                                                                             /\ yielded_leaderTimeout1
                                                                             /\ \E len00 \in (0) .. (Cardinality(((network)[srvId0[self]]).queue)):
                                                                                  LET yielded_network30 == len00 IN
                                                                                    /\ (yielded_network30) = (0)
                                                                                    /\ ((state)[srvId0[self]]) \in ({Follower, Candidate})
                                                                                    /\ LET i3 == srvId0[self] IN
                                                                                         /\ state' = [state EXCEPT ![i3] = Candidate]
                                                                                         /\ currentTerm' = [currentTerm EXCEPT ![i3] = ((currentTerm)[i3]) + (1)]
                                                                                         /\ votedFor' = [votedFor EXCEPT ![i3] = i3]
                                                                                         /\ votesResponded' = [votesResponded EXCEPT ![i3] = {i3}]
                                                                                         /\ votesGranted' = [votesGranted EXCEPT ![i3] = {i3}]
                                                                                         /\ leader' = [leader EXCEPT ![i3] = Nil]
                                                                                         /\ IF Debug
                                                                                               THEN /\ PrintT(<<"ServerTimeout", i3, (currentTerm')[i3]>>)
                                                                                                    /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                                                    /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                                               ELSE /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                                                    /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                     \/ /\ LET yielded_leaderTimeout00 == FALSE IN
                                                                             /\ yielded_leaderTimeout00
                                                                             /\ \E len01 \in (0) .. (Cardinality(((network)[srvId0[self]]).queue)):
                                                                                  LET yielded_network31 == len01 IN
                                                                                    /\ (yielded_network31) = (0)
                                                                                    /\ ((state)[srvId0[self]]) \in ({Follower, Candidate})
                                                                                    /\ LET i4 == srvId0[self] IN
                                                                                         /\ state' = [state EXCEPT ![i4] = Candidate]
                                                                                         /\ currentTerm' = [currentTerm EXCEPT ![i4] = ((currentTerm)[i4]) + (1)]
                                                                                         /\ votedFor' = [votedFor EXCEPT ![i4] = i4]
                                                                                         /\ votesResponded' = [votesResponded EXCEPT ![i4] = {i4}]
                                                                                         /\ votesGranted' = [votesGranted EXCEPT ![i4] = {i4}]
                                                                                         /\ leader' = [leader EXCEPT ![i4] = Nil]
                                                                                         /\ IF Debug
                                                                                               THEN /\ PrintT(<<"ServerTimeout", i4, (currentTerm')[i4]>>)
                                                                                                    /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                                                    /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                                               ELSE /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                                                    /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                             ELSE /\ \/ /\ LET yielded_leaderTimeout2 == TRUE IN
                                                                             /\ yielded_leaderTimeout2
                                                                             /\ \E len02 \in (0) .. (Cardinality(((network)[srvId0[self]]).queue)):
                                                                                  LET yielded_network32 == len02 IN
                                                                                    /\ (yielded_network32) = (0)
                                                                                    /\ ((state)[srvId0[self]]) \in ({Follower, Candidate})
                                                                                    /\ LET i5 == srvId0[self] IN
                                                                                         /\ state' = [state EXCEPT ![i5] = Candidate]
                                                                                         /\ currentTerm' = [currentTerm EXCEPT ![i5] = ((currentTerm)[i5]) + (1)]
                                                                                         /\ votedFor' = [votedFor EXCEPT ![i5] = i5]
                                                                                         /\ votesResponded' = [votesResponded EXCEPT ![i5] = {i5}]
                                                                                         /\ votesGranted' = [votesGranted EXCEPT ![i5] = {i5}]
                                                                                         /\ leader' = [leader EXCEPT ![i5] = Nil]
                                                                                         /\ IF Debug
                                                                                               THEN /\ PrintT(<<"ServerTimeout", i5, (currentTerm')[i5]>>)
                                                                                                    /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                                                    /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                                               ELSE /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                                                    /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                     \/ /\ LET yielded_leaderTimeout01 == FALSE IN
                                                                             /\ yielded_leaderTimeout01
                                                                             /\ \E len03 \in (0) .. (Cardinality(((network)[srvId0[self]]).queue)):
                                                                                  LET yielded_network33 == len03 IN
                                                                                    /\ (yielded_network33) = (0)
                                                                                    /\ ((state)[srvId0[self]]) \in ({Follower, Candidate})
                                                                                    /\ LET i6 == srvId0[self] IN
                                                                                         /\ state' = [state EXCEPT ![i6] = Candidate]
                                                                                         /\ currentTerm' = [currentTerm EXCEPT ![i6] = ((currentTerm)[i6]) + (1)]
                                                                                         /\ votedFor' = [votedFor EXCEPT ![i6] = i6]
                                                                                         /\ votesResponded' = [votesResponded EXCEPT ![i6] = {i6}]
                                                                                         /\ votesGranted' = [votesGranted EXCEPT ![i6] = {i6}]
                                                                                         /\ leader' = [leader EXCEPT ![i6] = Nil]
                                                                                         /\ IF Debug
                                                                                               THEN /\ PrintT(<<"ServerTimeout", i6, (currentTerm')[i6]>>)
                                                                                                    /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                                                    /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                                               ELSE /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                                                    /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                ELSE /\ \/ /\ LET yielded_leaderTimeout3 == TRUE IN
                                                                /\ yielded_leaderTimeout3
                                                                /\ \E len04 \in (0) .. (Cardinality(((network)[srvId0[self]]).queue)):
                                                                     LET yielded_network34 == len04 IN
                                                                       /\ (yielded_network34) = (0)
                                                                       /\ ((state)[srvId0[self]]) \in ({Follower, Candidate})
                                                                       /\ LET i7 == srvId0[self] IN
                                                                            /\ state' = [state EXCEPT ![i7] = Candidate]
                                                                            /\ currentTerm' = [currentTerm EXCEPT ![i7] = ((currentTerm)[i7]) + (1)]
                                                                            /\ votedFor' = [votedFor EXCEPT ![i7] = i7]
                                                                            /\ votesResponded' = [votesResponded EXCEPT ![i7] = {i7}]
                                                                            /\ votesGranted' = [votesGranted EXCEPT ![i7] = {i7}]
                                                                            /\ leader' = [leader EXCEPT ![i7] = Nil]
                                                                            /\ IF Debug
                                                                                  THEN /\ PrintT(<<"ServerTimeout", i7, (currentTerm')[i7]>>)
                                                                                       /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                                       /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                                  ELSE /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                                       /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                        \/ /\ LET yielded_leaderTimeout02 == FALSE IN
                                                                /\ yielded_leaderTimeout02
                                                                /\ \E len05 \in (0) .. (Cardinality(((network)[srvId0[self]]).queue)):
                                                                     LET yielded_network35 == len05 IN
                                                                       /\ (yielded_network35) = (0)
                                                                       /\ ((state)[srvId0[self]]) \in ({Follower, Candidate})
                                                                       /\ LET i8 == srvId0[self] IN
                                                                            /\ state' = [state EXCEPT ![i8] = Candidate]
                                                                            /\ currentTerm' = [currentTerm EXCEPT ![i8] = ((currentTerm)[i8]) + (1)]
                                                                            /\ votedFor' = [votedFor EXCEPT ![i8] = i8]
                                                                            /\ votesResponded' = [votesResponded EXCEPT ![i8] = {i8}]
                                                                            /\ votesGranted' = [votesGranted EXCEPT ![i8] = {i8}]
                                                                            /\ leader' = [leader EXCEPT ![i8] = Nil]
                                                                            /\ IF Debug
                                                                                  THEN /\ PrintT(<<"ServerTimeout", i8, (currentTerm')[i8]>>)
                                                                                       /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                                       /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                                  ELSE /\ idx0' = [idx0 EXCEPT ![self] = 1]
                                                                                       /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                     ELSE /\ pc' = [pc EXCEPT ![self] = "Done"]
                                          /\ UNCHANGED << state, currentTerm, 
                                                          votedFor, 
                                                          votesResponded, 
                                                          votesGranted, leader, 
                                                          idx0 >>
                               /\ UNCHANGED << network, fd, commitIndex, 
                                               nextIndex, matchIndex, log, 
                                               plog, sm, smDomain, 
                                               leaderTimeout, appendEntriesCh, 
                                               becomeLeaderCh, reqCh, respCh, 
                                               requestVoteSrvId, 
                                               appendEntriesSrvId, 
                                               advanceCommitIndexSrvId, 
                                               becomeLeaderSrvId, crasherSrvId, 
                                               idx, m, srvId, srvId0, idx1, 
                                               srvId1, newCommitIndex, srvId2, 
                                               srvId3, leader0, req, resp, 
                                               reqIdx, timeout, srvId4 >>

requestVoteLoop(self) == /\ pc[self] = "requestVoteLoop"
                         /\ IF (idx0[self]) <= (NumServers)
                               THEN /\ IF ExploreFail
                                          THEN /\ LET yielded_network40 == ((network)[srvId0[self]]).enabled IN
                                                    IF ~ (yielded_network40)
                                                       THEN /\ FALSE
                                                            /\ IF (idx0[self]) # (srvId0[self])
                                                                  THEN /\ \/ /\ LET value100 == [mtype |-> RequestVoteRequest, mterm |-> (currentTerm)[srvId0[self]], mlastLogTerm |-> LastTerm((log)[srvId0[self]]), mlastLogIndex |-> Len((log)[srvId0[self]]), msource |-> srvId0[self], mdest |-> idx0[self]] IN
                                                                                  /\ ((network)[idx0[self]]).enabled
                                                                                  /\ (Cardinality(((network)[idx0[self]]).queue)) < (BufferSize)
                                                                                  /\ network' = [network EXCEPT ![idx0[self]] = [queue |-> (((network)[idx0[self]]).queue) \union ({value100}), enabled |-> ((network)[idx0[self]]).enabled]]
                                                                                  /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                                                  /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                          \/ /\ LET yielded_fd28 == (fd)[idx0[self]] IN
                                                                                  /\ yielded_fd28
                                                                                  /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                                                  /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                             /\ UNCHANGED network
                                                                  ELSE /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                                       /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                       /\ UNCHANGED network
                                                       ELSE /\ IF (idx0[self]) # (srvId0[self])
                                                                  THEN /\ \/ /\ LET value101 == [mtype |-> RequestVoteRequest, mterm |-> (currentTerm)[srvId0[self]], mlastLogTerm |-> LastTerm((log)[srvId0[self]]), mlastLogIndex |-> Len((log)[srvId0[self]]), msource |-> srvId0[self], mdest |-> idx0[self]] IN
                                                                                  /\ ((network)[idx0[self]]).enabled
                                                                                  /\ (Cardinality(((network)[idx0[self]]).queue)) < (BufferSize)
                                                                                  /\ network' = [network EXCEPT ![idx0[self]] = [queue |-> (((network)[idx0[self]]).queue) \union ({value101}), enabled |-> ((network)[idx0[self]]).enabled]]
                                                                                  /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                                                  /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                          \/ /\ LET yielded_fd29 == (fd)[idx0[self]] IN
                                                                                  /\ yielded_fd29
                                                                                  /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                                                  /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                             /\ UNCHANGED network
                                                                  ELSE /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                                       /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                       /\ UNCHANGED network
                                          ELSE /\ IF (idx0[self]) # (srvId0[self])
                                                     THEN /\ \/ /\ LET value102 == [mtype |-> RequestVoteRequest, mterm |-> (currentTerm)[srvId0[self]], mlastLogTerm |-> LastTerm((log)[srvId0[self]]), mlastLogIndex |-> Len((log)[srvId0[self]]), msource |-> srvId0[self], mdest |-> idx0[self]] IN
                                                                     /\ ((network)[idx0[self]]).enabled
                                                                     /\ (Cardinality(((network)[idx0[self]]).queue)) < (BufferSize)
                                                                     /\ network' = [network EXCEPT ![idx0[self]] = [queue |-> (((network)[idx0[self]]).queue) \union ({value102}), enabled |-> ((network)[idx0[self]]).enabled]]
                                                                     /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                                     /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                             \/ /\ LET yielded_fd210 == (fd)[idx0[self]] IN
                                                                     /\ yielded_fd210
                                                                     /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                                     /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                                /\ UNCHANGED network
                                                     ELSE /\ idx0' = [idx0 EXCEPT ![self] = (idx0[self]) + (1)]
                                                          /\ pc' = [pc EXCEPT ![self] = "requestVoteLoop"]
                                                          /\ UNCHANGED network
                               ELSE /\ pc' = [pc EXCEPT ![self] = "serverRequestVoteLoop"]
                                    /\ UNCHANGED << network, idx0 >>
                         /\ UNCHANGED << fd, state, currentTerm, commitIndex, 
                                         nextIndex, matchIndex, log, plog, 
                                         votedFor, votesResponded, 
                                         votesGranted, leader, sm, smDomain, 
                                         leaderTimeout, appendEntriesCh, 
                                         becomeLeaderCh, reqCh, respCh, 
                                         requestVoteSrvId, appendEntriesSrvId, 
                                         advanceCommitIndexSrvId, 
                                         becomeLeaderSrvId, crasherSrvId, idx, 
                                         m, srvId, srvId0, idx1, srvId1, 
                                         newCommitIndex, srvId2, srvId3, 
                                         leader0, req, resp, reqIdx, timeout, 
                                         srvId4 >>

s1(self) == serverRequestVoteLoop(self) \/ requestVoteLoop(self)

serverAppendEntriesLoop(self) == /\ pc[self] = "serverAppendEntriesLoop"
                                 /\ \/ /\ (Len((appendEntriesCh)[srvId1[self]])) > (0)
                                       /\ LET res0 == Head((appendEntriesCh)[srvId1[self]]) IN
                                            /\ appendEntriesCh' = [appendEntriesCh EXCEPT ![srvId1[self]] = Tail((appendEntriesCh)[srvId1[self]])]
                                            /\ LET yielded_appendEntriesCh == res0 IN
                                                 IF yielded_appendEntriesCh
                                                    THEN /\ IF ExploreFail
                                                               THEN /\ LET yielded_network50 == ((network)[srvId1[self]]).enabled IN
                                                                         IF ~ (yielded_network50)
                                                                            THEN /\ FALSE
                                                                                 /\ ((state)[srvId1[self]]) = (Leader)
                                                                                 /\ idx1' = [idx1 EXCEPT ![self] = 1]
                                                                                 /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                            ELSE /\ ((state)[srvId1[self]]) = (Leader)
                                                                                 /\ idx1' = [idx1 EXCEPT ![self] = 1]
                                                                                 /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                               ELSE /\ ((state)[srvId1[self]]) = (Leader)
                                                                    /\ idx1' = [idx1 EXCEPT ![self] = 1]
                                                                    /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                    ELSE /\ pc' = [pc EXCEPT ![self] = "Done"]
                                                         /\ idx1' = idx1
                                    \/ /\ ((appendEntriesCh)[srvId1[self]]) = (<<>>)
                                       /\ LET yielded_appendEntriesCh0 == TRUE IN
                                            IF yielded_appendEntriesCh0
                                               THEN /\ IF ExploreFail
                                                          THEN /\ LET yielded_network51 == ((network)[srvId1[self]]).enabled IN
                                                                    IF ~ (yielded_network51)
                                                                       THEN /\ FALSE
                                                                            /\ ((state)[srvId1[self]]) = (Leader)
                                                                            /\ idx1' = [idx1 EXCEPT ![self] = 1]
                                                                            /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                       ELSE /\ ((state)[srvId1[self]]) = (Leader)
                                                                            /\ idx1' = [idx1 EXCEPT ![self] = 1]
                                                                            /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                          ELSE /\ ((state)[srvId1[self]]) = (Leader)
                                                               /\ idx1' = [idx1 EXCEPT ![self] = 1]
                                                               /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                               ELSE /\ pc' = [pc EXCEPT ![self] = "Done"]
                                                    /\ idx1' = idx1
                                       /\ UNCHANGED appendEntriesCh
                                 /\ UNCHANGED << network, fd, state, 
                                                 currentTerm, commitIndex, 
                                                 nextIndex, matchIndex, log, 
                                                 plog, votedFor, 
                                                 votesResponded, votesGranted, 
                                                 leader, sm, smDomain, 
                                                 leaderTimeout, becomeLeaderCh, 
                                                 reqCh, respCh, 
                                                 requestVoteSrvId, 
                                                 appendEntriesSrvId, 
                                                 advanceCommitIndexSrvId, 
                                                 becomeLeaderSrvId, 
                                                 crasherSrvId, idx, m, srvId, 
                                                 idx0, srvId0, srvId1, 
                                                 newCommitIndex, srvId2, 
                                                 srvId3, leader0, req, resp, 
                                                 reqIdx, timeout, srvId4 >>

appendEntriesLoop(self) == /\ pc[self] = "appendEntriesLoop"
                           /\ IF (((state)[srvId1[self]]) = (Leader)) /\ ((idx1[self]) <= (NumServers))
                                 THEN /\ IF ExploreFail
                                            THEN /\ LET yielded_network60 == ((network)[srvId1[self]]).enabled IN
                                                      IF ~ (yielded_network60)
                                                         THEN /\ FALSE
                                                              /\ IF (idx1[self]) # (srvId1[self])
                                                                    THEN /\ LET prevLogIndex3 == (((nextIndex)[srvId1[self]])[idx1[self]]) - (1) IN
                                                                              LET prevLogTerm3 == IF (prevLogIndex3) > (0) THEN (((log)[srvId1[self]])[prevLogIndex3]).term ELSE 0 IN
                                                                                LET entries3 == SubSeq((log)[srvId1[self]], ((nextIndex)[srvId1[self]])[idx1[self]], Len((log)[srvId1[self]])) IN
                                                                                  \/ /\ LET value114 == [mtype |-> AppendEntriesRequest, mterm |-> (currentTerm)[srvId1[self]], mprevLogIndex |-> prevLogIndex3, mprevLogTerm |-> prevLogTerm3, mentries |-> entries3, mcommitIndex |-> (commitIndex)[srvId1[self]], msource |-> srvId1[self], mdest |-> idx1[self]] IN
                                                                                          /\ ((network)[idx1[self]]).enabled
                                                                                          /\ (Cardinality(((network)[idx1[self]]).queue)) < (BufferSize)
                                                                                          /\ network' = [network EXCEPT ![idx1[self]] = [queue |-> (((network)[idx1[self]]).queue) \union ({value114}), enabled |-> ((network)[idx1[self]]).enabled]]
                                                                                          /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                                                          /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                                  \/ /\ LET yielded_fd30 == (fd)[idx1[self]] IN
                                                                                          /\ yielded_fd30
                                                                                          /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                                                          /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                                     /\ UNCHANGED network
                                                                    ELSE /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                                         /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                         /\ UNCHANGED network
                                                         ELSE /\ IF (idx1[self]) # (srvId1[self])
                                                                    THEN /\ LET prevLogIndex4 == (((nextIndex)[srvId1[self]])[idx1[self]]) - (1) IN
                                                                              LET prevLogTerm4 == IF (prevLogIndex4) > (0) THEN (((log)[srvId1[self]])[prevLogIndex4]).term ELSE 0 IN
                                                                                LET entries4 == SubSeq((log)[srvId1[self]], ((nextIndex)[srvId1[self]])[idx1[self]], Len((log)[srvId1[self]])) IN
                                                                                  \/ /\ LET value115 == [mtype |-> AppendEntriesRequest, mterm |-> (currentTerm)[srvId1[self]], mprevLogIndex |-> prevLogIndex4, mprevLogTerm |-> prevLogTerm4, mentries |-> entries4, mcommitIndex |-> (commitIndex)[srvId1[self]], msource |-> srvId1[self], mdest |-> idx1[self]] IN
                                                                                          /\ ((network)[idx1[self]]).enabled
                                                                                          /\ (Cardinality(((network)[idx1[self]]).queue)) < (BufferSize)
                                                                                          /\ network' = [network EXCEPT ![idx1[self]] = [queue |-> (((network)[idx1[self]]).queue) \union ({value115}), enabled |-> ((network)[idx1[self]]).enabled]]
                                                                                          /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                                                          /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                                  \/ /\ LET yielded_fd31 == (fd)[idx1[self]] IN
                                                                                          /\ yielded_fd31
                                                                                          /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                                                          /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                                     /\ UNCHANGED network
                                                                    ELSE /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                                         /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                         /\ UNCHANGED network
                                            ELSE /\ IF (idx1[self]) # (srvId1[self])
                                                       THEN /\ LET prevLogIndex5 == (((nextIndex)[srvId1[self]])[idx1[self]]) - (1) IN
                                                                 LET prevLogTerm5 == IF (prevLogIndex5) > (0) THEN (((log)[srvId1[self]])[prevLogIndex5]).term ELSE 0 IN
                                                                   LET entries5 == SubSeq((log)[srvId1[self]], ((nextIndex)[srvId1[self]])[idx1[self]], Len((log)[srvId1[self]])) IN
                                                                     \/ /\ LET value116 == [mtype |-> AppendEntriesRequest, mterm |-> (currentTerm)[srvId1[self]], mprevLogIndex |-> prevLogIndex5, mprevLogTerm |-> prevLogTerm5, mentries |-> entries5, mcommitIndex |-> (commitIndex)[srvId1[self]], msource |-> srvId1[self], mdest |-> idx1[self]] IN
                                                                             /\ ((network)[idx1[self]]).enabled
                                                                             /\ (Cardinality(((network)[idx1[self]]).queue)) < (BufferSize)
                                                                             /\ network' = [network EXCEPT ![idx1[self]] = [queue |-> (((network)[idx1[self]]).queue) \union ({value116}), enabled |-> ((network)[idx1[self]]).enabled]]
                                                                             /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                                             /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                     \/ /\ LET yielded_fd32 == (fd)[idx1[self]] IN
                                                                             /\ yielded_fd32
                                                                             /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                                             /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                                        /\ UNCHANGED network
                                                       ELSE /\ idx1' = [idx1 EXCEPT ![self] = (idx1[self]) + (1)]
                                                            /\ pc' = [pc EXCEPT ![self] = "appendEntriesLoop"]
                                                            /\ UNCHANGED network
                                 ELSE /\ pc' = [pc EXCEPT ![self] = "serverAppendEntriesLoop"]
                                      /\ UNCHANGED << network, idx1 >>
                           /\ UNCHANGED << fd, state, currentTerm, commitIndex, 
                                           nextIndex, matchIndex, log, plog, 
                                           votedFor, votesResponded, 
                                           votesGranted, leader, sm, smDomain, 
                                           leaderTimeout, appendEntriesCh, 
                                           becomeLeaderCh, reqCh, respCh, 
                                           requestVoteSrvId, 
                                           appendEntriesSrvId, 
                                           advanceCommitIndexSrvId, 
                                           becomeLeaderSrvId, crasherSrvId, 
                                           idx, m, srvId, idx0, srvId0, srvId1, 
                                           newCommitIndex, srvId2, srvId3, 
                                           leader0, req, resp, reqIdx, timeout, 
                                           srvId4 >>

s2(self) == serverAppendEntriesLoop(self) \/ appendEntriesLoop(self)

serverAdvanceCommitIndexLoop(self) == /\ pc[self] = "serverAdvanceCommitIndexLoop"
                                      /\ IF TRUE
                                            THEN /\ IF ExploreFail
                                                       THEN /\ LET yielded_network70 == ((network)[srvId2[self]]).enabled IN
                                                                 IF ~ (yielded_network70)
                                                                    THEN /\ FALSE
                                                                         /\ ((state)[srvId2[self]]) = (Leader)
                                                                         /\ LET i == srvId2[self] IN
                                                                              LET maxAgreeIndex == FindMaxAgreeIndex((log)[i], i, (matchIndex)[i]) IN
                                                                                LET nCommitIndex == IF ((maxAgreeIndex) # (Nil)) /\ (((((log)[i])[maxAgreeIndex]).term) = ((currentTerm)[i])) THEN maxAgreeIndex ELSE (commitIndex)[i] IN
                                                                                  /\ newCommitIndex' = [newCommitIndex EXCEPT ![self] = nCommitIndex]
                                                                                  /\ Assert((newCommitIndex'[self]) >= ((commitIndex)[i]), 
                                                                                            "Failure of assertion at line 8811, column 17.")
                                                                                  /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                                                    ELSE /\ ((state)[srvId2[self]]) = (Leader)
                                                                         /\ LET i == srvId2[self] IN
                                                                              LET maxAgreeIndex == FindMaxAgreeIndex((log)[i], i, (matchIndex)[i]) IN
                                                                                LET nCommitIndex == IF ((maxAgreeIndex) # (Nil)) /\ (((((log)[i])[maxAgreeIndex]).term) = ((currentTerm)[i])) THEN maxAgreeIndex ELSE (commitIndex)[i] IN
                                                                                  /\ newCommitIndex' = [newCommitIndex EXCEPT ![self] = nCommitIndex]
                                                                                  /\ Assert((newCommitIndex'[self]) >= ((commitIndex)[i]), 
                                                                                            "Failure of assertion at line 8822, column 17.")
                                                                                  /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                                       ELSE /\ ((state)[srvId2[self]]) = (Leader)
                                                            /\ LET i == srvId2[self] IN
                                                                 LET maxAgreeIndex == FindMaxAgreeIndex((log)[i], i, (matchIndex)[i]) IN
                                                                   LET nCommitIndex == IF ((maxAgreeIndex) # (Nil)) /\ (((((log)[i])[maxAgreeIndex]).term) = ((currentTerm)[i])) THEN maxAgreeIndex ELSE (commitIndex)[i] IN
                                                                     /\ newCommitIndex' = [newCommitIndex EXCEPT ![self] = nCommitIndex]
                                                                     /\ Assert((newCommitIndex'[self]) >= ((commitIndex)[i]), 
                                                                               "Failure of assertion at line 8835, column 13.")
                                                                     /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                            ELSE /\ pc' = [pc EXCEPT ![self] = "Done"]
                                                 /\ UNCHANGED newCommitIndex
                                      /\ UNCHANGED << network, fd, state, 
                                                      currentTerm, commitIndex, 
                                                      nextIndex, matchIndex, 
                                                      log, plog, votedFor, 
                                                      votesResponded, 
                                                      votesGranted, leader, sm, 
                                                      smDomain, leaderTimeout, 
                                                      appendEntriesCh, 
                                                      becomeLeaderCh, reqCh, 
                                                      respCh, requestVoteSrvId, 
                                                      appendEntriesSrvId, 
                                                      advanceCommitIndexSrvId, 
                                                      becomeLeaderSrvId, 
                                                      crasherSrvId, idx, m, 
                                                      srvId, idx0, srvId0, 
                                                      idx1, srvId1, srvId2, 
                                                      srvId3, leader0, req, 
                                                      resp, reqIdx, timeout, 
                                                      srvId4 >>

applyLoop(self) == /\ pc[self] = "applyLoop"
                   /\ IF ((commitIndex)[srvId2[self]]) < (newCommitIndex[self])
                         THEN /\ IF ExploreFail
                                    THEN /\ LET yielded_network80 == ((network)[srvId2[self]]).enabled IN
                                              IF ~ (yielded_network80)
                                                 THEN /\ FALSE
                                                      /\ commitIndex' = [commitIndex EXCEPT ![srvId2[self]] = ((commitIndex)[srvId2[self]]) + (1)]
                                                      /\ LET i == srvId2[self] IN
                                                           LET k == (commitIndex')[i] IN
                                                             LET entry == ((log)[i])[k] IN
                                                               LET cmd == (entry).cmd IN
                                                                 LET respType == IF ((cmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse IN
                                                                   IF ((cmd).type) = (Put)
                                                                      THEN /\ sm' = [sm EXCEPT ![i] = ((sm)[i]) @@ (((cmd).key) :> ((cmd).value))]
                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = ((smDomain)[i]) \union ({(cmd).key})]
                                                                           /\ LET reqOk == ((cmd).key) \in ((smDomain')[i]) IN
                                                                                LET value120 == [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm')[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client] IN
                                                                                  /\ ((network)[(entry).client]).enabled
                                                                                  /\ (Cardinality(((network)[(entry).client]).queue)) < (BufferSize)
                                                                                  /\ network' = [network EXCEPT ![(entry).client] = [queue |-> (((network)[(entry).client]).queue) \union ({value120}), enabled |-> ((network)[(entry).client]).enabled]]
                                                                                  /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                                                      ELSE /\ LET reqOk == ((cmd).key) \in ((smDomain)[i]) IN
                                                                                LET value121 == [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client] IN
                                                                                  /\ ((network)[(entry).client]).enabled
                                                                                  /\ (Cardinality(((network)[(entry).client]).queue)) < (BufferSize)
                                                                                  /\ network' = [network EXCEPT ![(entry).client] = [queue |-> (((network)[(entry).client]).queue) \union ({value121}), enabled |-> ((network)[(entry).client]).enabled]]
                                                                                  /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                                                           /\ UNCHANGED << sm, 
                                                                                           smDomain >>
                                                 ELSE /\ commitIndex' = [commitIndex EXCEPT ![srvId2[self]] = ((commitIndex)[srvId2[self]]) + (1)]
                                                      /\ LET i == srvId2[self] IN
                                                           LET k == (commitIndex')[i] IN
                                                             LET entry == ((log)[i])[k] IN
                                                               LET cmd == (entry).cmd IN
                                                                 LET respType == IF ((cmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse IN
                                                                   IF ((cmd).type) = (Put)
                                                                      THEN /\ sm' = [sm EXCEPT ![i] = ((sm)[i]) @@ (((cmd).key) :> ((cmd).value))]
                                                                           /\ smDomain' = [smDomain EXCEPT ![i] = ((smDomain)[i]) \union ({(cmd).key})]
                                                                           /\ LET reqOk == ((cmd).key) \in ((smDomain')[i]) IN
                                                                                LET value122 == [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm')[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client] IN
                                                                                  /\ ((network)[(entry).client]).enabled
                                                                                  /\ (Cardinality(((network)[(entry).client]).queue)) < (BufferSize)
                                                                                  /\ network' = [network EXCEPT ![(entry).client] = [queue |-> (((network)[(entry).client]).queue) \union ({value122}), enabled |-> ((network)[(entry).client]).enabled]]
                                                                                  /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                                                      ELSE /\ LET reqOk == ((cmd).key) \in ((smDomain)[i]) IN
                                                                                LET value123 == [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client] IN
                                                                                  /\ ((network)[(entry).client]).enabled
                                                                                  /\ (Cardinality(((network)[(entry).client]).queue)) < (BufferSize)
                                                                                  /\ network' = [network EXCEPT ![(entry).client] = [queue |-> (((network)[(entry).client]).queue) \union ({value123}), enabled |-> ((network)[(entry).client]).enabled]]
                                                                                  /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                                                           /\ UNCHANGED << sm, 
                                                                                           smDomain >>
                                    ELSE /\ commitIndex' = [commitIndex EXCEPT ![srvId2[self]] = ((commitIndex)[srvId2[self]]) + (1)]
                                         /\ LET i == srvId2[self] IN
                                              LET k == (commitIndex')[i] IN
                                                LET entry == ((log)[i])[k] IN
                                                  LET cmd == (entry).cmd IN
                                                    LET respType == IF ((cmd).type) = (Put) THEN ClientPutResponse ELSE ClientGetResponse IN
                                                      IF ((cmd).type) = (Put)
                                                         THEN /\ sm' = [sm EXCEPT ![i] = ((sm)[i]) @@ (((cmd).key) :> ((cmd).value))]
                                                              /\ smDomain' = [smDomain EXCEPT ![i] = ((smDomain)[i]) \union ({(cmd).key})]
                                                              /\ LET reqOk == ((cmd).key) \in ((smDomain')[i]) IN
                                                                   LET value124 == [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm')[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client] IN
                                                                     /\ ((network)[(entry).client]).enabled
                                                                     /\ (Cardinality(((network)[(entry).client]).queue)) < (BufferSize)
                                                                     /\ network' = [network EXCEPT ![(entry).client] = [queue |-> (((network)[(entry).client]).queue) \union ({value124}), enabled |-> ((network)[(entry).client]).enabled]]
                                                                     /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                                         ELSE /\ LET reqOk == ((cmd).key) \in ((smDomain)[i]) IN
                                                                   LET value125 == [mtype |-> respType, msuccess |-> TRUE, mresponse |-> [idx |-> (cmd).idx, key |-> (cmd).key, value |-> IF reqOk THEN ((sm)[i])[(cmd).key] ELSE Nil, ok |-> reqOk], mleaderHint |-> i, msource |-> i, mdest |-> (entry).client] IN
                                                                     /\ ((network)[(entry).client]).enabled
                                                                     /\ (Cardinality(((network)[(entry).client]).queue)) < (BufferSize)
                                                                     /\ network' = [network EXCEPT ![(entry).client] = [queue |-> (((network)[(entry).client]).queue) \union ({value125}), enabled |-> ((network)[(entry).client]).enabled]]
                                                                     /\ pc' = [pc EXCEPT ![self] = "applyLoop"]
                                                              /\ UNCHANGED << sm, 
                                                                              smDomain >>
                         ELSE /\ pc' = [pc EXCEPT ![self] = "serverAdvanceCommitIndexLoop"]
                              /\ UNCHANGED << network, commitIndex, sm, 
                                              smDomain >>
                   /\ UNCHANGED << fd, state, currentTerm, nextIndex, 
                                   matchIndex, log, plog, votedFor, 
                                   votesResponded, votesGranted, leader, 
                                   leaderTimeout, appendEntriesCh, 
                                   becomeLeaderCh, reqCh, respCh, 
                                   requestVoteSrvId, appendEntriesSrvId, 
                                   advanceCommitIndexSrvId, becomeLeaderSrvId, 
                                   crasherSrvId, idx, m, srvId, idx0, srvId0, 
                                   idx1, srvId1, newCommitIndex, srvId2, 
                                   srvId3, leader0, req, resp, reqIdx, timeout, 
                                   srvId4 >>

s3(self) == serverAdvanceCommitIndexLoop(self) \/ applyLoop(self)

serverBecomeLeaderLoop(self) == /\ pc[self] = "serverBecomeLeaderLoop"
                                /\ \/ /\ (Len((becomeLeaderCh)[srvId3[self]])) > (0)
                                      /\ LET res1 == Head((becomeLeaderCh)[srvId3[self]]) IN
                                           /\ becomeLeaderCh' = [becomeLeaderCh EXCEPT ![srvId3[self]] = Tail((becomeLeaderCh)[srvId3[self]])]
                                           /\ LET yielded_becomeLeaderCh == res1 IN
                                                IF yielded_becomeLeaderCh
                                                   THEN /\ IF ExploreFail
                                                              THEN /\ LET yielded_network90 == ((network)[srvId3[self]]).enabled IN
                                                                        IF ~ (yielded_network90)
                                                                           THEN /\ FALSE
                                                                                /\ ((state)[srvId3[self]]) = (Candidate)
                                                                                /\ isQuorum((votesGranted)[srvId3[self]])
                                                                                /\ LET i == srvId3[self] IN
                                                                                     /\ state' = [state EXCEPT ![i] = Leader]
                                                                                     /\ nextIndex' = [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]]
                                                                                     /\ matchIndex' = [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]]
                                                                                     /\ leader' = [leader EXCEPT ![i] = i]
                                                                                     /\ LET value130 == TRUE IN
                                                                                          /\ appendEntriesCh' = [appendEntriesCh EXCEPT ![srvId3[self]] = Append((appendEntriesCh)[srvId3[self]], value130)]
                                                                                          /\ IF Debug
                                                                                                THEN /\ PrintT(<<"BecomeLeader", i, (currentTerm)[i], (state')[i], (leader')[i]>>)
                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                                                                                ELSE /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                                                           ELSE /\ ((state)[srvId3[self]]) = (Candidate)
                                                                                /\ isQuorum((votesGranted)[srvId3[self]])
                                                                                /\ LET i == srvId3[self] IN
                                                                                     /\ state' = [state EXCEPT ![i] = Leader]
                                                                                     /\ nextIndex' = [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]]
                                                                                     /\ matchIndex' = [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]]
                                                                                     /\ leader' = [leader EXCEPT ![i] = i]
                                                                                     /\ LET value131 == TRUE IN
                                                                                          /\ appendEntriesCh' = [appendEntriesCh EXCEPT ![srvId3[self]] = Append((appendEntriesCh)[srvId3[self]], value131)]
                                                                                          /\ IF Debug
                                                                                                THEN /\ PrintT(<<"BecomeLeader", i, (currentTerm)[i], (state')[i], (leader')[i]>>)
                                                                                                     /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                                                                                ELSE /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                                              ELSE /\ ((state)[srvId3[self]]) = (Candidate)
                                                                   /\ isQuorum((votesGranted)[srvId3[self]])
                                                                   /\ LET i == srvId3[self] IN
                                                                        /\ state' = [state EXCEPT ![i] = Leader]
                                                                        /\ nextIndex' = [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]]
                                                                        /\ matchIndex' = [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]]
                                                                        /\ leader' = [leader EXCEPT ![i] = i]
                                                                        /\ LET value132 == TRUE IN
                                                                             /\ appendEntriesCh' = [appendEntriesCh EXCEPT ![srvId3[self]] = Append((appendEntriesCh)[srvId3[self]], value132)]
                                                                             /\ IF Debug
                                                                                   THEN /\ PrintT(<<"BecomeLeader", i, (currentTerm)[i], (state')[i], (leader')[i]>>)
                                                                                        /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                                                                   ELSE /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                                   ELSE /\ pc' = [pc EXCEPT ![self] = "Done"]
                                                        /\ UNCHANGED << state, 
                                                                        nextIndex, 
                                                                        matchIndex, 
                                                                        leader, 
                                                                        appendEntriesCh >>
                                   \/ /\ ((becomeLeaderCh)[srvId3[self]]) = (<<>>)
                                      /\ LET yielded_becomeLeaderCh0 == TRUE IN
                                           IF yielded_becomeLeaderCh0
                                              THEN /\ IF ExploreFail
                                                         THEN /\ LET yielded_network91 == ((network)[srvId3[self]]).enabled IN
                                                                   IF ~ (yielded_network91)
                                                                      THEN /\ FALSE
                                                                           /\ ((state)[srvId3[self]]) = (Candidate)
                                                                           /\ isQuorum((votesGranted)[srvId3[self]])
                                                                           /\ LET i == srvId3[self] IN
                                                                                /\ state' = [state EXCEPT ![i] = Leader]
                                                                                /\ nextIndex' = [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]]
                                                                                /\ matchIndex' = [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]]
                                                                                /\ leader' = [leader EXCEPT ![i] = i]
                                                                                /\ LET value133 == TRUE IN
                                                                                     /\ appendEntriesCh' = [appendEntriesCh EXCEPT ![srvId3[self]] = Append((appendEntriesCh)[srvId3[self]], value133)]
                                                                                     /\ IF Debug
                                                                                           THEN /\ PrintT(<<"BecomeLeader", i, (currentTerm)[i], (state')[i], (leader')[i]>>)
                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                                                      ELSE /\ ((state)[srvId3[self]]) = (Candidate)
                                                                           /\ isQuorum((votesGranted)[srvId3[self]])
                                                                           /\ LET i == srvId3[self] IN
                                                                                /\ state' = [state EXCEPT ![i] = Leader]
                                                                                /\ nextIndex' = [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]]
                                                                                /\ matchIndex' = [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]]
                                                                                /\ leader' = [leader EXCEPT ![i] = i]
                                                                                /\ LET value134 == TRUE IN
                                                                                     /\ appendEntriesCh' = [appendEntriesCh EXCEPT ![srvId3[self]] = Append((appendEntriesCh)[srvId3[self]], value134)]
                                                                                     /\ IF Debug
                                                                                           THEN /\ PrintT(<<"BecomeLeader", i, (currentTerm)[i], (state')[i], (leader')[i]>>)
                                                                                                /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                                                                           ELSE /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                                         ELSE /\ ((state)[srvId3[self]]) = (Candidate)
                                                              /\ isQuorum((votesGranted)[srvId3[self]])
                                                              /\ LET i == srvId3[self] IN
                                                                   /\ state' = [state EXCEPT ![i] = Leader]
                                                                   /\ nextIndex' = [nextIndex EXCEPT ![i] = [j \in ServerSet |-> (Len((log)[i])) + (1)]]
                                                                   /\ matchIndex' = [matchIndex EXCEPT ![i] = [j \in ServerSet |-> 0]]
                                                                   /\ leader' = [leader EXCEPT ![i] = i]
                                                                   /\ LET value135 == TRUE IN
                                                                        /\ appendEntriesCh' = [appendEntriesCh EXCEPT ![srvId3[self]] = Append((appendEntriesCh)[srvId3[self]], value135)]
                                                                        /\ IF Debug
                                                                              THEN /\ PrintT(<<"BecomeLeader", i, (currentTerm)[i], (state')[i], (leader')[i]>>)
                                                                                   /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                                                              ELSE /\ pc' = [pc EXCEPT ![self] = "serverBecomeLeaderLoop"]
                                              ELSE /\ pc' = [pc EXCEPT ![self] = "Done"]
                                                   /\ UNCHANGED << state, 
                                                                   nextIndex, 
                                                                   matchIndex, 
                                                                   leader, 
                                                                   appendEntriesCh >>
                                      /\ UNCHANGED becomeLeaderCh
                                /\ UNCHANGED << network, fd, currentTerm, 
                                                commitIndex, log, plog, 
                                                votedFor, votesResponded, 
                                                votesGranted, sm, smDomain, 
                                                leaderTimeout, reqCh, respCh, 
                                                requestVoteSrvId, 
                                                appendEntriesSrvId, 
                                                advanceCommitIndexSrvId, 
                                                becomeLeaderSrvId, 
                                                crasherSrvId, idx, m, srvId, 
                                                idx0, srvId0, idx1, srvId1, 
                                                newCommitIndex, srvId2, srvId3, 
                                                leader0, req, resp, reqIdx, 
                                                timeout, srvId4 >>

s4(self) == serverBecomeLeaderLoop(self)

clientLoop(self) == /\ pc[self] = "clientLoop"
                    /\ IF TRUE
                          THEN /\ \E req00 \in AllReqs:
                                    LET yielded_reqCh0 == req00 IN
                                      /\ req' = [req EXCEPT ![self] = yielded_reqCh0]
                                      /\ reqIdx' = [reqIdx EXCEPT ![self] = (reqIdx[self]) + (1)]
                                      /\ pc' = [pc EXCEPT ![self] = "sndReq"]
                          ELSE /\ pc' = [pc EXCEPT ![self] = "Done"]
                               /\ UNCHANGED << req, reqIdx >>
                    /\ UNCHANGED << network, fd, state, currentTerm, 
                                    commitIndex, nextIndex, matchIndex, log, 
                                    plog, votedFor, votesResponded, 
                                    votesGranted, leader, sm, smDomain, 
                                    leaderTimeout, appendEntriesCh, 
                                    becomeLeaderCh, reqCh, respCh, 
                                    requestVoteSrvId, appendEntriesSrvId, 
                                    advanceCommitIndexSrvId, becomeLeaderSrvId, 
                                    crasherSrvId, idx, m, srvId, idx0, srvId0, 
                                    idx1, srvId1, newCommitIndex, srvId2, 
                                    srvId3, leader0, resp, timeout, srvId4 >>

sndReq(self) == /\ pc[self] = "sndReq"
                /\ IF (leader0[self]) = (Nil)
                      THEN /\ \E srv1 \in ServerSet:
                                /\ leader0' = [leader0 EXCEPT ![self] = srv1]
                                /\ IF Debug
                                      THEN /\ PrintT(<<"ClientSndReq", self, leader0'[self], reqIdx[self], req[self]>>)
                                           /\ IF ((req[self]).type) = (Put)
                                                 THEN /\ \/ /\ LET value140 == [mtype |-> ClientPutRequest, mcmd |-> [idx |-> reqIdx[self], type |-> Put, key |-> (req[self]).key, value |-> (req[self]).value], msource |-> self, mdest |-> leader0'[self]] IN
                                                                 /\ ((network)[leader0'[self]]).enabled
                                                                 /\ (Cardinality(((network)[leader0'[self]]).queue)) < (BufferSize)
                                                                 /\ network' = [network EXCEPT ![leader0'[self]] = [queue |-> (((network)[leader0'[self]]).queue) \union ({value140}), enabled |-> ((network)[leader0'[self]]).enabled]]
                                                                 /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                         \/ /\ LET yielded_fd40 == (fd)[leader0'[self]] IN
                                                                 /\ yielded_fd40
                                                                 /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                            /\ UNCHANGED network
                                                 ELSE /\ IF ((req[self]).type) = (Get)
                                                            THEN /\ \/ /\ LET value150 == [mtype |-> ClientGetRequest, mcmd |-> [idx |-> reqIdx[self], type |-> Get, key |-> (req[self]).key], msource |-> self, mdest |-> leader0'[self]] IN
                                                                            /\ ((network)[leader0'[self]]).enabled
                                                                            /\ (Cardinality(((network)[leader0'[self]]).queue)) < (BufferSize)
                                                                            /\ network' = [network EXCEPT ![leader0'[self]] = [queue |-> (((network)[leader0'[self]]).queue) \union ({value150}), enabled |-> ((network)[leader0'[self]]).enabled]]
                                                                            /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                                    \/ /\ LET yielded_fd50 == (fd)[leader0'[self]] IN
                                                                            /\ yielded_fd50
                                                                            /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                                       /\ UNCHANGED network
                                                            ELSE /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                                 /\ UNCHANGED network
                                      ELSE /\ IF ((req[self]).type) = (Put)
                                                 THEN /\ \/ /\ LET value141 == [mtype |-> ClientPutRequest, mcmd |-> [idx |-> reqIdx[self], type |-> Put, key |-> (req[self]).key, value |-> (req[self]).value], msource |-> self, mdest |-> leader0'[self]] IN
                                                                 /\ ((network)[leader0'[self]]).enabled
                                                                 /\ (Cardinality(((network)[leader0'[self]]).queue)) < (BufferSize)
                                                                 /\ network' = [network EXCEPT ![leader0'[self]] = [queue |-> (((network)[leader0'[self]]).queue) \union ({value141}), enabled |-> ((network)[leader0'[self]]).enabled]]
                                                                 /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                         \/ /\ LET yielded_fd41 == (fd)[leader0'[self]] IN
                                                                 /\ yielded_fd41
                                                                 /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                            /\ UNCHANGED network
                                                 ELSE /\ IF ((req[self]).type) = (Get)
                                                            THEN /\ \/ /\ LET value151 == [mtype |-> ClientGetRequest, mcmd |-> [idx |-> reqIdx[self], type |-> Get, key |-> (req[self]).key], msource |-> self, mdest |-> leader0'[self]] IN
                                                                            /\ ((network)[leader0'[self]]).enabled
                                                                            /\ (Cardinality(((network)[leader0'[self]]).queue)) < (BufferSize)
                                                                            /\ network' = [network EXCEPT ![leader0'[self]] = [queue |-> (((network)[leader0'[self]]).queue) \union ({value151}), enabled |-> ((network)[leader0'[self]]).enabled]]
                                                                            /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                                    \/ /\ LET yielded_fd51 == (fd)[leader0'[self]] IN
                                                                            /\ yielded_fd51
                                                                            /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                                       /\ UNCHANGED network
                                                            ELSE /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                                 /\ UNCHANGED network
                      ELSE /\ IF Debug
                                 THEN /\ PrintT(<<"ClientSndReq", self, leader0[self], reqIdx[self], req[self]>>)
                                      /\ IF ((req[self]).type) = (Put)
                                            THEN /\ \/ /\ LET value142 == [mtype |-> ClientPutRequest, mcmd |-> [idx |-> reqIdx[self], type |-> Put, key |-> (req[self]).key, value |-> (req[self]).value], msource |-> self, mdest |-> leader0[self]] IN
                                                            /\ ((network)[leader0[self]]).enabled
                                                            /\ (Cardinality(((network)[leader0[self]]).queue)) < (BufferSize)
                                                            /\ network' = [network EXCEPT ![leader0[self]] = [queue |-> (((network)[leader0[self]]).queue) \union ({value142}), enabled |-> ((network)[leader0[self]]).enabled]]
                                                            /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                    \/ /\ LET yielded_fd42 == (fd)[leader0[self]] IN
                                                            /\ yielded_fd42
                                                            /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                       /\ UNCHANGED network
                                            ELSE /\ IF ((req[self]).type) = (Get)
                                                       THEN /\ \/ /\ LET value152 == [mtype |-> ClientGetRequest, mcmd |-> [idx |-> reqIdx[self], type |-> Get, key |-> (req[self]).key], msource |-> self, mdest |-> leader0[self]] IN
                                                                       /\ ((network)[leader0[self]]).enabled
                                                                       /\ (Cardinality(((network)[leader0[self]]).queue)) < (BufferSize)
                                                                       /\ network' = [network EXCEPT ![leader0[self]] = [queue |-> (((network)[leader0[self]]).queue) \union ({value152}), enabled |-> ((network)[leader0[self]]).enabled]]
                                                                       /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                               \/ /\ LET yielded_fd52 == (fd)[leader0[self]] IN
                                                                       /\ yielded_fd52
                                                                       /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                                  /\ UNCHANGED network
                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                            /\ UNCHANGED network
                                 ELSE /\ IF ((req[self]).type) = (Put)
                                            THEN /\ \/ /\ LET value143 == [mtype |-> ClientPutRequest, mcmd |-> [idx |-> reqIdx[self], type |-> Put, key |-> (req[self]).key, value |-> (req[self]).value], msource |-> self, mdest |-> leader0[self]] IN
                                                            /\ ((network)[leader0[self]]).enabled
                                                            /\ (Cardinality(((network)[leader0[self]]).queue)) < (BufferSize)
                                                            /\ network' = [network EXCEPT ![leader0[self]] = [queue |-> (((network)[leader0[self]]).queue) \union ({value143}), enabled |-> ((network)[leader0[self]]).enabled]]
                                                            /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                    \/ /\ LET yielded_fd43 == (fd)[leader0[self]] IN
                                                            /\ yielded_fd43
                                                            /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                       /\ UNCHANGED network
                                            ELSE /\ IF ((req[self]).type) = (Get)
                                                       THEN /\ \/ /\ LET value153 == [mtype |-> ClientGetRequest, mcmd |-> [idx |-> reqIdx[self], type |-> Get, key |-> (req[self]).key], msource |-> self, mdest |-> leader0[self]] IN
                                                                       /\ ((network)[leader0[self]]).enabled
                                                                       /\ (Cardinality(((network)[leader0[self]]).queue)) < (BufferSize)
                                                                       /\ network' = [network EXCEPT ![leader0[self]] = [queue |-> (((network)[leader0[self]]).queue) \union ({value153}), enabled |-> ((network)[leader0[self]]).enabled]]
                                                                       /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                               \/ /\ LET yielded_fd53 == (fd)[leader0[self]] IN
                                                                       /\ yielded_fd53
                                                                       /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                                  /\ UNCHANGED network
                                                       ELSE /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                            /\ UNCHANGED network
                           /\ UNCHANGED leader0
                /\ UNCHANGED << fd, state, currentTerm, commitIndex, nextIndex, 
                                matchIndex, log, plog, votedFor, 
                                votesResponded, votesGranted, leader, sm, 
                                smDomain, leaderTimeout, appendEntriesCh, 
                                becomeLeaderCh, reqCh, respCh, 
                                requestVoteSrvId, appendEntriesSrvId, 
                                advanceCommitIndexSrvId, becomeLeaderSrvId, 
                                crasherSrvId, idx, m, srvId, idx0, srvId0, 
                                idx1, srvId1, newCommitIndex, srvId2, srvId3, 
                                req, resp, reqIdx, timeout, srvId4 >>

rcvResp(self) == /\ pc[self] = "rcvResp"
                 /\ \/ /\ Assert(((network)[self]).enabled, 
                                 "Failure of assertion at line 9265, column 9.")
                       /\ (Cardinality(((network)[self]).queue)) > (0)
                       /\ \E readMsg10 \in ((network)[self]).queue:
                            /\ network' = [network EXCEPT ![self] = [queue |-> (((network)[self]).queue) \ ({readMsg10}), enabled |-> ((network)[self]).enabled]]
                            /\ LET yielded_network100 == readMsg10 IN
                                 /\ resp' = [resp EXCEPT ![self] = yielded_network100]
                                 /\ IF Debug
                                       THEN /\ PrintT(<<"ClientRcvResp", self, leader0[self], reqIdx[self], resp'[self]>>)
                                            /\ Assert(((resp'[self]).mdest) = (self), 
                                                      "Failure of assertion at line 9273, column 15.")
                                            /\ IF (((resp'[self]).mresponse).idx) # (reqIdx[self])
                                                  THEN /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                       /\ UNCHANGED << respCh, 
                                                                       leader0 >>
                                                  ELSE /\ leader0' = [leader0 EXCEPT ![self] = (resp'[self]).mleaderHint]
                                                       /\ Assert(((((req[self]).type) = (Get)) => (((resp'[self]).mtype) = (ClientGetResponse))) /\ ((((req[self]).type) = (Put)) => (((resp'[self]).mtype) = (ClientPutResponse))), 
                                                                 "Failure of assertion at line 9278, column 17.")
                                                       /\ IF ~ ((resp'[self]).msuccess)
                                                             THEN /\ pc' = [pc EXCEPT ![self] = "sndReq"]
                                                                  /\ UNCHANGED respCh
                                                             ELSE /\ Assert(((((resp'[self]).mresponse).idx) = (reqIdx[self])) /\ ((((resp'[self]).mresponse).key) = ((req[self]).key)), 
                                                                            "Failure of assertion at line 9282, column 19.")
                                                                  /\ respCh' = resp'[self]
                                                                  /\ IF Debug
                                                                        THEN /\ PrintT(<<"ClientRcvChDone", self, leader0'[self], reqIdx[self], resp'[self]>>)
                                                                             /\ pc' = [pc EXCEPT ![self] = "clientLoop"]
                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "clientLoop"]
                                       ELSE /\ Assert(((resp'[self]).mdest) = (self), 
                                                      "Failure of assertion at line 9293, column 15.")
                                            /\ IF (((resp'[self]).mresponse).idx) # (reqIdx[self])
                                                  THEN /\ pc' = [pc EXCEPT ![self] = "rcvResp"]
                                                       /\ UNCHANGED << respCh, 
                                                                       leader0 >>
                                                  ELSE /\ leader0' = [leader0 EXCEPT ![self] = (resp'[self]).mleaderHint]
                                                       /\ Assert(((((req[self]).type) = (Get)) => (((resp'[self]).mtype) = (ClientGetResponse))) /\ ((((req[self]).type) = (Put)) => (((resp'[self]).mtype) = (ClientPutResponse))), 
                                                                 "Failure of assertion at line 9298, column 17.")
                                                       /\ IF ~ ((resp'[self]).msuccess)
                                                             THEN /\ pc' = [pc EXCEPT ![self] = "sndReq"]
                                                                  /\ UNCHANGED respCh
                                                             ELSE /\ Assert(((((resp'[self]).mresponse).idx) = (reqIdx[self])) /\ ((((resp'[self]).mresponse).key) = ((req[self]).key)), 
                                                                            "Failure of assertion at line 9302, column 19.")
                                                                  /\ respCh' = resp'[self]
                                                                  /\ IF Debug
                                                                        THEN /\ PrintT(<<"ClientRcvChDone", self, leader0'[self], reqIdx[self], resp'[self]>>)
                                                                             /\ pc' = [pc EXCEPT ![self] = "clientLoop"]
                                                                        ELSE /\ pc' = [pc EXCEPT ![self] = "clientLoop"]
                    \/ /\ LET yielded_fd60 == (fd)[leader0[self]] IN
                            \E len10 \in (0) .. (Cardinality(((network)[self]).queue)):
                              LET yielded_network110 == len10 IN
                                /\ ((yielded_fd60) /\ ((yielded_network110) = (0))) \/ (timeout[self])
                                /\ IF Debug
                                      THEN /\ PrintT(<<"ClientTimeout", self, leader0[self], reqIdx[self]>>)
                                           /\ leader0' = [leader0 EXCEPT ![self] = Nil]
                                           /\ pc' = [pc EXCEPT ![self] = "sndReq"]
                                      ELSE /\ leader0' = [leader0 EXCEPT ![self] = Nil]
                                           /\ pc' = [pc EXCEPT ![self] = "sndReq"]
                       /\ UNCHANGED <<network, respCh, resp>>
                 /\ UNCHANGED << fd, state, currentTerm, commitIndex, 
                                 nextIndex, matchIndex, log, plog, votedFor, 
                                 votesResponded, votesGranted, leader, sm, 
                                 smDomain, leaderTimeout, appendEntriesCh, 
                                 becomeLeaderCh, reqCh, requestVoteSrvId, 
                                 appendEntriesSrvId, advanceCommitIndexSrvId, 
                                 becomeLeaderSrvId, crasherSrvId, idx, m, 
                                 srvId, idx0, srvId0, idx1, srvId1, 
                                 newCommitIndex, srvId2, srvId3, req, reqIdx, 
                                 timeout, srvId4 >>

client(self) == clientLoop(self) \/ sndReq(self) \/ rcvResp(self)

serverCrash(self) == /\ pc[self] = "serverCrash"
                     /\ LET value160 == FALSE IN
                          /\ network' = [network EXCEPT ![srvId4[self]] = [queue |-> ((network)[srvId4[self]]).queue, enabled |-> value160]]
                          /\ pc' = [pc EXCEPT ![self] = "fdUpdate"]
                     /\ UNCHANGED << fd, state, currentTerm, commitIndex, 
                                     nextIndex, matchIndex, log, plog, 
                                     votedFor, votesResponded, votesGranted, 
                                     leader, sm, smDomain, leaderTimeout, 
                                     appendEntriesCh, becomeLeaderCh, reqCh, 
                                     respCh, requestVoteSrvId, 
                                     appendEntriesSrvId, 
                                     advanceCommitIndexSrvId, 
                                     becomeLeaderSrvId, crasherSrvId, idx, m, 
                                     srvId, idx0, srvId0, idx1, srvId1, 
                                     newCommitIndex, srvId2, srvId3, leader0, 
                                     req, resp, reqIdx, timeout, srvId4 >>

fdUpdate(self) == /\ pc[self] = "fdUpdate"
                  /\ LET value170 == TRUE IN
                       /\ fd' = [fd EXCEPT ![srvId4[self]] = value170]
                       /\ pc' = [pc EXCEPT ![self] = "Done"]
                  /\ UNCHANGED << network, state, currentTerm, commitIndex, 
                                  nextIndex, matchIndex, log, plog, votedFor, 
                                  votesResponded, votesGranted, leader, sm, 
                                  smDomain, leaderTimeout, appendEntriesCh, 
                                  becomeLeaderCh, reqCh, respCh, 
                                  requestVoteSrvId, appendEntriesSrvId, 
                                  advanceCommitIndexSrvId, becomeLeaderSrvId, 
                                  crasherSrvId, idx, m, srvId, idx0, srvId0, 
                                  idx1, srvId1, newCommitIndex, srvId2, srvId3, 
                                  leader0, req, resp, reqIdx, timeout, srvId4 >>

crasher(self) == serverCrash(self) \/ fdUpdate(self)

(* Allow infinite stuttering to prevent deadlock on termination. *)
Terminating == /\ \A self \in ProcSet: pc[self] = "Done"
               /\ UNCHANGED vars

Next == (\E self \in ServerSet: s0(self))
           \/ (\E self \in ServerRequestVoteSet: s1(self))
           \/ (\E self \in ServerAppendEntriesSet: s2(self))
           \/ (\E self \in ServerAdvanceCommitIndexSet: s3(self))
           \/ (\E self \in ServerBecomeLeaderSet: s4(self))
           \/ (\E self \in ClientSet: client(self))
           \/ (\E self \in ServerCrasherSet: crasher(self))
           \/ Terminating

Spec == /\ Init /\ [][Next]_vars
        /\ \A self \in ServerSet : WF_vars(s0(self))
        /\ \A self \in ServerRequestVoteSet : WF_vars(s1(self))
        /\ \A self \in ServerAppendEntriesSet : WF_vars(s2(self))
        /\ \A self \in ServerAdvanceCommitIndexSet : WF_vars(s3(self))
        /\ \A self \in ServerBecomeLeaderSet : WF_vars(s4(self))
        /\ \A self \in ClientSet : WF_vars(client(self))
        /\ \A self \in ServerCrasherSet : WF_vars(crasher(self))

Termination == <>(\A self \in ProcSet: pc[self] = "Done")

\* END TRANSLATION  TLA-f157040c4fee3bde8856de68970be59d

\* Constraints

LimitTerm == \A i \in ServerSet: currentTerm[i] < MaxTerm
LimitCommitIndex == \A i \in ServerSet: commitIndex[i] < MaxCommitIndex

LimitNodeFailure == Cardinality({i \in ServerSet: \lnot network[i].enabled}) <= MaxNodeFail

MCConstraint ==
    /\ LimitTerm
    /\ LimitCommitIndex
    /\ LimitNodeFailure

\* Invariants

ElectionSafety == \lnot (\E i, j \in ServerSet:
                                        /\ i /= j
                                        /\ currentTerm[i] = currentTerm[j]
                                        /\ state[i] = Leader
                                        /\ state[j] = Leader)

LogMatching == \A i, j \in ServerSet:
                        \A k \in 1..Min({Len(log[i]), Len(log[j])}):
                            log[i][k].term = log[j][k].term
                                => SubSeq(log[i], 1, k) = SubSeq(log[j], 1, k)

LeaderCompleteness == \A i \in ServerSet:
                        \A logIdx \in DOMAIN log[i]:
                          logIdx <= commitIndex[i] =>
                            \A j \in ServerSet:
                              state[j] = Leader /\ currentTerm[j] >= log[i][logIdx].term =>
                                /\ logIdx \in DOMAIN log[j]
                                /\ log[i][logIdx] = log[j][logIdx]

StateMachineSafety == \A i, j \in ServerSet:
                            \A k \in 1..Min({commitIndex[i], commitIndex[j]}):
                                        log[i][k] = log[j][k]

ApplyLogOK == \A i, j \in ServerSet:
                    commitIndex[i] = commitIndex[j] => 
                        /\ sm[i] = sm[j]
                        /\ smDomain[i] = smDomain[j]

plogOK == \A i \in ServerSet: log[i] = plog[i]

TermOK == \A i \in ServerSet: currentTerm[i] <= MaxTerm
CommitIndexOK == \A i \in ServerSet: commitIndex[i] <= MaxCommitIndex
NodeFailOK == Cardinality({i \in ServerSet: \lnot network[i].enabled}) <= MaxNodeFail+1

\* Properties

LeaderAppendOnly == [][\A i \in ServerSet:
                        (state[i] = Leader /\ state'[i] = Leader)
                            => log[i] = SubSeq(log'[i], 1, Len(log[i]))]_vars

ClientRcvResp(i) == pc[i] = "rcvResp" ~> pc[i] = "clientLoop"
ClientsOK == \A i \in ClientSet: ClientRcvResp(i)

\* Expected this to be violated if NumServers > 1,
\* but TLC doesn't report violation in case of NumServers = 2 because 
\* of using temporal properties and state constraints at the same time. 
\* TLC reports violation when NumServers = 3.
ElectionLiveness == []<>(\E i \in ServerSet: state[i] = Leader)

=============================================================================
